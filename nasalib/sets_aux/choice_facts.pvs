%--------------------------------------------------------------%
%   Author: Dragan Stosic                                      %
%--------------------------------------------------------------%

relational_choice[T, U: TYPE+]: THEORY
 BEGIN
 IMPORTING relation_implication[T,U] 
  
  rel_unique_choice: bool =
      FORALL (R: pred[[T, U]]):
        (FORALL (t: T): EXISTS (u: U): R(t, u))
         IMPLIES
          (EXISTS (R1: pred[[T, U]]):
            (FORALL (t: T):
               EXISTS (u: U):
                 R(t, u) AND
                   R1(t, u) AND (FORALL (u1: U): R1(t, u1) IMPLIES u = u1)))

  rel_choice: bool =
      FORALL (R: pred[[T, U]]):
        (FORALL (t: T): EXISTS (u: U): R(t, u)) IMPLIES
         (EXISTS (R1: pred[[T, U]]):
              (R1 |- R) AND
             (FORALL (t: T): EXISTS (u: U): R1(t, u)))

  conditional_relational_choice: bool =
      FORALL (P:pred[T])(R:pred[[T,U]]):
        (FORALL (t:T):P(t) IMPLIES  EXISTS (u:U): R(t,u))IMPLIES
           EXISTS (R1:pred[[T,U]]):
             (FORALL (t:T): P(t) IMPLIES
                EXISTS (u:U): R(t,u) AND R1(t,u) AND 
                  (FORALL (u1:U): R1(t,u1) IMPLIES  u = u1))

  fun_choice: bool =
      FORALL (R: pred[[T, U]]):
        (FORALL (t: T): EXISTS (u: U): R(t, u)) IMPLIES
         (EXISTS (f:[T-> U]): (FORALL (t: T): R(t, f(t))))

  parametric_definite_description: bool =
      FORALL (R: pred[[T, U]]):
        (FORALL (t: T):
           EXISTS (u: U):
             R(t, u) AND (FORALL (u1: U): R(t, u1) IMPLIES u = u1))
               IMPLIES 
                 (EXISTS (f:[T-> U]): FORALL (t: T): R(t, f(t)))

  proof_irrelevance: bool = FORALL (a1,a2:bool): a1 = a2

  independence_of_premises: bool =
     FORALL(P:pred[T])(Q:bool):
        (Q IMPLIES EXISTS(t:T):P(t)) IMPLIES 
           EXISTS(t:T): Q IMPLIES P(t)

  AUTO_REWRITE+ fun_choice, rel_unique_choice, 
                  parametric_definite_description,
                    independence_of_premises,proof_irrelevance,
                      conditional_relational_choice

 END relational_choice
