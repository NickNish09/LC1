(fubini_tonelli_scaf
 (product_measure_contraction_TCC1 0
  (product_measure_contraction_TCC1-1 nil 3459570741
   ("" (skosimp)
    (("" (expand "measurable_set?")
      (("" (rewrite "cross_product_is_sigma_times") nil nil)) nil))
    nil)
   ((measurable_set? const-decl "bool" measure_space_def nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil))
   nil))
 (product_measure_contraction_TCC2 0
  (product_measure_contraction_TCC2-1 nil 3459570741
   ("" (skosimp)
    (("" (expand "measurable_set?") (("" (propax) nil nil)) nil)) nil)
   ((measurable_set? const-decl "bool" measure_space_def nil)) nil))
 (product_measure_contraction_TCC3 0
  (product_measure_contraction_TCC3-1 nil 3459570741
   ("" (skosimp)
    (("" (expand "measurable_set?") (("" (propax) nil nil)) nil)) nil)
   ((measurable_set? const-decl "bool" measure_space_def nil)) nil))
 (product_measure_contraction 0
  (product_measure_contraction-1 nil 3460776966
   ("" (skosimp)
    (("" (lemma "cross_product_is_sigma_times" ("X" "X!1" "Y" "Y!1"))
      ((""
        (lemma "measurable_intersection"
         ("a" "cross_product(X!1, Y!1)" "b" "E!1"))
        (("1" (expand "contraction" 1 1)
          (("1"
            (name "F"
                  "lambda j: fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                           x_section(intersection
                                                     (cross_product(X!1, Y!1),
                                                      E!1))")
            (("1" (case "forall j,x: F(j)(x)>=0")
              (("1"
                (name "MU" "lambda i: fm_contraction[T1, S1]
                                                         (mu, A_of(mu)(i))")
                (("1"
                  (case "forall (E:(S1)): x_eq(mu(E),
                            x_sum(LAMBDA i: to_measure(MU(i))(E)))")
                  (("1"
                    (case "forall i,j: integrable?[T1,S1,to_measure(MU(i))](F(j))")
                    (("1"
                      (case "forall x: measurable_set?(x_section(intersection(cross_product(X!1, Y!1), E!1),x))")
                      (("1"
                        (name "EE"
                              "intersection(cross_product(X!1, Y!1),
                                                                    E!1)")
                        (("1" (replace -1)
                          (("1"
                            (case "forall x: x_eq(x_sum(lambda j: F(j)(x)),nu(x_section(EE,x)))")
                            (("1" (hide -6 -8)
                              (("1"
                                (case
                                 "forall x: measurable_set?(x_section(E!1,x))")
                                (("1"
                                  (name
                                   "G"
                                   "lambda j: (fm_contraction[T2, S2]
                                                              (contraction(nu, Y!1),
                                                               A_of(contraction(nu, Y!1))(j))
                                                           o x_section(E!1))")
                                  (("1"
                                    (case "forall j,x: G(j)(x)>=0")
                                    (("1"
                                      (name
                                       "NU"
                                       "lambda i: fm_contraction[T1, S1]
                                                                         (contraction(mu, X!1),
                                                                          A_of
                                                                          (contraction(mu, X!1))(i))")
                                      (("1"
                                        (case
                                         "forall i,j: integrable?[T1,S1,to_measure(NU(i))](G(j))")
                                        (("1"
                                          (hide -2 -4)
                                          (("1"
                                            (case
                                             "FORALL (E: (S1)): x_eq(contraction(mu, X!1)(E), x_sum(LAMBDA i: to_measure(NU(i))(E)))")
                                            (("1"
                                              (case
                                               "FORALL x: x_eq(x_sum(LAMBDA j: G(j)(x)), contraction(nu, Y!1)(x_section(E!1, x)))")
                                              (("1"
                                                (case
                                                 "forall x: X!1(x)=> x_eq(contraction(nu, Y!1)(x_section(E!1, x)), nu(x_section(EE, x)))")
                                                (("1"
                                                  (case
                                                   "x_eq(x_sum(LAMBDA i:
                                                     x_sum(LAMBDA j:
                                                             (TRUE,
                                                              integral
                                                                  [T1, S1,
                                                                   to_measure(MU(i))]
                                                                  (F(j))))),
                                             x_sum(LAMBDA i:
                                                     x_sum(LAMBDA j:
                                                             (TRUE,
                                                              integral
                                                                  [T1, S1,
                                                                   to_measure(NU(i))]
                                                                  (G(j))))))")
                                                  (("1"
                                                    (expand "m_times")
                                                    (("1"
                                                      (expand
                                                       "to_measure"
                                                       1)
                                                      (("1"
                                                        (expand
                                                         "product_measure_approx")
                                                        (("1"
                                                          (expand
                                                           "fm_times")
                                                          (("1"
                                                            (lemma
                                                             "x_sum_eq"
                                                             ("S"
                                                              "LAMBDA i:
                                                        x_sum(LAMBDA j:
                                                                (TRUE,
                                                                 integral[T1, S1, to_measure(MU(i))](F(j))))"
                                                              "T"
                                                              "LAMBDA i:
                                                        x_sum(LAMBDA j:
                                                                (TRUE,
                                                                 integral
                                                                     [T1, S1,
                                                                      to_measure(fm_contraction[T1, S1]
                                                                                 (mu, A_of(mu)(i)))]
                                                                     (fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                                                       x_section(EE))))"))
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (lemma
                                                                 "x_sum_eq"
                                                                 ("S"
                                                                  "LAMBDA i:
                                                            x_sum(LAMBDA j:
                                                                    (TRUE,
                                                                     integral
                                                                         [T1, S1,
                                                                          to_measure(fm_contraction[T1, S1]
                                                                                     (contraction(mu, X!1),
                                                                                      A_of
                                                                                      (contraction(mu, X!1))(i)))]
                                                                         (fm_contraction[T2, S2]
                                                                              (contraction(nu, Y!1),
                                                                               A_of(contraction(nu, Y!1))(j))
                                                                           o x_section(E!1))))"
                                                                  "T"
                                                                  "LAMBDA i:
                                                            x_sum(LAMBDA j:
                                                                    (TRUE,
                                                                     integral[T1, S1, to_measure(NU(i))](G(j))))"))
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     (-1
                                                                      -2
                                                                      -3
                                                                      1))
                                                                    (("1"
                                                                      (expand
                                                                       "x_eq")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     2
                                                                     -1
                                                                     -2)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skolem
                                                                         +
                                                                         "i!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "x_sum_eq"
                                                                           ("S"
                                                                            "LAMBDA j:
                                                                (TRUE,
                                                                 integral
                                                                     [T1, S1,
                                                                      to_measure(fm_contraction[T1, S1]
                                                                                 (contraction(mu, X!1),
                                                                                  A_of(contraction(mu, X!1))(i!1)))]
                                                                     (fm_contraction[T2, S2]
                                                                          (contraction(nu, Y!1),
                                                                           A_of(contraction(nu, Y!1))(j))
                                                                       o x_section(E!1)))"
                                                                            "T"
                                                                            "LAMBDA j:
                                                                (TRUE, integral[T1, S1, to_measure(NU(i!1))](G(j)))"))
                                                                          (("1"
                                                                            (split)
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skolem
                                                                                   +
                                                                                   "j!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "x_eq"
                                                                                     1)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -4
                                                                                       "i!1"
                                                                                       "j!1")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "measure_eq_integral[T1,S1]"
                                                                                         ("mu"
                                                                                          "to_measure(fm_contraction[T1, S1]
                                                                           (contraction(mu, X!1),
                                                                            A_of(contraction(mu, X!1))(i!1)))"
                                                                                          "nu"
                                                                                          "to_measure(NU(i!1))"
                                                                                          "f"
                                                                                          "G(j!1)"))
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "G")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  -6
                                                                                                  -8
                                                                                                  -9
                                                                                                  -13))
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "to_measure")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "x_eq")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "NU")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (inst
                                                                                 -4
                                                                                 "i!1"
                                                                                 "j!1")
                                                                                (("2"
                                                                                  (inst
                                                                                   -5
                                                                                   "j!1"
                                                                                   "_")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "integral_nonneg[T1, S1, to_measure[T1, S1](NU(i!1))]"
                                                                                     ("f"
                                                                                      "G(j!1)"))
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (skosimp)
                                                                            (("3"
                                                                              (inst
                                                                               -4
                                                                               "i!1"
                                                                               "j!1")
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (hide
                                                                             2)
                                                                            (("4"
                                                                              (skosimp)
                                                                              (("4"
                                                                                (inst
                                                                                 -4
                                                                                 "i!1"
                                                                                 "j!1")
                                                                                (("4"
                                                                                  (inst
                                                                                   -5
                                                                                   "j!1"
                                                                                   "_")
                                                                                  (("4"
                                                                                    (lemma
                                                                                     "integral_nonneg[T1, S1, to_measure(NU(i!1))]"
                                                                                     ("f"
                                                                                      "G(j!1)"))
                                                                                    (("1"
                                                                                      (replace
                                                                                       -6)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "measure_eq_integral[T1,S1]"
                                                                                         ("mu"
                                                                                          "to_measure[T1, S1]
                                                                (fm_contraction[T1, S1]
                                                                     (contraction[T1, S1](mu, X!1),
                                                                      A_of[T1, S1](contraction[T1, S1](mu, X!1))(i!1)))"
                                                                                          "nu"
                                                                                          "to_measure(NU(i!1))"
                                                                                          "f"
                                                                                          "G(j!1)"))
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "G"
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "to_measure")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "NU")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "x_eq")
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "measurable_set?")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "A_of_def2")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (expand
                                                                             "measurable_set?")
                                                                            (("5"
                                                                              (rewrite
                                                                               "A_of_def2")
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (skosimp)
                                                                            (("6"
                                                                              (inst
                                                                               -4
                                                                               "i!1"
                                                                               "j!1")
                                                                              (("6"
                                                                                (hide
                                                                                 2)
                                                                                (("6"
                                                                                  (lemma
                                                                                   "measure_eq_integrable?[T1,S1]"
                                                                                   ("mu"
                                                                                    "to_measure(NU(i!1))"
                                                                                    "nu"
                                                                                    "to_measure(fm_contraction[T1, S1]
                                                                         (contraction(mu, X!1),
                                                                          A_of(contraction(mu, X!1))(i!1)))"
                                                                                    "f"
                                                                                    "G(j!1)"))
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "G")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "to_measure")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "x_eq")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "NU")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "measurable_set?")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "A_of_def2")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   -1
                                                                   -2
                                                                   2)
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (inst
                                                                       -4
                                                                       "i!1"
                                                                       "j!1")
                                                                      (("2"
                                                                        (inst
                                                                         -5
                                                                         "j!1"
                                                                         "_")
                                                                        (("2"
                                                                          (lemma
                                                                           "integral_nonneg[T1, S1, to_measure(NU(i!1))]"
                                                                           ("f"
                                                                            "G(j!1)"))
                                                                          (("1"
                                                                            (replace
                                                                             -6)
                                                                            (("1"
                                                                              (lemma
                                                                               "measure_eq_integral[T1,S1]"
                                                                               ("mu"
                                                                                "to_measure[T1, S1]
                                                            (fm_contraction[T1, S1]
                                                                 (contraction[T1, S1](mu, X!1),
                                                                  A_of[T1, S1](contraction[T1, S1](mu, X!1))(i!1)))"
                                                                                "nu"
                                                                                "to_measure(NU(i!1))"
                                                                                "f"
                                                                                "G(j!1)"))
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "G"
                                                                                   -1
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "to_measure")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "x_eq")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "NU")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (flatten)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "measurable_set?")
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "A_of_def2")
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "measurable_set?")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (expand
                                                                   "measurable_set?")
                                                                  (("3"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (hide
                                                                   -1
                                                                   -2
                                                                   2)
                                                                  (("4"
                                                                    (skosimp)
                                                                    (("4"
                                                                      (inst
                                                                       -4
                                                                       "i!1"
                                                                       "j!1")
                                                                      (("4"
                                                                        (lemma
                                                                         "measure_eq_integrable?[T1,S1]"
                                                                         ("mu"
                                                                          "to_measure(fm_contraction[T1, S1]
                                                                     (contraction(mu, X!1),
                                                                      A_of(contraction(mu, X!1))(i!1)))"
                                                                          "nu"
                                                                          "to_measure(NU(i!1))"
                                                                          "f"
                                                                          "G(j!1)"))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "G")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "to_measure")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_eq")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "NU")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("2"
                                                                            (rewrite
                                                                             "A_of_def2")
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("5"
                                                                  (expand
                                                                   "measurable_set?")
                                                                  (("5"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 2
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (skolem
                                                                     +
                                                                     "i!1")
                                                                    (("2"
                                                                      (lemma
                                                                       "x_sum_eq"
                                                                       ("S"
                                                                        "LAMBDA j:
                                                            (TRUE, integral[T1, S1, to_measure(MU(i!1))](F(j)))"
                                                                        "T"
                                                                        "LAMBDA j:
                                                            (TRUE,
                                                             integral
                                                                 [T1, S1,
                                                                  to_measure(fm_contraction[T1, S1]
                                                                             (mu, A_of(mu)(i!1)))]
                                                                 (fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                                                   x_section(EE)))"))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skolem
                                                                           +
                                                                           "j!1")
                                                                          (("1"
                                                                            (hide
                                                                             -1
                                                                             2)
                                                                            (("1"
                                                                              (expand
                                                                               "x_eq"
                                                                               1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "measure_eq_integral[T1,S1]"
                                                                                 ("mu"
                                                                                  "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                                  "nu"
                                                                                  "to_measure(MU(i!1))"
                                                                                  "f"
                                                                                  "F(j!1)"))
                                                                                (("1"
                                                                                  (inst
                                                                                   -10
                                                                                   "i!1"
                                                                                   "j!1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "F"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("1"
                                                                                          (skosimp)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "MU")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "to_measure")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "x_eq")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (inst
                                                                           -10
                                                                           "i!1"
                                                                           "j!1")
                                                                          (("2"
                                                                            (inst
                                                                             -12
                                                                             "j!1"
                                                                             "_")
                                                                            (("2"
                                                                              (lemma
                                                                               "integral_nonneg[T1, S1, to_measure(MU(i!1))]"
                                                                               ("f"
                                                                                "F(j!1)"))
                                                                              (("1"
                                                                                (replace
                                                                                 -13)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "measure_eq_integral[T1,S1]"
                                                                                   ("mu"
                                                                                    "to_measure[T1, S1]
                                                            (fm_contraction[T1, S1](mu, A_of[T1, S1](mu)(i!1)))"
                                                                                    "nu"
                                                                                    "to_measure(MU(i!1))"
                                                                                    "f"
                                                                                    "F(j!1)"))
                                                                                  (("1"
                                                                                    (replace
                                                                                     -12)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "F"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "MU")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "to_measure")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "x_eq")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "measurable_set?")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "A_of_def2")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (expand
                                                                         "measurable_set?")
                                                                        (("3"
                                                                          (rewrite
                                                                           "A_of_def2")
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (skosimp)
                                                                        (("4"
                                                                          (inst
                                                                           -10
                                                                           "i!1"
                                                                           "j!1")
                                                                          (("4"
                                                                            (lemma
                                                                             "measure_eq_integrable?[T1,S1]"
                                                                             ("mu"
                                                                              "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                              "nu"
                                                                              "to_measure(MU(i!1))"
                                                                              "f"
                                                                              "F(j!1)"))
                                                                            (("1"
                                                                              (expand
                                                                               "F"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "EE")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "MU")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "to_measure")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "x_eq")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "measurable_set?")
                                                                              (("2"
                                                                                (rewrite
                                                                                 "A_of_def2")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("5"
                                                                        (skosimp)
                                                                        (("5"
                                                                          (inst
                                                                           -10
                                                                           "i!1"
                                                                           "j!1")
                                                                          (("5"
                                                                            (inst
                                                                             -12
                                                                             "j!1"
                                                                             "_")
                                                                            (("5"
                                                                              (lemma
                                                                               "integral_nonneg[T1, S1, to_measure[T1, S1](MU(i!1))]"
                                                                               ("f"
                                                                                "F(j!1)"))
                                                                              (("5"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("6"
                                                                        (skosimp)
                                                                        (("6"
                                                                          (inst
                                                                           -10
                                                                           "i!1"
                                                                           "j!1")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp)
                                                              (("2"
                                                                (hide
                                                                 -1
                                                                 2)
                                                                (("2"
                                                                  (inst
                                                                   -10
                                                                   "i!1"
                                                                   "j!1")
                                                                  (("2"
                                                                    (inst
                                                                     -12
                                                                     "j!1"
                                                                     "_")
                                                                    (("2"
                                                                      (lemma
                                                                       "measure_eq_integral[T1,S1]"
                                                                       ("mu"
                                                                        "to_measure[T1, S1]
                                                      (fm_contraction[T1, S1](mu, A_of[T1, S1](mu)(i!1)))"
                                                                        "nu"
                                                                        "to_measure(MU(i!1))"
                                                                        "f"
                                                                        "F(j!1)"))
                                                                      (("1"
                                                                        (lemma
                                                                         "integral_nonneg[T1,S1,to_measure(MU(i!1))]"
                                                                         ("f"
                                                                          "F(j!1)"))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -14)
                                                                            (("1"
                                                                              (split
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "F")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "to_measure")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "MU")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "x_eq")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "measurable_set?")
                                                                        (("2"
                                                                          (rewrite
                                                                           "A_of_def2")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (skosimp)
                                                              (("3"
                                                                (hide
                                                                 -1
                                                                 2)
                                                                (("3"
                                                                  (inst
                                                                   -10
                                                                   "i!1"
                                                                   "j!1")
                                                                  (("3"
                                                                    (lemma
                                                                     "measure_eq_integrable?[T1,S1]"
                                                                     ("mu"
                                                                      "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                      "nu"
                                                                      "to_measure(MU(i!1))"
                                                                      "f"
                                                                      "F(j!1)"))
                                                                    (("1"
                                                                      (expand
                                                                       "F")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (expand
                                                                               "MU")
                                                                              (("1"
                                                                                (expand
                                                                                 "to_measure")
                                                                                (("1"
                                                                                  (expand
                                                                                   "x_eq")
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("2"
                                                                        (rewrite
                                                                         "A_of_def2")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (skosimp)
                                                              (("4"
                                                                (inst
                                                                 -10
                                                                 "x1!1")
                                                                (("4"
                                                                  (expand
                                                                   "measurable_set?")
                                                                  (("4"
                                                                    (assert)
                                                                    (("4"
                                                                      (expand
                                                                       "x_section"
                                                                       1)
                                                                      (("4"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case
                                                       "x_eq(x_sum(LAMBDA j:
                                                       x_sum(LAMBDA i:
                                                               (TRUE,
                                                                integral[T1, S1, to_measure(MU(i))](F(j))))),
                                               x_sum(LAMBDA j:
                                                       x_sum(LAMBDA i:
                                                               (TRUE,
                                                                integral[T1, S1, to_measure(NU(i))](G(j))))))")
                                                      (("1"
                                                        (lemma
                                                         "double_x_sum_eq"
                                                         ("U"
                                                          "lambda i,j: (TRUE,
                                                                   integral[T1, S1, to_measure(MU(i))](F(j)))"))
                                                        (("1"
                                                          (lemma
                                                           "double_x_sum_eq"
                                                           ("U"
                                                            "lambda i,j: (TRUE,
                                                                   integral[T1, S1, to_measure(NU(i))](G(j)))"))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide-all-but
                                                               (-1
                                                                -2
                                                                -3
                                                                1))
                                                              (("1"
                                                                (expand
                                                                 "x_eq")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (case
                                                           "forall (E:(S1),i): x_eq(contraction(mu,A_of(mu)(i))(E),to_measure(MU(i))(E))")
                                                          (("1"
                                                            (case
                                                             "forall j: integrable?[T1,S1,mu](F(j)) <=> convergent?(series(lambda i: integral[T1, S1, to_measure(MU(i))](F(j))))")
                                                            (("1"
                                                              (lemma
                                                               "x_sum_eq"
                                                               ("S"
                                                                "LAMBDA j:
                                                              x_sum(LAMBDA i:
                                                                      (TRUE,
                                                                       integral[T1, S1, to_measure(MU(i))](F(j))))"
                                                                "T"
                                                                "lambda j: if integrable?[T1,S1,mu](F(j)) then (TRUE,integral[T1,S1,mu](F(j))) else (FALSE,0) endif"))
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (case
                                                                   "x_eq(x_sum(LAMBDA j:
                                                                 IF integrable?[T1, S1, mu](F(j))
                                                                   THEN (TRUE, integral[T1, S1, mu](F(j)))
                                                                 ELSE (FALSE, 0)
                                                                 ENDIF), x_sum(LAMBDA j:
                                                                 x_sum(LAMBDA i:
                                                                         (TRUE,
                                                                          integral[T1, S1, to_measure(NU(i))](G(j))))))")
                                                                  (("1"
                                                                    (hide-all-but
                                                                     (-1
                                                                      -2
                                                                      1))
                                                                    (("1"
                                                                      (expand
                                                                       "x_eq")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       -12
                                                                       -13)
                                                                      (("2"
                                                                        (case
                                                                         "measurable_set?[T1, S1](X!1)")
                                                                        (("1"
                                                                          (case
                                                                           "FORALL j:
                                                          integrable?[T1, S1, contraction(mu, X!1)](G(j))=>integral[T1, S1, contraction[T1, S1](mu, X!1)](G(j)) >= 0")
                                                                          (("1"
                                                                            (case
                                                                             "x_eq(x_sum(LAMBDA j:
                                                                       IF integrable?[T1, S1, mu](F(j))
                                                                         THEN (TRUE, integral[T1, S1, mu](F(j)))
                                                                       ELSE (FALSE, 0)
                                                                       ENDIF),
                                                               x_sum(LAMBDA j:IF integrable?[T1, S1, contraction(mu,X!1)](G(j))
                                                                         THEN (TRUE, integral[T1, S1, contraction(mu,X!1)](G(j)))
                                                                       ELSE (FALSE, 0)
                                                                       ENDIF))")
                                                                            (("1"
                                                                              (lemma
                                                                               "x_sum_eq"
                                                                               ("S"
                                                                                "LAMBDA j:
                                                                          IF integrable?[T1, S1, contraction(mu, X!1)](G(j))
                                                                            THEN (TRUE,
                                                                                  integral[T1, S1, contraction(mu, X!1)](G(j)))
                                                                          ELSE (FALSE, 0)
                                                                          ENDIF"
                                                                                "T"
                                                                                "LAMBDA j:
                                                                          x_sum(LAMBDA i:
                                                                                  (TRUE,
                                                                                   integral[T1, S1, to_measure(NU(i))](G(j))))"))
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -2
                                                                                    1))
                                                                                  (("1"
                                                                                    (expand
                                                                                     "x_eq")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skolem
                                                                                       +
                                                                                       "j!1")
                                                                                      (("2"
                                                                                        (case
                                                                                         "forall (E:(S1),i): x_eq(contraction(contraction(mu, X!1),A_of(contraction(mu,X!1))(i))(E),to_measure(NU(i))(E))")
                                                                                        (("1"
                                                                                          (case
                                                                                           "forall j: integrable?[T1,S1,contraction(mu, X!1)](G(j)) <=> convergent?(series(lambda i: integral[T1, S1, to_measure(NU(i))](G(j))))")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "x_eq"
                                                                                             1)
                                                                                            (("1"
                                                                                              (case-replace
                                                                                               "integrable?[T1, S1, contraction(mu, X!1)](G(j!1))")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "j!1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "x_sum"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "sfm_integral[T1,S1,contraction(mu, X!1)]"
                                                                                                       ("f"
                                                                                                        "G(j!1)"))
                                                                                                      (("1"
                                                                                                        (case-replace
                                                                                                         "(LAMBDA i:
                                                                                            integral
                                                                                                [T1, S1,
                                                                                                 contraction(contraction(mu, X!1),
                                                                                                             A_of(contraction(mu, X!1))(i))]
                                                                                                (G(j!1)))=(LAMBDA i:
                                                                                           integral[T1, S1, to_measure(NU(i))](G(j!1)))")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "DRL1"
                                                                                                             "(series(LAMBDA (i_1: nat):
                                                                                               integral[T1, S1, to_measure(NU(i_1))]
                                                                                                   (G(j!1))))")
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "LHS"
                                                                                                               "integral[T1, S1, contraction(mu, X!1)](G(j!1))")
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 (-1
                                                                                                                  1))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "metric_convergence_def")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "convergence_sequences.limit_def"
                                                                                                                       ("l"
                                                                                                                        "LHS"
                                                                                                                        "v"
                                                                                                                        "DRL1"))
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "convergence")
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (lift-if
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (case-replace
                                                                                                                                   "convergence_sequences.convergent?(DRL1)")
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "epsilon!1")
                                                                                                                                          (("1"
                                                                                                                                            (skosimp)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "n!1")
                                                                                                                                              (("1"
                                                                                                                                                (skosimp)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "i!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (-3
                                                                                                                                                        1))
                                                                                                                                                      (("1"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replace
                                                                                                                                     1
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "convergent?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "LHS")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "convergence")
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             -1
                                                                                                                                             -2)
                                                                                                                                            (("2"
                                                                                                                                              (skosimp)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "epsilon!1")
                                                                                                                                                (("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "n!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "i!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "convergent?")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             +
                                                                                                                             "LHS")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "metric_converges_to")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "convergence")
                                                                                                                                (("2"
                                                                                                                                  (skosimp)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "epsilon!1")
                                                                                                                                    (("2"
                                                                                                                                      (skosimp)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "n!1")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -10
                                                                                                                 "i!1"
                                                                                                                 "j!1")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (apply-extensionality
                                                                                                           :hide?
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "measure_eq_integral[T1,S1]"
                                                                                                               ("mu"
                                                                                                                "contraction(contraction(mu, X!1),
                                                                                              A_of(contraction(mu, X!1))(x!1))"
                                                                                                                "nu"
                                                                                                                "to_measure(NU(x!1))"
                                                                                                                "f"
                                                                                                                "G(j!1)"))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -9
                                                                                                                   "x!1"
                                                                                                                   "j!1")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -9)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -3
                                                                                                                       "_"
                                                                                                                       "x!1")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "measurable_set?")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (skosimp)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -10
                                                                                                               "i!1"
                                                                                                               "j!1")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("3"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("4"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             2)
                                                                                                            (("4"
                                                                                                              (skosimp)
                                                                                                              (("4"
                                                                                                                (inst
                                                                                                                 -3
                                                                                                                 "_"
                                                                                                                 "i!1")
                                                                                                                (("4"
                                                                                                                  (inst
                                                                                                                   -9
                                                                                                                   "i!1"
                                                                                                                   "j!1")
                                                                                                                  (("4"
                                                                                                                    (lemma
                                                                                                                     "measure_eq_integrable?[T1,S1]"
                                                                                                                     ("mu"
                                                                                                                      "contraction(contraction(mu, X!1),
                                                                                              A_of(contraction(mu, X!1))(i!1))"
                                                                                                                      "nu"
                                                                                                                      "to_measure(NU(i!1))"
                                                                                                                      "f"
                                                                                                                      "G(j!1)"))
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "A_of[T1, S1](contraction[T1, S1](mu, X!1))(i!1)")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "measurable_set?")
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (skosimp)
                                                                                                          (("3"
                                                                                                            (inst
                                                                                                             -10
                                                                                                             "i!1"
                                                                                                             "j!1")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("4"
                                                                                                          (expand
                                                                                                           "measurable_set?")
                                                                                                          (("4"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("5"
                                                                                                          (skosimp)
                                                                                                          (("5"
                                                                                                            (hide
                                                                                                             2
                                                                                                             -1
                                                                                                             -3)
                                                                                                            (("5"
                                                                                                              (inst
                                                                                                               -2
                                                                                                               "_"
                                                                                                               "i!1")
                                                                                                              (("5"
                                                                                                                (inst
                                                                                                                 -8
                                                                                                                 "i!1"
                                                                                                                 "j!1")
                                                                                                                (("5"
                                                                                                                  (lemma
                                                                                                                   "measure_eq_integrable?[T1,S1]"
                                                                                                                   ("mu"
                                                                                                                    "contraction(contraction(mu, X!1),
                                                                                          A_of(contraction(mu, X!1))(i!1))"
                                                                                                                    "nu"
                                                                                                                    "to_measure(NU(i!1))"
                                                                                                                    "f"
                                                                                                                    "G(j!1)"))
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "measurable_set?")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         (-1
                                                                                                          1
                                                                                                          -10))
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "nn_integrable_is_nn_integrable[T1, S1, contraction[T1, S1](mu, X!1)]"
                                                                                                           ("f"
                                                                                                            "G(j!1)"))
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "j!1"
                                                                                                                 "x!1")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "x_sum"
                                                                                                     -3)
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "j!1")
                                                                                                        (("2"
                                                                                                          (name-replace
                                                                                                           "DRL1"
                                                                                                           "series(LAMBDA (i_1: nat):
                                                                                        integral[T1, S1, to_measure(NU(i_1))](G(j!1)))")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                1))
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "convergent?")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "l!1")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "convergence")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "metric_convergence_def")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "metric_converges_to")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "r!1")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "n!1")
                                                                                                                                  (("1"
                                                                                                                                    (skosimp)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "i!1")
                                                                                                                                      (("1"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (skosimp)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -10
                                                                                                               "i!1"
                                                                                                               "j!1")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "nn_measurable?[T1,S1](G(j!2))")
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "sfm_integrable[T1, S1, contraction(mu, X!1)]"
                                                                                                   ("h"
                                                                                                    "G(j!2)"))
                                                                                                  (("1"
                                                                                                    (case-replace
                                                                                                     "(LAMBDA i:
                                                                                             integral
                                                                                                 [T1, S1,
                                                                                                  contraction(contraction(mu, X!1),
                                                                                                              A_of
                                                                                                              (contraction(mu, X!1))(i))]
                                                                                                 (G(j!2)))=(LAMBDA i:
                                                                                            integral[T1, S1, to_measure(NU(i))](G(j!2)))")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (case-replace
                                                                                                         "(FORALL i:
                                                                            integrable?
                                                                                [T1, S1,
                                                                                 contraction(contraction(mu, X!1),
                                                                                             A_of(contraction(mu, X!1))(i))]
                                                                                (G(j!2)))")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -2
                                                                                                             1
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (name-replace
                                                                                                               "UU"
                                                                                                               "(series((LAMBDA i: integral[T1, S1, to_measure(NU(i))](G(j!2)))))")
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (split)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 -10
                                                                                                                 "_"
                                                                                                                 "j!2")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "_"
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -10
                                                                                                               "i!1"
                                                                                                               "j!2")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "measure_eq_integrable?[T1,S1]"
                                                                                                                 ("mu"
                                                                                                                  "contraction(contraction(mu, X!1),
                                                                                            A_of(contraction(mu, X!1))(i!1))"
                                                                                                                  "nu"
                                                                                                                  "to_measure(NU(i!1))"
                                                                                                                  "f"
                                                                                                                  "G(j!2)"))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "measurable_set?")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (expand
                                                                                                           "measurable_set?")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (apply-extensionality
                                                                                                         :hide?
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "measure_eq_integral[T1,S1]"
                                                                                                           ("mu"
                                                                                                            "contraction(contraction(mu, X!1),
                                                                                            A_of(contraction(mu, X!1))(x!1))"
                                                                                                            "nu"
                                                                                                            "to_measure(NU(x!1))"
                                                                                                            "f"
                                                                                                            "G(j!2)"))
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "x!1"
                                                                                                             "j!2")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "_"
                                                                                                               "x!1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "measurable_set?")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -8
                                                                                                             "i!1"
                                                                                                             "j!2")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (expand
                                                                                                           "measurable_set?")
                                                                                                          (("3"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("4"
                                                                                                          (skosimp)
                                                                                                          (("4"
                                                                                                            (inst
                                                                                                             -8
                                                                                                             "i!1"
                                                                                                             "j!2")
                                                                                                            (("4"
                                                                                                              (inst
                                                                                                               -2
                                                                                                               "_"
                                                                                                               "i!1")
                                                                                                              (("4"
                                                                                                                (lemma
                                                                                                                 "measure_eq_integrable?[T1,S1]"
                                                                                                                 ("mu"
                                                                                                                  "contraction(contraction(mu, X!1),
                                                                                              A_of(contraction(mu, X!1))(i!1))
                                                                                             "
                                                                                                                  "nu"
                                                                                                                  "to_measure(NU(i!1))"
                                                                                                                  "f"
                                                                                                                  "G(j!2)"))
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "measurable_set?")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (skosimp)
                                                                                                      (("3"
                                                                                                        (inst
                                                                                                         -10
                                                                                                         "i!1"
                                                                                                         "j!2")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (expand
                                                                                                       "measurable_set?")
                                                                                                      (("4"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("5"
                                                                                                      (skosimp)
                                                                                                      (("5"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "_"
                                                                                                         "i!1")
                                                                                                        (("5"
                                                                                                          (inst
                                                                                                           -10
                                                                                                           "i!1"
                                                                                                           "j!2")
                                                                                                          (("5"
                                                                                                            (lemma
                                                                                                             "measure_eq_integrable?[T1,S1]"
                                                                                                             ("mu"
                                                                                                              "contraction(contraction(mu, X!1),
                                                                                          A_of(contraction(mu, X!1))(i!1))"
                                                                                                              "nu"
                                                                                                              "to_measure(NU(i!1))"
                                                                                                              "f"
                                                                                                              "G(j!2)"))
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "measurable_set?")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "nn_measurable?")
                                                                                                  (("2"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "G")
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (1
                                                                                                          -9))
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "x_section_measurable"
                                                                                                           ("nu"
                                                                                                            "fm_contraction[T2, S2]
                                                                                                 (contraction(nu, Y!1),
                                                                                                  A_of(contraction(nu, Y!1))(j!2))"
                                                                                                            "M"
                                                                                                            "E!1"))
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -8
                                                                                                         "j!2"
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "NU")
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "contraction(mu, X!1)")
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "MU1"
                                                                                                   "contraction(mu, X!1)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "to_measure")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fm_contraction")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "contraction")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "x_eq")
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "A_of_def2"
                                                                                                             ("mu"
                                                                                                              "MU1"
                                                                                                              "n"
                                                                                                              "i!1"))
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "m_monotone[T1,S1,MU1]"
                                                                                                               ("a"
                                                                                                                "intersection(A_of(MU1)(i!1), E!2)"
                                                                                                                "b"
                                                                                                                "A_of(MU1)(i!1)"))
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "x_le")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "intersection")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "subset?")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (skosimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "measurable_set?")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (expand
                                                                                                                 "measurable_set?")
                                                                                                                (("3"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "measurable_set?")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (case
                                                                                 "forall (l:real): ((forall j: integrable?[T1, S1, mu](F(j)))&convergence(series(LAMBDA j:integral[T1, S1, mu](F(j))),l)) <=> ((forall j: integrable?[T1, S1, contraction(mu, X!1)](G(j)))&convergence(series(LAMBDA j:integral[T1, S1, contraction(mu, X!1)](G(j))),l))")
                                                                                (("1"
                                                                                  (expand
                                                                                   "x_sum"
                                                                                   1)
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "(FORALL i:
                                                                         IF integrable?[T1, S1, mu](F(i)) THEN TRUE
                                                                         ELSE FALSE
                                                                         ENDIF)
                                                                       AND
                                                                       convergence_sequences.convergent?(series(LAMBDA i:
                                                                                           IF integrable?[T1, S1, mu](F(i))
                                                                                             THEN integral[T1, S1, mu](F(i))
                                                                                           ELSE 0
                                                                                           ENDIF))")
                                                                                    (("1"
                                                                                      (flatten
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "FORALL j: integrable?[T1, S1, mu](F(j))")
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "(LAMBDA i:
                                                                                      IF integrable?[T1, S1, mu](F(i))
                                                                                        THEN integral[T1, S1, mu](F(i))
                                                                                      ELSE 0
                                                                                      ENDIF)=(LAMBDA j: integral[T1, S1, mu](F(j)))")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "convergence_sequences.limit_lemma"
                                                                                               ("v"
                                                                                                "series(LAMBDA j: integral[T1, S1, mu](F(j)))"))
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -5
                                                                                                 "convergence_sequences.limit
                                                                                (series(LAMBDA j: integral[T1, S1, mu](F(j))))")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (case-replace
                                                                                                     "(FORALL i:
                                                                                 IF integrable?[T1, S1, contraction(mu, X!1)](G(i))
                                                                                   THEN TRUE
                                                                                 ELSE FALSE
                                                                                 ENDIF)
                                                                               AND
                                                                               convergence_sequences.convergent?(series(LAMBDA i:
                                                                                                   IF integrable?
                                                                                                      [T1, S1, contraction(mu, X!1)]
                                                                                                      (G(i))
                                                                                                     THEN integral
                                                                                                          [T1, S1, contraction(mu, X!1)]
                                                                                                          (G(i))
                                                                                                   ELSE 0
                                                                                                   ENDIF))")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "x_eq"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (case-replace
                                                                                                         "(LAMBDA i:
                                                                                       IF integrable?[T1, S1, contraction(mu, X!1)](G(i))
                                                                                         THEN integral[T1, S1, contraction(mu, X!1)](G(i))
                                                                                       ELSE 0
                                                                                       ENDIF)=(LAMBDA j:
                                                                                                integral[T1, S1, contraction(mu, X!1)]
                                                                                                    (G(j)))")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "convergence_sequences.limit_def"
                                                                                                             -9
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (apply-extensionality
                                                                                                             :hide?
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "x!1")
                                                                                                                (("1"
                                                                                                                  (prop)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "j!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (skosimp)
                                                                                                          (("3"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "j!1")
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (split)
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -5
                                                                                                               "i!1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (case-replace
                                                                                                             "(LAMBDA i:
                                                                                              IF integrable?[T1, S1, contraction(mu, X!1)]
                                                                                                     (G(i))
                                                                                                THEN integral[T1, S1, contraction(mu, X!1)]
                                                                                                         (G(i))
                                                                                              ELSE 0
                                                                                              ENDIF)=(LAMBDA j:
                                                                                               integral[T1, S1, contraction(mu, X!1)](G(j)))")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "convergence_sequences.convergent?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "convergence_sequences.limit
                                                                                            (series(LAMBDA j: integral[T1, S1, mu](F(j))))")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (apply-extensionality
                                                                                                               :hide?
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -5
                                                                                                                 "x!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand
                                                                                                       "measurable_set?")
                                                                                                      (("3"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (expand
                                                                                                       "measurable_set?")
                                                                                                      (("4"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (apply-extensionality
                                                                                               :hide?
                                                                                               t)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -
                                                                                               "j!1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "x_eq"
                                                                                         2)
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "FORALL j: integrable?[T1, S1, contraction(mu, X!1)](G(j))")
                                                                                          (("1"
                                                                                            (case-replace
                                                                                             "(LAMBDA i:
                                                                                          IF integrable?[T1, S1, contraction(mu, X!1)]
                                                                                                 (G(i))
                                                                                            THEN integral[T1, S1, contraction(mu, X!1)]
                                                                                                 (G(i))
                                                                                          ELSE 0
                                                                                          ENDIF)=(LAMBDA j:
                                                                                          integral[T1, S1, contraction(mu, X!1)]
                                                                                              (G(j)))")
                                                                                            (("1"
                                                                                              (case-replace
                                                                                               "convergence_sequences.convergent?(series(LAMBDA j:
                                                                                             integral[T1, S1, contraction(mu, X!1)]
                                                                                                 (G(j))))")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "convergence_sequences.limit_lemma"
                                                                                                   ("v"
                                                                                                    "series(LAMBDA j: integral[T1, S1, contraction(mu, X!1)](G(j)))"))
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -5
                                                                                                     "convergence_sequences.limit(series(LAMBDA j:
                                                                                                   integral[T1, S1, contraction(mu, X!1)]
                                                                                                       (G(j))))")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         (-4
                                                                                                          -5
                                                                                                          1))
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (split)
                                                                                                            (("1"
                                                                                                              (skosimp)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "i!1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (case-replace
                                                                                                               "(LAMBDA i:
                                                                                              IF integrable?[T1, S1, mu](F(i))
                                                                                                THEN integral[T1, S1, mu](F(i))
                                                                                              ELSE 0
                                                                                              ENDIF)=(LAMBDA j: integral[T1, S1, mu](F(j)))")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "convergence_sequences.convergent?")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "convergence_sequences.limit
                                                                                            (series(LAMBDA j:
                                                                                                      integral[T1, S1, contraction(mu, X!1)]
                                                                                                          (G(j))))")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "measurable_set?")
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (apply-extensionality
                                                                                                                 :hide?
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -2
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 1
                                                                                                 -4)
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (apply-extensionality
                                                                                               1
                                                                                               :hide?
                                                                                               t)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             (-2
                                                                                              1))
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "j!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (name
                                                                                           "FF"
                                                                                           "lambda j: lambda x: series(lambda i: F(i)(x))(j)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "forall j: integrable?[T1, S1, mu](FF(j))")
                                                                                            (("1"
                                                                                              (case
                                                                                               "forall (n:nat): series(LAMBDA j: integral[T1, S1, mu](F(j)))(n) = (integral[T1, S1, mu] o FF)(n)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "extensionality_postulate"
                                                                                                 ("f"
                                                                                                  "series(LAMBDA j: integral[T1, S1, mu](F(j)))"
                                                                                                  "g"
                                                                                                  "integral[T1, S1, mu] o FF"))
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -2
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1
                                                                                                         -2
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "monotone_convergence[T1, S1, mu]"
                                                                                                           ("F"
                                                                                                            "FF"))
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "ae_increasing?(FF)")
                                                                                                            (("1"
                                                                                                              (case-replace
                                                                                                               "real_fun_preds.bounded?(integral[T1,S1,mu] o FF)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "f!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "f!1")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "forall x: x_eq(x_limit(LAMBDA j: (TRUE,FF(j)(x))), nu(x_section(EE, x)))")
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "ae?(lambda x: x_eq((TRUE,plus(f!1)(x)),nu(x_section(EE, x))))")
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (case-replace
                                                                                                                                   "FORALL j: integrable?[T1, S1, contraction(mu, X!1)](G(j))")
                                                                                                                                  (("1"
                                                                                                                                    (name
                                                                                                                                     "GG"
                                                                                                                                     "lambda j: lambda x: series(LAMBDA i: G(i)(x))(j)")
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "FORALL j: integrable?[T1, S1, contraction(mu, X!1)](GG(j))")
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "forall j,x: GG(j)(x) >= 0")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "forall j: series(LAMBDA i:
                                                                                                       integral[T1, S1, contraction(mu, X!1)](G(i)))(j)=(integral[T1, S1, contraction(mu, X!1)] o GG)(j)")
                                                                                                                                            (("1"
                                                                                                                                              (case-replace
                                                                                                                                               "series(LAMBDA j:
                                                                                                         integral[T1, S1, contraction(mu, X!1)](G(j)))=integral[T1, S1, contraction(mu, X!1)] o GG")
                                                                                                                                              (("1"
                                                                                                                                                (case-replace
                                                                                                                                                 "l!1=integral[T1,S1,mu](f!1)")
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "ae_nonneg?(f!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "ae_eq?(f!1,*[T1](phi(X!1),f!1))")
                                                                                                                                                      (("1"
                                                                                                                                                        (hide
                                                                                                                                                         -4
                                                                                                                                                         -3)
                                                                                                                                                        (("1"
                                                                                                                                                          (name
                                                                                                                                                           "HH"
                                                                                                                                                           "lambda j: *[T1](phi(X!1),GG(j))")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "forall j: integrable?[T1, S1, mu](HH(j))")
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "FORALL j, x: HH(j)(x) >= 0")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 -3
                                                                                                                                                                 -6)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "forall j: (integral[T1, S1, contraction(mu, X!1)] o GG)(j) = (integral[T1,S1,mu] o HH)(j)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case-replace
                                                                                                                                                                     "integral[T1, S1, contraction(mu, X!1)] o GG=integral[T1, S1, mu] o HH")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide
                                                                                                                                                                       -1
                                                                                                                                                                       -2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "monotone_convergence[T1, S1, mu]"
                                                                                                                                                                         ("F"
                                                                                                                                                                          "HH"))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case-replace
                                                                                                                                                                           "ae_increasing?(HH)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               -2
                                                                                                                                                                               -3)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "indefinite_integrable[T1, S1, mu]"
                                                                                                                                                                                 ("f"
                                                                                                                                                                                  "f!1"
                                                                                                                                                                                  "E"
                                                                                                                                                                                  "X!1"))
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -3
                                                                                                                                                                                   "*[T1](phi(X!1), f!1)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (split
                                                                                                                                                                                     -3)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "converges_upto?")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (name-replace
                                                                                                                                                                                           "SS"
                                                                                                                                                                                           "integral[T1, S1, mu] o HH")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "integral_ae_eq[T1,S1,mu]"
                                                                                                                                                                                             ("f"
                                                                                                                                                                                              "f!1"
                                                                                                                                                                                              "h"
                                                                                                                                                                                              "*[T1](phi(X!1), f!1)"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replace
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 *
                                                                                                                                                                                                 rl)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (name-replace
                                                                                                                                                                                                   "LIMIT"
                                                                                                                                                                                                   "integral[T1, S1, mu](f!1)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     (-2
                                                                                                                                                                                                      1))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "convergence")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (rewrite
                                                                                                                                                                                                         "metric_convergence_def")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "metric_converges_to")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -
                                                                                                                                                                                                               "epsilon!1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (skosimp)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   +
                                                                                                                                                                                                                   "n!1")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       -
                                                                                                                                                                                                                       "i!1")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (grind)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (hide
                                                                                                                                                                                       2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                         (-6
                                                                                                                                                                                          -9
                                                                                                                                                                                          -20
                                                                                                                                                                                          -21
                                                                                                                                                                                          1))
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "HH")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "ae_convergence?")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "ae_convergence_in?")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "ae_nonneg?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "pointwise_ae?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "ae?")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "fullset")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "ae_in?")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             +
                                                                                                                                                                                                             "union(E!2,E!3)")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "union")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -
                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -
                                                                                                                                                                                                                     "x!1")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "plus")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "max")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "*")
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "phi")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "member")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                                       "metric_convergence_def")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "x_eq"
                                                                                                                                                                                                                                         -2)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                             -
                                                                                                                                                                                                                                             "x!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -
                                                                                                                                                                                                                                               "x!1")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (case-replace
                                                                                                                                                                                                                                                 "X!1(x!1)")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "x_eq")
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                                                                         "x_limit_to_sum"
                                                                                                                                                                                                                                                         ("S"
                                                                                                                                                                                                                                                          "LAMBDA j: (TRUE,GG(j)(x!1))"
                                                                                                                                                                                                                                                          "T"
                                                                                                                                                                                                                                                          "LAMBDA j: (TRUE,G(j)(x!1))"))
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (split
                                                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                             "x_eq")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                   "x_sum")
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                                                                                     "convergence_sequences.convergent?(series(LAMBDA j: G(j)(x!1)))")
                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                                                       -10)
                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                                                         -7
                                                                                                                                                                                                                                                                         *
                                                                                                                                                                                                                                                                         rl)
                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                                                           -9)
                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                                             "x_limit")
                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                              (case-replace
                                                                                                                                                                                                                                                                               "convergence_sequences.convergent?(LAMBDA i: GG(i)(x!1))")
                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                (case
                                                                                                                                                                                                                                                                                 "convergence(LAMBDA j: GG(j)(x!1),f!1(x!1))")
                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                                                                                   (-1
                                                                                                                                                                                                                                                                                    3))
                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                                     "metric_converges_to")
                                                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                                       "convergence")
                                                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                                                           -
                                                                                                                                                                                                                                                                                           "r!1")
                                                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                                                                               +
                                                                                                                                                                                                                                                                                               "n!1")
                                                                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                                                                (skosimp)
                                                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                                                                   -
                                                                                                                                                                                                                                                                                                   "i!1")
                                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                                    (grind)
                                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                                                                                                   "convergence_sequences.limit_def"
                                                                                                                                                                                                                                                                                   ("v"
                                                                                                                                                                                                                                                                                    "LAMBDA i: GG(i)(x!1)"
                                                                                                                                                                                                                                                                                    "l"
                                                                                                                                                                                                                                                                                    "f!1(x!1)"))
                                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                                 "GG")
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                   "series")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                     "x_sigma")
                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                       "x_eq")
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (propax)
                                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                             "GG")
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "series")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (induct
                                                                                                                                                                                                                                                                 "j")
                                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                   "sigma")
                                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                                     "sigma"
                                                                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                                                     4)
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                       "metric_converges_to")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                                           "0")
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (grind)
                                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             (1
                                                                                                                                                                              -23))
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "ae_increasing?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "HH")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "*")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "phi")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "member")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         +
                                                                                                                                                                                         "emptyset")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lift-if
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (prop)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "GG")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "series")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -
                                                                                                                                                                                                           "_"
                                                                                                                                                                                                           "x!1")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "sigma_split"
                                                                                                                                                                                                             ("low"
                                                                                                                                                                                                              "0"
                                                                                                                                                                                                              "high"
                                                                                                                                                                                                              "j!1"
                                                                                                                                                                                                              "z"
                                                                                                                                                                                                              "i!1"
                                                                                                                                                                                                              "F"
                                                                                                                                                                                                              "LAMBDA i: G(i)(x!1)"))
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (apply-extensionality
                                                                                                                                                                       1
                                                                                                                                                                       :hide?
                                                                                                                                                                       t)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     2)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "o")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "HH")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -5
                                                                                                                                                                             "j!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "contraction_integral[T1,S1]"
                                                                                                                                                                               ("A"
                                                                                                                                                                                "X!1"
                                                                                                                                                                                "f"
                                                                                                                                                                                "GG(j!1)"
                                                                                                                                                                                "mu"
                                                                                                                                                                                "mu"))
                                                                                                                                                                              (("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "HH")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "*")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     (-5
                                                                                                                                                                      1))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "j!1"
                                                                                                                                                                         "x!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "phi")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (1
                                                                                                                                                                -5))
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "contraction_integrable[T1,S1]"
                                                                                                                                                                     ("mu"
                                                                                                                                                                      "mu"
                                                                                                                                                                      "A"
                                                                                                                                                                      "X!1"
                                                                                                                                                                      "f"
                                                                                                                                                                      "GG(j!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "HH")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "integrable_is_measurable[T1, S1, contraction(mu, X!1)]")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "GG(j!1)")
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (1
                                                                                                                                                          -7
                                                                                                                                                          -1))
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "ae_nonneg?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "ae_eq?")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "restrict")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "pointwise_ae?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ae?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "fullset")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "ae_in?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "union(E!2,E!3)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "x!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "x!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "union")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "plus")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "max")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "x_eq")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "*")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "phi")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "member")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (lift-if
                                                                                                                                                                                                         3)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (prop)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "EE")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "cross_product")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "intersection")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "x_section")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "member")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                           "nu")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "sigma_finite_measure?")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "measure?")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "measure_empty?")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "emptyset")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (1
                                                                                                                                                        -9
                                                                                                                                                        -10
                                                                                                                                                        -26))
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ae_increasing?")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "ae_convergence?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "ae_convergence_in?")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "ae_nonneg?")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "pointwise_ae?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ae?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "fullset")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "ae_in?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "union(E!2,E!3)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "x!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "x!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "union")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (rewrite
                                                                                                                                                                                           "metric_convergence_def")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "metric_converges_to")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -3
                                                                                                                                                                                               "0"
                                                                                                                                                                                               "x!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "F(0)(x!1)-f!1(x!1)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "0"
                                                                                                                                                                                                     "n!1")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "n!1")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "FF"
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "series")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "sigma")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "ball")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "converges_upto?")
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (name-replace
                                                                                                                                                       "SS"
                                                                                                                                                       "integral[T1, S1, mu] o FF")
                                                                                                                                                      (("2"
                                                                                                                                                        (name-replace
                                                                                                                                                         "RHS"
                                                                                                                                                         "integral[T1, S1, mu](f!1)")
                                                                                                                                                        (("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (1
                                                                                                                                                            -11
                                                                                                                                                            -15))
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "convergence_sequences.unique_limit"
                                                                                                                                                             ("u"
                                                                                                                                                              "SS"
                                                                                                                                                              "l1"
                                                                                                                                                              "l!1"
                                                                                                                                                              "l2"
                                                                                                                                                              "RHS"))
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide
                                                                                                                                                                 -2
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "convergence")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "metric_convergence_def")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "metric_converges_to")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "epsilon!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "n!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "i!1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (grind)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (apply-extensionality
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "o ")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "GG")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "series")
                                                                                                                                                    (("2"
                                                                                                                                                      (induct
                                                                                                                                                       "j")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "sigma")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "G")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "o ")
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "sigma"
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (hide
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "integral_add[T1, S1, contraction(mu, X!1)]"
                                                                                                                                                                 ("f1"
                                                                                                                                                                  "G(1 + j!1)"
                                                                                                                                                                  "f2"
                                                                                                                                                                  "LAMBDA x: sigma(0, j!1, LAMBDA i: G(i)(x))"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "+")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -2
                                                                                                                                                                   "j!1")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("4"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-18
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "GG")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "series")
                                                                                                                                                (("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "_"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "GG")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "series")
                                                                                                                                              (("2"
                                                                                                                                                (induct
                                                                                                                                                 "j")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "sigma")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "0")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "G")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "o ")
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "sigma"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "1+j!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "integrable_add[T1, S1, contraction(mu, X!1)]"
                                                                                                                                                         ("f1"
                                                                                                                                                          "G(1 + j!1)"
                                                                                                                                                          "f2"
                                                                                                                                                          "LAMBDA x: sigma(0, j!1, LAMBDA i: G(i)(x))"))
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "+")
                                                                                                                                                          (("1"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (skosimp)
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "contraction_integrable[T1,S1]")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "G"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "integral_ae_abs[T1, S1, mu]"
                                                                                                                                             ("h"
                                                                                                                                              "*[T1](phi[T1, S1](X!1),
                                                                                            (fm_contraction[T2, S2]
                                                                                                 (contraction(nu, Y!1),
                                                                                                  A_of(contraction(nu, Y!1))(j!1))
                                                                                              o x_section(E!1)))"
                                                                                                                                              "f"
                                                                                                                                              "plus(f!1)"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-1
                                                                                                                                                  -12
                                                                                                                                                  1))
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "ae_le?")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "pointwise_ae?")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "ae?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "fullset")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "ae_in?")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "E!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "phi")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "member")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "x!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "x!1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs"
                                                                                                                                                                           2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "*")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case-replace
                                                                                                                                                                               "X!1(x!1)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "o")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "one_times")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "abs"
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (typepred
                                                                                                                                                                                         "plus(f!1)(x!1)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "x_eq")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -4
                                                                                                                                                                                                   *
                                                                                                                                                                                                   rl)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "x_section"
                                                                                                                                                                                                     2)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "fm_contraction"
                                                                                                                                                                                                       2)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                         "m_monotone[T2,S2,contraction(nu, Y!1)]"
                                                                                                                                                                                                         ("a"
                                                                                                                                                                                                          "intersection(A_of(contraction(nu, Y!1))(j!1),
                                                                                                               x_section(E!1, x!1))"
                                                                                                                                                                                                          "b"
                                                                                                                                                                                                          "x_section(E!1, x!1)"))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "x_le")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "intersection")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "subset?")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "member")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                             "x_section_measurable"
                                                                                                                                                                                                             ("S1"
                                                                                                                                                                                                              "S1"
                                                                                                                                                                                                              "S2"
                                                                                                                                                                                                              "S2"
                                                                                                                                                                                                              "x"
                                                                                                                                                                                                              "x!1"
                                                                                                                                                                                                              "Z"
                                                                                                                                                                                                              "E!1"))
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "measurable_set?")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("3"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                             "A_of[T2, S2](contraction[T2, S2](nu, Y!1))(j!1)")
                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                              (lemma
                                                                                                                                                                                                               "x_section_measurable"
                                                                                                                                                                                                               ("S1"
                                                                                                                                                                                                                "S1"
                                                                                                                                                                                                                "S2"
                                                                                                                                                                                                                "S2"
                                                                                                                                                                                                                "x"
                                                                                                                                                                                                                "x!1"
                                                                                                                                                                                                                "Z"
                                                                                                                                                                                                                "E!1"))
                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "member")
                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                                   "measurable_intersection[T2,S2]"
                                                                                                                                                                                                                   ("a"
                                                                                                                                                                                                                    "A_of[T2, S2](contraction[T2, S2](nu, Y!1))(j!1)"
                                                                                                                                                                                                                    "b"
                                                                                                                                                                                                                    "x_section[T1, T2](E!1, x!1)"))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (propax)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "measurable_set?")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("3"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "measurable_set?")
                                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (rewrite
                                                                                                                                               "prod_measurable")
                                                                                                                                              (("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "x_section_measurable")
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "G")
                                                                                                                                          (("2"
                                                                                                                                            (rewrite
                                                                                                                                             "x_section_measurable"
                                                                                                                                             1)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -4
                                                                                                                                  -5
                                                                                                                                  1))
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "ae_increasing?")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "ae_convergence?")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "ae_convergence_in?")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "ae?")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "ae_in?")
                                                                                                                                            (("2"
                                                                                                                                              (skosimp*)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "union(E!2,E!3)")
                                                                                                                                                (("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "x!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "x!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "union")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "member")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "x_eq"
                                                                                                                                                                   3)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "x_limit")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "convergence(LAMBDA (n:nat): FF(n)(x!1), f!1(x!1))")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "convergence_sequences.limit_def"
                                                                                                                                                                         ("v"
                                                                                                                                                                          "LAMBDA (n: nat): FF(n)(x!1)"
                                                                                                                                                                          "l"
                                                                                                                                                                          "f!1(x!1)"))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case-replace
                                                                                                                                                                               "convergence_sequences.convergent?(LAMBDA i: FF(i)(x!1))")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "x_eq")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "plus")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "max")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "convergence_sequences.convergent?")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "f!1(x!1)")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "convergence_sequences.convergent?")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             +
                                                                                                                                                                             "f!1(x!1)")
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-3
                                                                                                                                                                          1))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "convergence")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "metric_convergence_def")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "metric_converges_to")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "epsilon!1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       +
                                                                                                                                                                                       "n!1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "i!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (grind)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (1
                                                                                                                                -17
                                                                                                                                -18
                                                                                                                                -19
                                                                                                                                -20
                                                                                                                                -21
                                                                                                                                -22))
                                                                                                                              (("2"
                                                                                                                                (skosimp)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "x!1")
                                                                                                                                  (("2"
                                                                                                                                    (name-replace
                                                                                                                                     "RHS"
                                                                                                                                     "nu(x_section(EE, x!1))")
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "x_limit_to_sum"
                                                                                                                                       ("S"
                                                                                                                                        "LAMBDA j: (TRUE, FF(j)(x!1))"
                                                                                                                                        "T"
                                                                                                                                        "LAMBDA j: (TRUE, F(j)(x!1))"))
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (name-replace
                                                                                                                                           "LHS"
                                                                                                                                           "x_limit(LAMBDA j: (TRUE, FF(j)(x!1)))")
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              1))
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "x_sum")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "x_eq")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "convergence_sequences.convergent?(series(LAMBDA i: F(i)(x!1)))")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           2
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "FF")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "series")
                                                                                                                                              (("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "x_sigma")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "x_eq")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (1
                                                                                                                                          -4))
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "FF")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "series")
                                                                                                                                            (("2"
                                                                                                                                              (induct
                                                                                                                                               "j")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "sigma")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "sigma"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "1+j!1"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (skolem
                                                                                                                               +
                                                                                                                               ("x!1"
                                                                                                                                "_"))
                                                                                                                              (("3"
                                                                                                                                (hide-all-but
                                                                                                                                 (1
                                                                                                                                  -20))
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "FF")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "series")
                                                                                                                                    (("3"
                                                                                                                                      (induct
                                                                                                                                       "j")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "sigma")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skosimp)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "sigma"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "bounded?"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "bounded_above?")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         +
                                                                                                                         "l!1")
                                                                                                                        (("1"
                                                                                                                          (skolem
                                                                                                                           +
                                                                                                                           "n!1")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "increasing?(integral[T1, S1, mu] o FF)")
                                                                                                                            (("1"
                                                                                                                              (name-replace
                                                                                                                               "HH"
                                                                                                                               "integral[T1, S1, mu] o FF")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -6
                                                                                                                                  1))
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "convergence")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "HH(n!1)-l!1")
                                                                                                                                    (("1"
                                                                                                                                      (skosimp)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "n!1+n!2")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "increasing?")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "n!1"
                                                                                                                                             "n!1+n!2")
                                                                                                                                            (("1"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (1
                                                                                                                                -1))
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "increasing?")
                                                                                                                                (("2"
                                                                                                                                  (skolem
                                                                                                                                   +
                                                                                                                                   ("i!3"
                                                                                                                                    "j!3"))
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "o ")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "ae_increasing?")
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "integral_ae_le[T1, S1, mu]"
                                                                                                                                               ("f1"
                                                                                                                                                "FF(i!3)"
                                                                                                                                                "f2"
                                                                                                                                                "FF(j!3)"))
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ae_le?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "pointwise_ae?")
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ae?")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "fullset")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "ae_in?")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "E!2")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "member")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "i!3"
                                                                                                                                                                         "j!3")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "bounded_below?")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         +
                                                                                                                         "0")
                                                                                                                        (("2"
                                                                                                                          (skolem
                                                                                                                           +
                                                                                                                           "n!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "o ")
                                                                                                                            (("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                1
                                                                                                                                -4
                                                                                                                                -17))
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "integral_nonneg[T1, S1, mu]"
                                                                                                                                 ("f"
                                                                                                                                  "F(0)"))
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "0"
                                                                                                                                   "_")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -4)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "integral_ae_le[T1, S1, mu]"
                                                                                                                                       ("f1"
                                                                                                                                        "F(0)"
                                                                                                                                        "f2"
                                                                                                                                        "FF(n!1)"))
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-2
                                                                                                                                            1))
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "ae_increasing?")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "ae_le?")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "pointwise_ae?")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "ae?")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "fullset")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "ae_in?")
                                                                                                                                                      (("1"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "E!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "member")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "x!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "0"
                                                                                                                                                                     "n!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "FF"
                                                                                                                                                                         -1
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "series")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "sigma")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "0")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (1
                                                                                                                -16))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "FF")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ae_increasing?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "emptyset")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "series")
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "sigma_split"
                                                                                                                               ("low"
                                                                                                                                "0"
                                                                                                                                "high"
                                                                                                                                "j!1"
                                                                                                                                "z"
                                                                                                                                "i!1"
                                                                                                                                "F"
                                                                                                                                "LAMBDA i: F(i)(x!1)"))
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-1
                                                                                                  -3
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (induct
                                                                                                   "n")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "o ")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "FF")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "series")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sigma")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "F")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "o")
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "FF")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "series")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "o")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "sigma"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "integral_add[T1, S1, mu]"
                                                                                                                   ("f1"
                                                                                                                    "F(1 + j!1)"
                                                                                                                    "f2"
                                                                                                                    "LAMBDA x: sigma(0, j!1, LAMBDA i: F(i)(x))"))
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "+")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (inst
                                                                                                                     -2
                                                                                                                     "j!1")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("4"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (1
                                                                                                -2))
                                                                                              (("2"
                                                                                                (induct
                                                                                                 "j")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "FF")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "series")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sigma")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "eta")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "F")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "o")
                                                                                                                    (("1"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "FF")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "series")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "sigma"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "1+j!1")
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "integrable_add[T1, S1, mu]"
                                                                                                             ("f1"
                                                                                                              "F(1 + j!1)"
                                                                                                              "f2"
                                                                                                              "LAMBDA x: sigma(0, j!1, LAMBDA i: F(i)(x))"))
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "+")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (name
                                                                                           "GG"
                                                                                           "lambda j: lambda x: series(lambda i: *[T1](phi(X!1),G(i))(x))(j)")
                                                                                          (("2"
                                                                                            (case
                                                                                             "forall j: integrable?[T1, S1, mu](GG(j))")
                                                                                            (("1"
                                                                                              (case
                                                                                               "forall j,x: GG(j)(x)>=0")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "pointwise_increasing?(GG)")
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "forall (n:nat): series(LAMBDA j: integral[T1, S1, contraction(mu, X!1)](G(j)))(n) = (integral[T1, S1, mu] o GG)(n)")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "extensionality_postulate"
                                                                                                       ("f"
                                                                                                        "series(LAMBDA j: integral[T1, S1, contraction(mu, X!1)](G(j)))"
                                                                                                        "g"
                                                                                                        "integral[T1, S1, mu] o GG"))
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -2
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1
                                                                                                               -2
                                                                                                               -8)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "monotone_convergence[T1, S1, mu]"
                                                                                                                 ("F"
                                                                                                                  "GG"))
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (case-replace
                                                                                                                         "real_fun_preds.bounded?(integral[T1,S1,mu] o GG)")
                                                                                                                        (("1"
                                                                                                                          (skolem
                                                                                                                           -
                                                                                                                           "g!1")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "g!1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "g!1")
                                                                                                                                (("1"
                                                                                                                                  (case-replace
                                                                                                                                   "l!1=integral(g!1)")
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "ae_nonneg?(g!1)")
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -3)
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "forall x: x_eq(x_limit(LAMBDA j: (TRUE,GG(j)(x))), nu(x_section(EE, x)))")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             -10
                                                                                                                                             -12
                                                                                                                                             -13
                                                                                                                                             -14
                                                                                                                                             -15)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "ae?(lambda x: x_eq((TRUE,plus(g!1)(x)),nu(x_section(EE, x))))")
                                                                                                                                              (("1"
                                                                                                                                                (name
                                                                                                                                                 "FF"
                                                                                                                                                 "lambda j: lambda x: series(LAMBDA i: F(i)(x))(j)")
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "forall j,x: FF(j)(x)>=0")
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "FORALL x:
                                                                                        x_eq(x_limit(LAMBDA j: (TRUE, FF(j)(x))), nu(x_section(EE, x)))")
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "pointwise_increasing?(FF)")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "ae_convergence?(FF, g!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (case-replace
                                                                                                                                                             "FORALL j: integrable?[T1, S1, mu](F(j))")
                                                                                                                                                            (("1"
                                                                                                                                                              (case-replace
                                                                                                                                                               "FORALL j: integrable?[T1, S1, mu](FF(j))")
                                                                                                                                                              (("1"
                                                                                                                                                                (case
                                                                                                                                                                 "forall (n:nat): series(LAMBDA j: integral[T1, S1, mu](F(j)))(n)= (integral[T1,S1,mu] o FF)(n)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case-replace
                                                                                                                                                                   "series(LAMBDA j: integral[T1, S1, mu](F(j)))=integral[T1, S1, mu] o FF")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "monotone_convergence[T1, S1, mu]"
                                                                                                                                                                       ("F"
                                                                                                                                                                        "FF"))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide
                                                                                                                                                                             -1
                                                                                                                                                                             -2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "g!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "converges_upto?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (name-replace
                                                                                                                                                                                       "SS"
                                                                                                                                                                                       "integral[T1, S1, mu] o FF")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (name-replace
                                                                                                                                                                                         "LIMIT"
                                                                                                                                                                                         "integral[T1, S1, mu](g!1)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                           (-1
                                                                                                                                                                                            1))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "convergence")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "metric_convergence_def")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -
                                                                                                                                                                                                     "epsilon!1")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         +
                                                                                                                                                                                                         "n!1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "i!1")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (grind)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-4
                                                                                                                                                                            1))
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "ae_increasing?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "emptyset")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "pointwise_increasing?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "x!1")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "increasing?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (propax)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (apply-extensionality
                                                                                                                                                                     :hide?
                                                                                                                                                                     t)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "o"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1
                                                                                                                                                                        -2))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "FF")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "series")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (induct
                                                                                                                                                                             "n")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "sigma")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "F")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "o")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (skosimp)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sigma"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "j!1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "1+j!1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "integral_add[T1, S1, mu]"
                                                                                                                                                                                           ("f1"
                                                                                                                                                                                            "F(1 + j!1)"
                                                                                                                                                                                            "f2"
                                                                                                                                                                                            "LAMBDA x: sigma(0, j!1, LAMBDA i: F(i)(x))"))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "+")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("4"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-1
                                                                                                                                                                  1))
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "FF")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "series")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (induct
                                                                                                                                                                       "j")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "sigma")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "F")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "o")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "sigma"
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "1+j!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "integrable_add[T1, S1, mu]"
                                                                                                                                                                               ("f1"
                                                                                                                                                                                "F(1 + j!1)"
                                                                                                                                                                                "f2"
                                                                                                                                                                                "LAMBDA x: sigma(0, j!1, LAMBDA i: F(i)(x))"))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "+")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "forall j,x: F(j)(x)<=FF(j)(x)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (skosimp)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "j!1"
                                                                                                                                                                     "_")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "ae_le?(F(j!1),g!1)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "integral_ae_abs[T1,S1,mu]"
                                                                                                                                                                         ("h"
                                                                                                                                                                          "F(j!1)"
                                                                                                                                                                          "f"
                                                                                                                                                                          "g!1"))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             (-1
                                                                                                                                                                              -9
                                                                                                                                                                              -23
                                                                                                                                                                              1))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "ae_nonneg?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "ae_le?")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "pointwise_ae?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "ae?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "fullset")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "ae_in?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skosimp*)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             +
                                                                                                                                                                                             "union(E!2,E!3)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -
                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "union")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "member")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "abs")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "abs")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -
                                                                                                                                                                                                                 "j!1"
                                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "F")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -21)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               (1
                                                                                                                                                                                -21
                                                                                                                                                                                -24))
                                                                                                                                                                              (("2"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "x_section_measurable"
                                                                                                                                                                                 ("nu"
                                                                                                                                                                                  "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                                                                                                                                                                                  "M"
                                                                                                                                                                                  "EE"))
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "measurable_set?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (propax)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          -2
                                                                                                                                                                          -3
                                                                                                                                                                          -22
                                                                                                                                                                          1))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "ae_convergence?")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "ae_le?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "pointwise_ae?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "ae_convergence_in?")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "ae?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "fullset")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "ae_in?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           +
                                                                                                                                                                                           "E!2")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "x!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (rewrite
                                                                                                                                                                                                     "metric_convergence_def")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "metric_converges_to")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "FF(j!1)(x!1)-g!1(x!1)")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "n!1+j!1")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "pointwise_increasing?")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -
                                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "increasing?")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -
                                                                                                                                                                                                                     "j!1"
                                                                                                                                                                                                                     "n!1+j!1")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "ball")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   (-21
                                                                                                                                                                    1))
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "FF")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "series")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "_"
                                                                                                                                                                           "x!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "sigma")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-1
                                                                                                                                                              -3
                                                                                                                                                              -2
                                                                                                                                                              -4
                                                                                                                                                              -6
                                                                                                                                                              1))
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "ae_convergence?")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "ae_convergence_in?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ae_nonneg?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "pointwise_ae?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "ae?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "fullset")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "ae_in?")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp*)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "union(E!2,E!3)")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "union")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "x!1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "x!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "x!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "plus")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "max")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "x_eq")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "x_limit")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (case
                                                                                                                                                                                                             "convergence(LAMBDA (n:nat): FF(n)(x!1), g!1(x!1))")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (name-replace
                                                                                                                                                                                                               "SS"
                                                                                                                                                                                                               "LAMBDA (n: nat): FF(n)(x!1)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (name-replace
                                                                                                                                                                                                                 "LIMIT"
                                                                                                                                                                                                                 "g!1(x!1)")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                   (-1
                                                                                                                                                                                                                    3))
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "convergence")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                       "metric_convergence_def")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "metric_converges_to")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -
                                                                                                                                                                                                                             "r!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 +
                                                                                                                                                                                                                                 "n!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     -
                                                                                                                                                                                                                                     "i!1")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (ground)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -6
                                                                                                                                                                                                               *
                                                                                                                                                                                                               rl)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (prop)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                     "convergence_sequences.limit_def"
                                                                                                                                                                                                                     ("l"
                                                                                                                                                                                                                      "g!1(x!1)"
                                                                                                                                                                                                                      "v"
                                                                                                                                                                                                                      "LAMBDA i: FF(i)(x!1)"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (1
                                                                                                                                                            -19))
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "pointwise_increasing?")
                                                                                                                                                            (("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "increasing?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (skolem
                                                                                                                                                                   +
                                                                                                                                                                   ("i!1"
                                                                                                                                                                    "j!1"))
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "FF")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "series")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "_"
                                                                                                                                                                           "x!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "sigma_split"
                                                                                                                                                                             ("low"
                                                                                                                                                                              "0"
                                                                                                                                                                              "high"
                                                                                                                                                                              "j!1"
                                                                                                                                                                              "z"
                                                                                                                                                                              "i!1"
                                                                                                                                                                              "F"
                                                                                                                                                                              "LAMBDA i: F(i)(x!1)"))
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (1
                                                                                                                                                          -15
                                                                                                                                                          -18
                                                                                                                                                          -1))
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "x_limit_to_sum"
                                                                                                                                                               ("S"
                                                                                                                                                                "LAMBDA j: (TRUE, FF(j)(x!1))"
                                                                                                                                                                "T"
                                                                                                                                                                "LAMBDA j: (TRUE, F(j)(x!1))"))
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "x_eq")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "x_sum")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case-replace
                                                                                                                                                                         "convergence_sequences.convergent?(series(LAMBDA j: F(j)(x!1)))")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2
                                                                                                                                                                   2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "FF")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "series")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "x_sigma")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "x_eq")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "j!1"
                                                                                                                                                                   "x!1")
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("3"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "j!1"
                                                                                                                                                           "x!1")
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (1
                                                                                                                                                        -17))
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "FF")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "series")
                                                                                                                                                          (("2"
                                                                                                                                                            (induct
                                                                                                                                                             "j")
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "0"
                                                                                                                                                                 "x!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sigma")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "x!1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "j!1+1"
                                                                                                                                                                     "x!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "sigma"
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-1
                                                                                                                                                  -2
                                                                                                                                                  -4
                                                                                                                                                  1))
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ae_nonneg?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "ae_convergence?")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "ae_convergence_in?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "pointwise_ae?")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "ae?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "fullset")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "ae_in?")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp*)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "union(E!2,E!3)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "union")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "x!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "x!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "x!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "plus")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "max")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "x_limit")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "convergence(LAMBDA (n:nat): GG(n)(x!1), g!1(x!1))")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             -4)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (case-replace
                                                                                                                                                                                               "convergence_sequences.convergent?(LAMBDA i: GG(i)(x!1))")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "convergence_sequences.limit_def"
                                                                                                                                                                                                 ("v"
                                                                                                                                                                                                  "LAMBDA i: GG(i)(x!1)"
                                                                                                                                                                                                  "l"
                                                                                                                                                                                                  "g!1(x!1)"))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "convergence_sequences.convergent?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   +
                                                                                                                                                                                                   "g!1(x!1)")
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                             (-3
                                                                                                                                                                                              1))
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "convergence")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "metric_convergence_def")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "metric_converges_to")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -
                                                                                                                                                                                                       "epsilon!1")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           +
                                                                                                                                                                                                           "n!1")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -
                                                                                                                                                                                                               "i!1")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (grind)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (skosimp)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -11
                                                                                                                                                 "x!1")
                                                                                                                                                (("2"
                                                                                                                                                  (case-replace
                                                                                                                                                   "X!1(x!1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "x_limit_to_sum"
                                                                                                                                                     ("S"
                                                                                                                                                      "LAMBDA j: (TRUE, GG(j)(x!1))"
                                                                                                                                                      "T"
                                                                                                                                                      "LAMBDA j: (TRUE,G(j)(x!1))"))
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -14
                                                                                                                                                         "x!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-1
                                                                                                                                                            -13
                                                                                                                                                            -14
                                                                                                                                                            1))
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "x_eq")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "x_sum")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case-replace
                                                                                                                                                                   "convergence_sequences.convergent?(series(LAMBDA j: G(j)(x!1)))")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (1
                                                                                                                                                          -1))
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "GG")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "series")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "*")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "phi")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "member")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "x_sigma")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "x_eq")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -7
                                                                                                                                                         "j!1"
                                                                                                                                                         "x!1")
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (case-replace
                                                                                                                                                     "(LAMBDA j: (TRUE, GG(j)(x!1)))=(lambda j: (TRUE,0))")
                                                                                                                                                    (("1"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (1
                                                                                                                                                        2))
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "x_limit")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "convergent_const"
                                                                                                                                                           ("a"
                                                                                                                                                            "0"))
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "const_fun")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "limit_const"
                                                                                                                                                                 ("a"
                                                                                                                                                                  "0"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "const_fun")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case-replace
                                                                                                                                                                       "x_section(EE, x!1)=emptyset")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "nu")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "sigma_finite_measure?")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "measure?")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "measure_empty?")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "x_eq")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (apply-extensionality
                                                                                                                                                                         :hide?
                                                                                                                                                                         t)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "emptyset")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "x_section")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "EE")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "cross_product")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "intersection")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       (1
                                                                                                                                                        2))
                                                                                                                                                      (("2"
                                                                                                                                                        (apply-extensionality
                                                                                                                                                         :hide?
                                                                                                                                                         t)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "GG")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "*")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "phi")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "member")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "series")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "sigma_zero")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (skosimp)
                                                                                                                                            (("3"
                                                                                                                                              (inst
                                                                                                                                               -6
                                                                                                                                               "j!1"
                                                                                                                                               "x!1")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-3
                                                                                                                                          1
                                                                                                                                          -5
                                                                                                                                          -6))
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ae_convergence?")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "ae_nonneg?")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "pointwise_ae?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "ae_convergence_in?")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "ae?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "fullset")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "ae_in?")
                                                                                                                                                      (("2"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "E!2")
                                                                                                                                                          (("2"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "x!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "pointwise_increasing?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "x!1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "_"
                                                                                                                                                                       "x!1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "metric_convergence_def")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "metric_converges_to")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "GG(0)(x!1)-g!1(x!1)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skosimp)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "n!1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "ball")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "increasing?")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -
                                                                                                                                                                                         "0"
                                                                                                                                                                                         "n!1")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "0")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (grind)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "0")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (name-replace
                                                                                                                                     "SS"
                                                                                                                                     "integral[T1, S1, mu] o GG")
                                                                                                                                    (("2"
                                                                                                                                      (name-replace
                                                                                                                                       "LIMIT"
                                                                                                                                       "integral(g!1)")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "converges_upto?")
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-4
                                                                                                                                              -10
                                                                                                                                              1))
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "convergence_sequences.unique_limit"
                                                                                                                                               ("u"
                                                                                                                                                "SS"
                                                                                                                                                "l1"
                                                                                                                                                "l!1"
                                                                                                                                                "l2"
                                                                                                                                                "LIMIT"))
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   (1
                                                                                                                                                    -1))
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "metric_convergence_def")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "metric_converges_to")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "convergence")
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "epsilon!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "i!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (ground)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-7
                                                                                                                            -3
                                                                                                                            1
                                                                                                                            -4
                                                                                                                            -5))
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "increasing(integral[T1, S1, mu] o GG)")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "bounded?")
                                                                                                                              (("1"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (name-replace
                                                                                                                                   "SS"
                                                                                                                                   "integral[T1, S1, mu] o GG")
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -3
                                                                                                                                     -4
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "bounded_above?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "l!1")
                                                                                                                                        (("1"
                                                                                                                                          (skolem
                                                                                                                                           +
                                                                                                                                           "n!1")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "increasing?")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "convergence")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "SS(n!1)-l!1")
                                                                                                                                                (("1"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "n!1+n!2")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "n!1"
                                                                                                                                                       "n!1+n!2")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (grind)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "bounded_below?")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     +
                                                                                                                                     "0")
                                                                                                                                    (("2"
                                                                                                                                      (skolem
                                                                                                                                       +
                                                                                                                                       "n!1")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "o")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "n!1"
                                                                                                                                           "_")
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "integral_nonneg[T1, S1, mu]"
                                                                                                                                             ("f"
                                                                                                                                              "GG(n!1)"))
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               2
                                                                                                                               -4)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "pointwise_increasing?")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "increasing?")
                                                                                                                                  (("2"
                                                                                                                                    (skolem
                                                                                                                                     +
                                                                                                                                     ("i!1"
                                                                                                                                      "j!1"))
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "o")
                                                                                                                                        (("2"
                                                                                                                                          (inst-cp
                                                                                                                                           -4
                                                                                                                                           "j!1")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -4
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "integral_ae_le[T1, S1, mu]"
                                                                                                                                               ("f1"
                                                                                                                                                "GG(i!1)"
                                                                                                                                                "f2"
                                                                                                                                                "GG(j!1)"))
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   (-2
                                                                                                                                                    1))
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "ae_le?")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "pointwise_ae?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ae?")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "fullset")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "ae_in?")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "emptyset")
                                                                                                                                                              (("2"
                                                                                                                                                                (skosimp)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "x!1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "i!1"
                                                                                                                                                                     "j!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-1
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "pointwise_increasing?")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "ae_increasing?")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "emptyset")
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "x!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "increasing?")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (induct
                                                                                                         "n")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "o"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "GG")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "series")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "sigma")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -4
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "contraction_integral[T1,S1]"
                                                                                                                       ("mu"
                                                                                                                        "mu"
                                                                                                                        "A"
                                                                                                                        "X!1"
                                                                                                                        "f"
                                                                                                                        "G(0)"))
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "*")
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "o"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "GG"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "series"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "sigma"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -4
                                                                                                                         "1+j!1")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "j!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "GG"
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "series"
                                                                                                                               -3)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "contraction_integral[T1,S1]"
                                                                                                                                 ("mu"
                                                                                                                                  "mu"
                                                                                                                                  "A"
                                                                                                                                  "X!1"
                                                                                                                                  "f"
                                                                                                                                  "G(1+j!1)"))
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -1
                                                                                                                                     -2
                                                                                                                                     -3
                                                                                                                                     -6
                                                                                                                                     -7)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "integral_add[T1,S1,mu]"
                                                                                                                                       ("f1"
                                                                                                                                        "*[T1](phi(X!1), G(1 + j!1))"
                                                                                                                                        "f2"
                                                                                                                                        "LAMBDA x: sigma(0, j!1, LAMBDA i: *[T1](phi(X!1), G(i))(x))"))
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "+"
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "pointwise_increasing?")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "increasing?")
                                                                                                      (("2"
                                                                                                        (skolem
                                                                                                         +
                                                                                                         ("i!1"
                                                                                                          "j!1"))
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -13
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "GG")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "series")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "*")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "phi")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (case-replace
                                                                                                                         "X!1(x!1)")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "_"
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "sigma_split"
                                                                                                                             ("low"
                                                                                                                              "0"
                                                                                                                              "high"
                                                                                                                              "j!1"
                                                                                                                              "z"
                                                                                                                              "i!1"
                                                                                                                              "F"
                                                                                                                              "LAMBDA i: 1 * G(i)(x!1)"))
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "sigma_zero")
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "sigma_zero")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  -11))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "GG")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "series")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "*")
                                                                                                      (("2"
                                                                                                        (skolem
                                                                                                         +
                                                                                                         ("_"
                                                                                                          "x!1"))
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "_"
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (induct
                                                                                                             "j")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "sigma")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "0")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "phi")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "sigma"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "phi"
                                                                                                                   1
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (lift-if
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "1+j!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (-2
                                                                                                1
                                                                                                -5))
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "GG")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "series")
                                                                                                  (("2"
                                                                                                    (induct
                                                                                                     "j")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "contraction_integrable[T1,S1]"
                                                                                                             ("mu"
                                                                                                              "mu"
                                                                                                              "A"
                                                                                                              "X!1"
                                                                                                              "f"
                                                                                                              "G(0)"))
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "*")
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "integrable_is_measurable[T1, S1, contraction(mu, X!1)]")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "G(0)")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skosimp)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "sigma"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "1+j!1")
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "integrable_is_measurable[T1, S1, contraction(mu, X!1)]")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "G(1 + j!1)")
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "contraction_integrable[T1,S1]"
                                                                                                                 ("mu"
                                                                                                                  "mu"
                                                                                                                  "A"
                                                                                                                  "X!1"
                                                                                                                  "f"
                                                                                                                  "G(1+j!1)"))
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "integrable_add[T1, S1, mu]"
                                                                                                                     ("f1"
                                                                                                                      "*[T1](phi(X!1), G(1 + j!1))"
                                                                                                                      "f2"
                                                                                                                      "LAMBDA x:sigma(0, j!1, LAMBDA i: *[T1](phi(X!1), G(i))(x))"))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "+")
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (expand
                                                                                   "measurable_set?")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (skosimp)
                                                                                  nil
                                                                                  nil)
                                                                                 ("5"
                                                                                  (skosimp)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (lemma
                                                                                 "integral_nonneg[T1, S1, contraction[T1, S1](mu, X!1)]"
                                                                                 ("f"
                                                                                  "G(j!1)"))
                                                                                (("2"
                                                                                  (inst
                                                                                   -8
                                                                                   "j!1"
                                                                                   "_")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -8)
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("4"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "measurable_set?")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skolem
                                                                       +
                                                                       "j!1")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "j!1")
                                                                        (("2"
                                                                          (expand
                                                                           "x_sum"
                                                                           1)
                                                                          (("2"
                                                                            (case-replace
                                                                             "integrable?[T1, S1, mu](F(j!1))")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "sfm_integral[T1,S1,mu]"
                                                                                 ("f"
                                                                                  "F(j!1)"))
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "(LAMBDA i:
                                                                              integral[T1, S1, contraction(mu, A_of(mu)(i))]
                                                                                  (F(j!1)))=(LAMBDA (i_1: nat):
                                                                                    integral[T1, S1, to_measure(MU(i_1))]
                                                                                        (F(j!1)))")
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "DRL1"
                                                                                       "(series(LAMBDA (i_1: nat):
                                                                                      integral[T1, S1, to_measure(MU(i_1))]
                                                                                          (F(j!1))))")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "metric_convergence_def"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "metric_converges_to")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "ball")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("1"
                                                                                                (name-replace
                                                                                                 "RHS"
                                                                                                 "integral[T1, S1, mu](F(j!1))")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "x_eq"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (lift-if
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "convergence_sequences.limit_def"
                                                                                                         ("v"
                                                                                                          "DRL1"
                                                                                                          "l"
                                                                                                          "RHS"))
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-2
                                                                                                              1))
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "convergence")
                                                                                                              (("1"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (skosimp)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "epsilon!1")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "n!1")
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "i!1")
                                                                                                                              (("1"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "convergent?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "RHS")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "convergence")
                                                                                                                      (("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "epsilon!1")
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "n!1")
                                                                                                                              (("2"
                                                                                                                                (skosimp)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "i!1")
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "convergent?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "RHS")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "convergence")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "epsilon!1")
                                                                                                                    (("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         +
                                                                                                                         "n!1")
                                                                                                                        (("2"
                                                                                                                          (skosimp)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -14
                                                                                           "i!1"
                                                                                           "j!1")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (apply-extensionality
                                                                                     :hide?
                                                                                     t)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -4
                                                                                       "_"
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "measure_eq_integral[T1,S1]"
                                                                                         ("mu"
                                                                                          "contraction(mu, A_of(mu)(x!1))"
                                                                                          "nu"
                                                                                          "to_measure(MU(x!1))"
                                                                                          "f"
                                                                                          "F(j!1)"))
                                                                                        (("1"
                                                                                          (replace
                                                                                           -5)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -14
                                                                                                 "x!1"
                                                                                                 "j!1")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "measurable_set?")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -14
                                                                                         "i!1"
                                                                                         "j!1")
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (skosimp)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "measurable_set?")
                                                                                        (("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (skosimp)
                                                                                      (("4"
                                                                                        (expand
                                                                                         "measurable_set?")
                                                                                        (("4"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            -14
                                                                                            -4))
                                                                                          (("4"
                                                                                            (inst
                                                                                             -2
                                                                                             "i!1"
                                                                                             "j!1")
                                                                                            (("4"
                                                                                              (inst
                                                                                               -
                                                                                               "_"
                                                                                               "i!1")
                                                                                              (("4"
                                                                                                (lemma
                                                                                                 "measure_eq_integrable?[T1,S1]"
                                                                                                 ("mu"
                                                                                                  "contraction(mu, A_of(mu)(i!1))"
                                                                                                  "nu"
                                                                                                  "to_measure(MU(i!1))"
                                                                                                  "f"
                                                                                                  "F(j!1)"))
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "measurable_set?")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (skosimp)
                                                                                    (("3"
                                                                                      (inst
                                                                                       -14
                                                                                       "i!1"
                                                                                       "j!1")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (expand
                                                                                     "measurable_set?")
                                                                                    (("4"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("5"
                                                                                    (skosimp)
                                                                                    (("5"
                                                                                      (inst
                                                                                       -14
                                                                                       "i!1"
                                                                                       "j!1")
                                                                                      (("5"
                                                                                        (lemma
                                                                                         "measure_eq_integrable?[T1,S1]"
                                                                                         ("mu"
                                                                                          "contraction(mu, A_of(mu)(i!1))"
                                                                                          "nu"
                                                                                          "to_measure(MU(i!1))"
                                                                                          "f"
                                                                                          "F(j!1)"))
                                                                                        (("1"
                                                                                          (inst
                                                                                           -5
                                                                                           "_"
                                                                                           "i!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "measurable_set?")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "nn_integrable_is_nn_integrable[T1, S1, mu]"
                                                                                   ("f"
                                                                                    "F(j!1)"))
                                                                                  (("2"
                                                                                    (inst
                                                                                     -16
                                                                                     "j!1"
                                                                                     "_")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -16)
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "x_eq"
                                                                                 2)
                                                                                (("2"
                                                                                  (lift-if
                                                                                   2)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (prop)
                                                                                      (("2"
                                                                                        (hide
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "convergent?")
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "l!1")
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "UU"
                                                                                                 "series(LAMBDA (i_1: nat):
                                                                           integral[T1, S1, to_measure(MU(i_1))](F(j!1)))")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-1
                                                                                                    1))
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "convergence")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "metric_convergence_def")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "metric_converges_to")
                                                                                                        (("1"
                                                                                                          (skosimp)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "r!1")
                                                                                                            (("1"
                                                                                                              (skosimp)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 " n!1")
                                                                                                                (("1"
                                                                                                                  (skosimp)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "i!1")
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -12
                                                                                                     "i!1"
                                                                                                     "j!1")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (lemma
                                                                   "integral_nonneg[T1, S1, mu]"
                                                                   ("f"
                                                                    "F(j!1)"))
                                                                  (("2"
                                                                    (inst
                                                                     -16
                                                                     "j!1"
                                                                     "_")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-1
                                                                1
                                                                -14
                                                                -13
                                                                -11))
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (lemma
                                                                   "sfm_integrable[T1,S1,mu]"
                                                                   ("h"
                                                                    "F(j!1)"))
                                                                  (("1"
                                                                    (case
                                                                     "forall i: integrable?[T1, S1, contraction(mu, A_of(mu)(i))](F(j!1)) <=> integrable?[T1, S1, to_measure(MU(i))](F(j!1))")
                                                                    (("1"
                                                                      (case-replace
                                                                       "(LAMBDA i:
                                                                           integral[T1, S1, contraction(mu, A_of(mu)(i))]
                                                                               (F(j!1)))=(LAMBDA i:
                                                                          integral[T1, S1, to_measure(MU(i))](F(j!1)))")
                                                                      (("1"
                                                                        (case-replace
                                                                         "(FORALL i:
                                                          integrable?[T1, S1, contraction(mu, A_of(mu)(i))](F(j!1)))")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -4
                                                                             1
                                                                             rl)
                                                                            (("1"
                                                                              (name-replace
                                                                               "UU"
                                                                               "(series((LAMBDA i: integral[T1, S1, to_measure(MU(i))](F(j!1)))))")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "convergent?")
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -6
                                                                                 "_"
                                                                                 "j!1")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (inst
                                                                             -2
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -6
                                                                               "i!1"
                                                                               "j!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (apply-extensionality
                                                                         :hide?
                                                                         t)
                                                                        (("1"
                                                                          (inst
                                                                           -3
                                                                           "_"
                                                                           "x!1")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (inst
                                                                               -4
                                                                               "x!1"
                                                                               "j!1")
                                                                              (("1"
                                                                                (lemma
                                                                                 "measure_eq_integral[T1,S1]"
                                                                                 ("mu"
                                                                                  "contraction(mu, A_of(mu)(x!1))"
                                                                                  "nu"
                                                                                  "to_measure(MU(x!1))"
                                                                                  "f"
                                                                                  "F(j!1)"))
                                                                                (("1"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -5)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "measurable_set?")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (inst
                                                                             -5
                                                                             "i!1"
                                                                             "j!1")
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (flatten)
                                                                          (("4"
                                                                            (skosimp)
                                                                            (("4"
                                                                              (inst
                                                                               -
                                                                               "i!1")
                                                                              (("4"
                                                                                (inst
                                                                                 -5
                                                                                 "i!1"
                                                                                 "j!1")
                                                                                (("4"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (skosimp)
                                                                        (("3"
                                                                          (inst
                                                                           -5
                                                                           "i!1"
                                                                           "j!1")
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("4"
                                                                        (skosimp)
                                                                        (("4"
                                                                          (inst
                                                                           -5
                                                                           "i!1"
                                                                           "j!1")
                                                                          (("4"
                                                                            (inst
                                                                             -
                                                                             "i!1")
                                                                            (("4"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -4
                                                                          -5
                                                                          -3))
                                                                        (("2"
                                                                          (lemma
                                                                           "measure_eq_integrable?[T1,S1]"
                                                                           ("mu"
                                                                            "contraction(mu, A_of(mu)(i!1))"
                                                                            "nu"
                                                                            "to_measure(MU(i!1))"
                                                                            "f"
                                                                            "F(j!1)"))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "_"
                                                                               "i!1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2
                                                                                   -1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "measurable_set?")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (-3
                                                                      -4
                                                                      1))
                                                                    (("2"
                                                                      (expand
                                                                       "nn_measurable?")
                                                                      (("2"
                                                                        (expand
                                                                         "EE")
                                                                        (("2"
                                                                          (split)
                                                                          (("1"
                                                                            (expand
                                                                             "F")
                                                                            (("1"
                                                                              (lemma
                                                                               "x_section_measurable"
                                                                               ("nu"
                                                                                "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                                                                                "M"
                                                                                "intersection(cross_product(X!1, Y!1), E!1)"))
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "measurable_set?")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "j!1"
                                                                               "x!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (skosimp)
                                                              (("2"
                                                                (expand
                                                                 "to_measure")
                                                                (("2"
                                                                  (expand
                                                                   "MU")
                                                                  (("2"
                                                                    (expand
                                                                     "fm_contraction")
                                                                    (("2"
                                                                      (expand
                                                                       "contraction")
                                                                      (("2"
                                                                        (expand
                                                                         "x_eq")
                                                                        (("2"
                                                                          (lemma
                                                                           "A_of_def2"
                                                                           ("mu"
                                                                            "mu"
                                                                            "n"
                                                                            "i!1"))
                                                                          (("2"
                                                                            (lemma
                                                                             "m_monotone[T1,S1,mu]"
                                                                             ("b"
                                                                              "A_of(mu)(i!1)"
                                                                              "a"
                                                                              "intersection(A_of(mu)(i!1), E!2)"))
                                                                            (("1"
                                                                              (expand
                                                                               "x_le")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "intersection")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "measurable_set?")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "measurable_set?")
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (expand
                                                             "measurable_set?")
                                                            (("3"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (skosimp)
                                                        (("3"
                                                          (inst
                                                           -4
                                                           "i!1"
                                                           "j!1")
                                                          (("3"
                                                            (inst
                                                             -5
                                                             "j!1"
                                                             "_")
                                                            (("3"
                                                              (lemma
                                                               "integral_nonneg[T1, S1, to_measure[T1, S1](NU(i!1))]"
                                                               ("f"
                                                                "G(j!1)"))
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (skosimp)
                                                        (("4"
                                                          (inst
                                                           -4
                                                           "i!1"
                                                           "j!1")
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("5"
                                                        (skosimp)
                                                        (("5"
                                                          (inst
                                                           -10
                                                           "i!1"
                                                           "j!1")
                                                          (("5"
                                                            (lemma
                                                             "integral_nonneg[T1, S1, to_measure[T1, S1](MU(i!1))]"
                                                             ("f"
                                                              "F(j!1)"))
                                                            (("5"
                                                              (assert)
                                                              (("5"
                                                                (skosimp)
                                                                (("5"
                                                                  (inst
                                                                   -12
                                                                   "j!1"
                                                                   "x!1")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("6"
                                                        (skosimp)
                                                        (("6"
                                                          (inst
                                                           -10
                                                           "i!1"
                                                           "j!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (skosimp)
                                                    (("3"
                                                      (inst
                                                       -5
                                                       "j!1"
                                                       "_")
                                                      (("3"
                                                        (inst
                                                         -4
                                                         "i!1"
                                                         "j!1")
                                                        (("3"
                                                          (lemma
                                                           "integral_nonneg[T1, S1, to_measure[T1, S1](NU(i!1))]"
                                                           ("f"
                                                            "G(j!1)"))
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("4"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("5"
                                                    (skosimp)
                                                    (("5"
                                                      (inst
                                                       -10
                                                       "i!1"
                                                       "j!1")
                                                      (("5"
                                                        (inst
                                                         -12
                                                         "j!1"
                                                         "_")
                                                        (("5"
                                                          (lemma
                                                           "integral_nonneg[T1, S1, to_measure[T1, S1](MU(i!1))]"
                                                           ("f"
                                                            "F(j!1)"))
                                                          (("5"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("6"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (expand
                                                       "contraction")
                                                      (("2"
                                                        (expand "EE")
                                                        (("2"
                                                          (expand
                                                           "cross_product")
                                                          (("2"
                                                            (expand
                                                             "intersection")
                                                            (("2"
                                                              (expand
                                                               "x_section")
                                                              (("2"
                                                                (expand
                                                                 "member")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "x_eq")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst -9 "x!1")
                                                    (("3"
                                                      (expand
                                                       "measurable_set?")
                                                      (("3"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (skosimp)
                                                  (("4"
                                                    (inst -6 "x!1")
                                                    (("4"
                                                      (expand
                                                       "measurable_set?")
                                                      (("4"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-4 1))
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst - "x!1")
                                                    (("2"
                                                      (expand "G")
                                                      (("2"
                                                        (expand "o ")
                                                        (("2"
                                                          (expand
                                                           "x_section"
                                                           1
                                                           1)
                                                          (("2"
                                                            (name-replace
                                                             "MM"
                                                             "x_section(E!1, x!1)")
                                                            (("2"
                                                              (lemma
                                                               "sigma_finite_contraction_def"
                                                               ("nu"
                                                                "contraction(nu, Y!1)"
                                                                "E"
                                                                "MM"))
                                                              (("1"
                                                                (expand
                                                                 "x_sum")
                                                                (("1"
                                                                  (expand
                                                                   "x_eq")
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (skosimp)
                                                (("3"
                                                  (inst -4 "x!1")
                                                  (("3"
                                                    (expand
                                                     "measurable_set?")
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "NU")
                                              (("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (expand
                                                     "to_measure")
                                                    (("2"
                                                      (lemma
                                                       "sigma_finite_contraction_def[T1,S1]"
                                                       ("nu"
                                                        "contraction(mu, X!1)"
                                                        "E"
                                                        "E!2"))
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "measurable_set?")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skosimp)
                                          (("2"
                                            (expand "G")
                                            (("2"
                                              (lemma
                                               "x_section_integrable"
                                               ("mu"
                                                "NU(i!1)"
                                                "nu"
                                                "fm_contraction[T2, S2]
                                             (contraction(nu, Y!1), A_of(contraction(nu, Y!1))(j!1))"
                                                "M"
                                                "E!1"))
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "measurable_set?")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skosimp)
                                      (("2"
                                        (expand "G")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (skosimp)
                                    (("2"
                                      (inst - "x1!1")
                                      (("2"
                                        (expand "measurable_set?")
                                        (("2"
                                          (expand "x_section")
                                          (("2"
                                            (expand "x_section")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (expand "measurable_set?")
                                    (("3"
                                      (skosimp)
                                      (("3"
                                        (lemma
                                         "A_of_def2"
                                         ("n"
                                          "j!1"
                                          "mu"
                                          "contraction[T2, S2](nu, Y!1)"))
                                        (("3" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp)
                                  (("2"
                                    (expand "measurable_set?")
                                    (("2"
                                      (lemma
                                       "x_section_measurable"
                                       ("x"
                                        "x!1"
                                        "S1"
                                        "S1"
                                        "S2"
                                        "S2"
                                        "Z"
                                        "E!1"))
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skosimp)
                              (("2"
                                (expand "F")
                                (("2"
                                  (replace -1)
                                  (("2"
                                    (expand "o" 1)
                                    (("2"
                                      (expand "x_section" 1 1)
                                      (("2"
                                        (inst - "x!1")
                                        (("2"
                                          (name-replace
                                           "MM"
                                           "x_section(EE, x!1)")
                                          (("2"
                                            (hide-all-but (-2 1))
                                            (("2"
                                              (lemma
                                               "sigma_finite_contraction_def[T2,S2]"
                                               ("E" "MM" "nu" "nu"))
                                              (("1"
                                                (expand
                                                 "fm_contraction")
                                                (("1"
                                                  (expand "x_sum")
                                                  (("1"
                                                    (expand "x_eq")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (skosimp)
                              (("3"
                                (inst - "x!1")
                                (("3"
                                  (expand "measurable_set?")
                                  (("3" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skosimp)
                        (("2"
                          (lemma "x_section_measurable"
                           ("S1" "S1" "S2" "S2" "x" "x!1" "Z"
                            "intersection(cross_product(X!1, Y!1), E!1)"))
                          (("2" (assert)
                            (("2" (expand "measurable_set?")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2 -4 -2)
                      (("2" (skosimp)
                        (("2" (expand "F")
                          (("2"
                            (lemma "x_section_integrable"
                             ("mu" "MU(i!1)" "nu"
                              "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                              "M"
                              "intersection(cross_product(X!1, Y!1), E!1)"))
                            (("1" (propax) nil nil)
                             ("2" (expand "measurable_set?")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide-all-but 1)
                    (("2" (skosimp)
                      (("2"
                        (lemma "sigma_finite_contraction_def"
                         ("E" "E!2" "nu" "mu"))
                        (("1" (expand "to_measure")
                          (("1" (expand "MU") (("1" (propax) nil nil))
                            nil))
                          nil)
                         ("2" (expand "measurable_set?")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "measurable_set?")
                  (("2" (skosimp) (("2" (rewrite "A_of_def2") nil nil))
                    nil))
                  nil))
                nil)
               ("2" (skosimp)
                (("2" (expand "F") (("2" (assert) nil nil)) nil)) nil))
              nil)
             ("2" (skolem + "x!1")
              (("2" (expand "x_section")
                (("2"
                  (lemma "x_section_measurable"
                   ("S1" "S1" "S2" "S2" "Z"
                    "intersection[[T1, T2]](cross_product(X!1, Y!1), E!1)"
                    "x" "x!1"))
                  (("2" (assert)
                    (("2" (expand "measurable_set?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (expand "measurable_set?")
              (("3" (skosimp) (("3" (rewrite "A_of_def2") nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "measurable_set?") (("2" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   ((S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil)
    (contraction const-decl "measure_type" measure_contraction nil)
    (x_eq const-decl "bool" extended_nnreal "extended_nnreal/")
    (x_sum const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (to_measure const-decl "measure_type" generalized_measure_def nil)
    (x_section const-decl "set[T2]" cross_product "topology/")
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T2, S2]" fubini_tonelli_scaf nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T1, S1]" fubini_tonelli_scaf nil)
    (x_section_integrable formula-decl nil product_finite_measure nil)
    (TRUE const-decl "bool" booleans nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (integral const-decl "real" integral nil)
    (fm_times const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_finite_measure nil)
    (NU skolem-const-decl "[nat -> finite_measure[T1, S1]]"
     fubini_tonelli_scaf nil)
    (G skolem-const-decl "[nat -> [T1 -> nnreal]]" fubini_tonelli_scaf
     nil)
    (measure_eq_integral formula-decl nil measure_equality nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (integral_nonneg formula-decl nil integral nil)
    (A_of_def2 formula-decl nil measure_def nil)
    (measure_eq_integrable? formula-decl nil measure_equality nil)
    (F skolem-const-decl "[nat -> [T1 -> nnreal]]" fubini_tonelli_scaf
     nil)
    (MU skolem-const-decl "[nat -> finite_measure[T1, S1]]"
     fubini_tonelli_scaf nil)
    (EE skolem-const-decl "set[[T1, T2]]" fubini_tonelli_scaf nil)
    (x_sum_eq formula-decl nil extended_nnreal "extended_nnreal/")
    (product_measure_approx const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]" product_measure
     nil)
    (m_times const-decl
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_measure nil)
    (double_x_sum_eq formula-decl nil extended_nnreal
     "extended_nnreal/")
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (FALSE const-decl "bool" booleans nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (eta formula-decl nil functions nil)
    (monotone_convergence formula-decl nil integral_convergence nil)
    (bounded? const-decl "bool" real_fun_preds "reals/")
    (ae? const-decl "bool" measure_theory nil)
    (plus const-decl "[T -> nnreal]" real_fun_ops_aux "reals/")
    (integrable_add judgement-tcc nil integral nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (+ const-decl "[T -> real]" real_fun_ops "reals/")
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (integral_add formula-decl nil integral nil)
    (unique_limit formula-decl nil convergence_sequences "analysis/")
    (FF skolem-const-decl "[nat -> [T1 -> real]]" fubini_tonelli_scaf
     nil)
    (x!1 skolem-const-decl "({x | TRUE})" fubini_tonelli_scaf nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (prod_measurable application-judgement "measurable_function[T, S]"
     fubini_tonelli_scaf nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (* const-decl "[T -> real]" real_fun_ops "reals/")
    (phi const-decl "nat" measure_space nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (contraction_integrable formula-decl nil measure_contraction nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (f!1 skolem-const-decl "integrable[T1, S1, mu]" fubini_tonelli_scaf
     nil)
    (HH skolem-const-decl "[nat -> [T1 -> real]]" fubini_tonelli_scaf
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (fullset const-decl "set" sets nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sigma_nnreal application-judgement "nnreal" sigma_nat "reals/")
    (sigma_0_neg formula-decl nil sigma_nat "reals/")
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (T_low type-eq-decl nil sigma "reals/")
    (T_high type-eq-decl nil sigma "reals/")
    (sigma def-decl "real" sigma "reals/")
    (x_sigma const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (GG skolem-const-decl "[nat -> [T1 -> real]]" fubini_tonelli_scaf
     nil)
    (x_limit_to_sum formula-decl nil extended_nnreal
     "extended_nnreal/")
    (negligible_set? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (union const-decl "set" sets nil)
    (negligible_union application-judgement "negligible"
     fubini_tonelli_scaf nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (converges_upto? const-decl "bool" convergence_aux "metric_space/")
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (integral_ae_eq formula-decl nil integral nil)
    (indefinite_integrable formula-decl nil integral nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sigma_split formula-decl nil sigma "reals/")
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_props
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable
     "sigma_set/")
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (contraction_integral formula-decl nil measure_contraction nil)
    (restrict const-decl "R" restrict nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (ae_nonneg? const-decl "bool" measure_theory nil)
    (prod_measurable judgement-tcc nil measure_space nil)
    (integrable_abs application-judgement "integrable"
     fubini_tonelli_scaf nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops "reals/")
    (one_times formula-decl nil extra_tegies nil)
    (x_section_measurable formula-decl nil product_sigma_def nil)
    (abs_0 formula-decl nil abs_lems "reals/")
    (integral_ae_abs formula-decl nil integral nil)
    (integrable_plus application-judgement "integrable"
     fubini_tonelli_scaf nil)
    (x_limit const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (bounded_below? const-decl "bool" real_fun_preds "reals/")
    (bounded_above? const-decl "bool" real_fun_preds "reals/")
    (integral_ae_le formula-decl nil integral nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (l!1 skolem-const-decl "real" fubini_tonelli_scaf nil)
    (n!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (HH skolem-const-decl "[nat -> real]" fubini_tonelli_scaf nil)
    (increasing? const-decl "bool" real_fun_preds "reals/")
    (ae_increasing? const-decl "bool" measure_theory nil)
    (extensionality_postulate formula-decl nil functions nil)
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (n!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (SS skolem-const-decl "[nat -> real]" fubini_tonelli_scaf nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (FF skolem-const-decl "[nat -> [T1 -> real]]" fubini_tonelli_scaf
     nil)
    (GG skolem-const-decl "[nat -> [T1 -> real]]" fubini_tonelli_scaf
     nil)
    (sigma_zero formula-decl nil sigma "reals/")
    (convergent_const formula-decl nil convergence_ops "analysis/")
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (limit_const formula-decl nil convergence_ops "analysis/")
    (const_fun const-decl "[T -> real]" real_fun_ops "reals/")
    (g!1 skolem-const-decl "integrable[T1, S1, mu]" fubini_tonelli_scaf
     nil)
    (x!1 skolem-const-decl "({x | TRUE})" fubini_tonelli_scaf nil)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (limit_lemma formula-decl nil convergence_sequences "analysis/")
    (limit const-decl "real" convergence_sequences "analysis/")
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (m_monotone formula-decl nil measure_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas_aux nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset? const-decl "bool" sets nil)
    (x_le const-decl "bool" extended_nnreal "extended_nnreal/")
    (sfm_integral formula-decl nil sigma_finite_measure_props nil)
    (nn_integrable? const-decl "bool" nn_integral nil)
    (nn_integrable nonempty-type-eq-decl nil nn_integral nil)
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (X!1 skolem-const-decl "(S1)" fubini_tonelli_scaf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (limit_def formula-decl nil convergence_sequences "analysis/")
    (convergent? const-decl "bool" convergence_sequences "analysis/")
    (metric_converges_to const-decl "bool" metric_space_def
     "metric_space/")
    (member const-decl "bool" sets nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (ball const-decl "set[T]" metric_space_def "metric_space/")
    (ball_is_metric_open application-judgement
     "metric_open[real, (LAMBDA (x, y: real): abs(x - y))]"
     convergence_aux "metric_space/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (convergence const-decl "bool" convergence_sequences "analysis/")
    (metric_convergence_def formula-decl nil metric_space
     "metric_space/")
    (nn_integrable_is_nn_integrable formula-decl nil integral nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (x_section_measurable formula-decl nil product_finite_measure nil)
    (sfm_integrable formula-decl nil sigma_finite_measure_props nil)
    (nn_measurable nonempty-type-eq-decl nil measure_space nil)
    (j!2 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (nn_measurable? const-decl "bool" measure_space nil)
    (series const-decl "sequence[real]" series "series/")
    (convergent? const-decl "bool" topological_convergence "topology/")
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     "metric_space/")
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sequence type-eq-decl nil sequences nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (metric_space_is_hausdorff? name-judgement "(hausdorff?)"
     convergence_aux "metric_space/")
    (metric_space_is_hausdorff name-judgement "hausdorff[real]"
     convergence_aux "metric_space/")
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology "metric_space/")
    (real_minus_real_is_real application-judgement "real" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (sigma_finite_contraction_def formula-decl nil measure_contraction
     nil)
    (x_sum const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (integrable? const-decl "bool" integral nil)
    (mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nnreal type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (O const-decl "T3" function_props nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (fm_contraction const-decl "finite_measure" measure_contraction
     nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil)
    (disjoint_indexed_measurable? const-decl "bool"
     generalized_measure_def nil)
    (disjoint_indexed_measurable nonempty-type-eq-decl nil
     generalized_measure_def nil)
    (A_of const-decl "disjoint_indexed_measurable" measure_def nil)
    (x_section const-decl "[T1 -> set[T2]]" cross_product "topology/")
    (intersection const-decl "set" sets nil)
    (measurable_intersection judgement-tcc nil measure_space_def nil)
    (set type-eq-decl nil sets nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (cross_product const-decl "set[[T1, T2]]" cross_product
     "topology/")
    (sigma_times const-decl "sigma_algebra[[T1, T2]]" product_sigma_def
     nil))
   shostak))
 (product_sfm_contraction_TCC1 0
  (product_sfm_contraction_TCC1-1 nil 3461294021
   ("" (skosimp)
    (("" (expand "measurable_set?")
      (("" (rewrite "cross_product_is_sigma_times") nil nil)) nil))
    nil)
   ((measurable_set? const-decl "bool" measure_space_def nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil)
    (mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (A_of const-decl "disjoint_indexed_measurable" measure_def nil)
    (disjoint_indexed_measurable nonempty-type-eq-decl nil
     generalized_measure_def nil)
    (disjoint_indexed_measurable? const-decl "bool"
     generalized_measure_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil))
   nil))
 (product_sfm_contraction 0
  (product_sfm_contraction-1 nil 3461294075
   ("" (skosimp)
    (("" (expand "product_measure_approx")
      (("" (expand "contraction")
        (("" (expand "m_times")
          ((""
            (lemma "x_sum_eq"
             ("S" "LAMBDA i:
                   x_sum(LAMBDA j:
                           to_measure(product_measure_approx(mu, nu)(i, j))
                                     (intersection
                                      (cross_product
                                       (A_of(mu)(i!1), A_of(nu)(j!1)),
                                       E!1)))" "T"
              "LAMBDA i: if i = i!1 then (TRUE,fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!1)),
                    fm_contraction[T2, S2](nu, A_of(nu)(j!1)))
                   (E!1)) else (TRUE,0) endif"))
            (("1" (split -1)
              (("1"
                (name-replace "LHS" "x_sum(LAMBDA i:
                   x_sum(LAMBDA j:
                           to_measure(product_measure_approx(mu, nu)(i, j))
                                     (intersection
                                      (cross_product
                                       (A_of(mu)(i!1), A_of(nu)(j!1)),
                                       E!1))))")
                (("1"
                  (name-replace "DRL1"
                   "fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!1)),
                    fm_contraction[T2, S2](nu, A_of(nu)(j!1)))
                   (E!1)")
                  (("1" (expand "x_eq")
                    (("1" (flatten)
                      (("1" (expand "x_sum")
                        (("1"
                          (case-replace
                           "(FORALL (i_1: nat): IF i_1 = i!1 THEN TRUE ELSE TRUE ENDIF)")
                          (("1" (hide -1)
                            (("1"
                              (case-replace
                               "convergence_sequences.convergent?(series(LAMBDA (i_1: nat):
                               IF i_1 = i!1 THEN DRL1 ELSE 0 ENDIF))")
                              (("1"
                                (assert)
                                (("1"
                                  (lemma
                                   "single_nz_series_limit"
                                   ("a"
                                    "LAMBDA (i_1: nat): IF i_1 = i!1 THEN DRL1 ELSE 0 ENDIF"
                                    "n"
                                    "i!1"))
                                  (("1"
                                    (split -1)
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (skosimp)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma
                                 "single_nz_series_conv"
                                 ("a"
                                  "LAMBDA (i_1: nat): IF i_1 = i!1 THEN DRL1 ELSE 0 ENDIF"
                                  "n"
                                  "i!1"))
                                (("2"
                                  (split)
                                  (("1" (propax) nil nil)
                                   ("2"
                                    (skosimp)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skosimp) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (skosimp)
                  (("2" (expand "product_measure_approx")
                    (("2" (expand "to_measure")
                      (("2" (case-replace "i!2=i!1")
                        (("1" (hide -1)
                          (("1"
                            (lemma "x_sum_eq"
                             ("S" "LAMBDA j:
                   (TRUE,
                    fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!1)),
                             fm_contraction[T2, S2](nu, A_of(nu)(j)))
                            (intersection(cross_product
                                          (A_of(mu)(i!1), A_of(nu)(j!1)),
                                          E!1)))" "T"
                              "LAMBDA j: if j=j!1 then (TRUE,
            fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!1)),
                     fm_contraction[T2, S2](nu, A_of(nu)(j!1)))
                    (E!1)) else (TRUE,0) endif"))
                            (("1" (split -1)
                              (("1"
                                (name-replace
                                 "LHS"
                                 "x_sum(LAMBDA j:
                   (TRUE,
                    fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!1)),
                             fm_contraction[T2, S2](nu, A_of(nu)(j)))
                            (intersection(cross_product
                                          (A_of(mu)(i!1), A_of(nu)(j!1)),
                                          E!1))))")
                                (("1"
                                  (name-replace
                                   "DRL1"
                                   "fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!1)),
                     fm_contraction[T2, S2](nu, A_of(nu)(j!1)))
                    (E!1)")
                                  (("1"
                                    (expand "x_eq")
                                    (("1"
                                      (expand "x_sum")
                                      (("1"
                                        (case-replace
                                         "FORALL i: IF i = j!1 THEN TRUE ELSE TRUE ENDIF")
                                        (("1"
                                          (lemma
                                           "single_nz_series_conv"
                                           ("a"
                                            "LAMBDA i: IF i = j!1 THEN DRL1 ELSE 0 ENDIF"
                                            "n"
                                            "j!1"))
                                          (("1"
                                            (lemma
                                             "single_nz_series_limit"
                                             ("a"
                                              "LAMBDA i: IF i = j!1 THEN DRL1 ELSE 0 ENDIF"
                                              "n"
                                              "j!1"))
                                            (("1"
                                              (case-replace
                                               "FORALL (m:nat):
         j!1 /= m => (LAMBDA i: IF i = j!1 THEN DRL1 ELSE 0 ENDIF)(m) = 0")
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (skosimp) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide 2)
                                (("2"
                                  (skolem + "j!2")
                                  (("2"
                                    (expand "x_eq")
                                    (("2"
                                      (lift-if)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "fm_times")
                                          (("2"
                                            (typepred "A_of(nu)")
                                            (("2"
                                              (expand
                                               "disjoint_indexed_measurable?")
                                              (("2"
                                                (expand "disjoint?")
                                                (("2"
                                                  (prop)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (lemma
                                                         "x_section_integrable"
                                                         ("mu"
                                                          "fm_contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                          "nu"
                                                          "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                                                          "M"
                                                          "E!1"))
                                                        (("1"
                                                          (case
                                                           "forall (E:(S1)): x_eq(to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))(E),contraction[T1, S1](mu, A_of(mu)(i!1))(E))")
                                                          (("1"
                                                            (lemma
                                                             "x_section_integrable"
                                                             ("mu"
                                                              "fm_contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                              "nu"
                                                              "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                                                              "M"
                                                              "intersection[[T1,T2]](cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1)"))
                                                            (("1"
                                                              (lemma
                                                               "measure_eq_integrable?[T1,S1]"
                                                               ("mu"
                                                                "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                "nu"
                                                                "contraction[T1, S1](mu, A_of(mu)(i!1))"))
                                                              (("1"
                                                                (lemma
                                                                 "measure_eq_integral[T1,S1]"
                                                                 ("mu"
                                                                  "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                  "nu"
                                                                  "contraction[T1, S1](mu, A_of(mu)(i!1))"))
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (inst-cp
                                                                     -
                                                                     "fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o x_section(E!1)")
                                                                    (("1"
                                                                      (replace
                                                                       -6)
                                                                      (("1"
                                                                        (replace
                                                                         -2)
                                                                        (("1"
                                                                          (hide
                                                                           -2)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
            x_section(intersection(cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1))")
                                                                            (("1"
                                                                              (replace
                                                                               -3)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o x_section(E!1)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
            x_section(intersection(cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1))")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -3
                                                                                           -5
                                                                                           -6
                                                                                           -4)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "contraction_integral[T1,S1]"
                                                                                             1)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "contraction_integral[T1,S1]"
                                                                                               1)
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "(((reals@real_fun_ops[T1].*)
                (phi[T1, S1](A_of(mu)(i!1)),
                 fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                  x_section(intersection(cross_product
                                         (A_of(mu)(i!1), A_of(nu)(j!1)),
                                         E!1)))))=(((reals@real_fun_ops[T1].*)
                 (phi[T1, S1](A_of(mu)(i!1)),
                  fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                   x_section(E!1))))")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (apply-extensionality
                                                                                                     :hide?
                                                                                                     t)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "*")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "o")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "phi")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cross_product")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "fm_contraction")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "intersection")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "x_section")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "x_section")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (case-replace
                                                                                                                           "A_of(mu)(i!1)(x!1)")
                                                                                                                          (("1"
                                                                                                                            (case-replace
                                                                                                                             "{x_1: T2 |
             A_of(nu)(j!1)(x_1) AND
              A_of(nu)(j!1)(x_1) AND E!1(x!1, x_1)}={x: T2 | A_of(nu)(j!1)(x) AND E!1(x!1, x)}")
                                                                                                                            (("1"
                                                                                                                              (apply-extensionality
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (case-replace
                                                                                                                                 "A_of(nu)(j!1)(x!2)")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "measurable_set?")
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (skosimp)
                                                              (("2"
                                                                (expand
                                                                 "contraction")
                                                                (("2"
                                                                  (expand
                                                                   "to_measure")
                                                                  (("2"
                                                                    (expand
                                                                     "fm_contraction")
                                                                    (("2"
                                                                      (expand
                                                                       "x_eq")
                                                                      (("2"
                                                                        (lemma
                                                                         "A_of_def2"
                                                                         ("mu"
                                                                          "mu"
                                                                          "n"
                                                                          "i!1"))
                                                                        (("2"
                                                                          (lemma
                                                                           "m_monotone"
                                                                           ("a"
                                                                            "intersection(A_of(mu)(i!1), E!2)"
                                                                            "b"
                                                                            "A_of(mu)(i!1)"))
                                                                          (("1"
                                                                            (expand
                                                                             "x_le")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "intersection")
                                                                                (("1"
                                                                                  (expand
                                                                                   "subset?")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "measurable_set?")
                                                                            (("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (expand
                                                                             "measurable_set?")
                                                                            (("3"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (expand
                                                             "measurable_set?")
                                                            (("3"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (expand
                                                             "measurable_set?")
                                                            (("4"
                                                              (skosimp)
                                                              (("4"
                                                                (rewrite
                                                                 "A_of_def2")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "measurable_set?")
                                                          (("2"
                                                            (rewrite
                                                             "A_of_def2")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (inst
                                                     -
                                                     "j!2"
                                                     "j!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case-replace
                                                         "(fm_contraction[T2, S2](nu, A_of(nu)(j!2)) o
            x_section(intersection(cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1)))=lambda x: 0")
                                                        (("1"
                                                          (rewrite
                                                           "integral_zero[T1, S1, to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))]")
                                                          (("1"
                                                            (expand
                                                             "measurable_set?")
                                                            (("1"
                                                              (rewrite
                                                               "A_of_def2")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply-extensionality
                                                           :hide?
                                                           t)
                                                          (("2"
                                                            (expand
                                                             "o")
                                                            (("2"
                                                              (expand
                                                               "fm_contraction")
                                                              (("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1))
                                                                (("2"
                                                                  (expand
                                                                   "cross_product")
                                                                  (("2"
                                                                    (expand
                                                                     "intersection")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (expand
                                                                         "x_section")
                                                                        (("2"
                                                                          (expand
                                                                           "x_section")
                                                                          (("2"
                                                                            (expand
                                                                             "disjoint?")
                                                                            (("2"
                                                                              (expand
                                                                               "intersection")
                                                                              (("2"
                                                                                (expand
                                                                                 "empty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "{x_1: T2 |
            A_of(nu)(j!2)(x_1) AND
             (A_of(mu)(i!1)(x!1) AND A_of(nu)(j!1)(x_1)) AND
              E!1(x!1, x_1)}=emptyset")
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "nu")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "sigma_finite_measure?")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "measure?")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "measure_empty?")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (apply-extensionality
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "emptyset")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!2")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "measurable_set?")
                              (("2"
                                (skosimp)
                                (("2" (rewrite "A_of_def2") nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (typepred "A_of(mu)")
                            (("2"
                              (expand "disjoint_indexed_measurable?")
                              (("2"
                                (expand "disjoint?")
                                (("2"
                                  (inst - "i!2" "i!1")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (expand "disjoint?")
                                      (("2"
                                        (case
                                         "forall j: fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i!2)),
                             fm_contraction[T2, S2](nu, A_of(nu)(j)))
                            (intersection(cross_product
                                          (A_of(mu)(i!1), A_of(nu)(j!1)),
                                          E!1))=0")
                                        (("1"
                                          (expand "x_eq")
                                          (("1"
                                            (expand "x_sum")
                                            (("1"
                                              (rewrite
                                               "extensionality_postulate"
                                               -1)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (hide -1)
                                                  (("1"
                                                    (rewrite
                                                     "zero_series_conv")
                                                    (("1"
                                                      (rewrite
                                                       "zero_series_limit")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 3)
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (expand "fm_times")
                                              (("2"
                                                (lemma
                                                 "x_section_integrable"
                                                 ("mu"
                                                  "fm_contraction[T1, S1](mu, A_of(mu)(i!2))"
                                                  "nu"
                                                  "fm_contraction[T2, S2](nu, A_of(nu)(j!2))"
                                                  "M"
                                                  "intersection(cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1)"))
                                                (("2"
                                                  (case
                                                   "forall (E:(S1)): x_eq(to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!2)))(E),contraction(mu,A_of(mu)(i!2))(E))")
                                                  (("1"
                                                    (lemma
                                                     "measure_eq_integrable?[T1,S1]"
                                                     ("mu"
                                                      "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!2)))"
                                                      "nu"
                                                      "contraction(mu, A_of(mu)(i!2))"
                                                      "f"
                                                      "fm_contraction[T2, S2](nu, A_of(nu)(j!2)) o
            x_section(intersection(cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1))"))
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "measure_eq_integral[T1,S1]"
                                                           ("mu"
                                                            "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!2)))"
                                                            "nu"
                                                            "contraction(mu, A_of(mu)(i!2))"
                                                            "f"
                                                            "fm_contraction[T2, S2](nu, A_of(nu)(j!2)) o
            x_section(intersection(cross_product(A_of(mu)(i!1),
                                                 A_of(nu)(j!1)),
                                   E!1))"))
                                                          (("1"
                                                            (replace
                                                             -2)
                                                            (("1"
                                                              (replace
                                                               -3)
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (hide
                                                                   -1
                                                                   -3
                                                                   -4)
                                                                  (("1"
                                                                    (rewrite
                                                                     "contraction_integral[T1,S1]"
                                                                     +)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (case-replace
                                                                         "(((reals@real_fun_ops[T1].*)
                (phi[T1, S1](A_of(mu)(i!2)),
                 fm_contraction[T2, S2](nu, A_of(nu)(j!2)) o
                  x_section(intersection(cross_product
                                         (A_of(mu)(i!1), A_of(nu)(j!1)),
                                         E!1)))))=lambda x: 0")
                                                                        (("1"
                                                                          (rewrite
                                                                           "integral_zero")
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (apply-extensionality
                                                                           :hide?
                                                                           t)
                                                                          (("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "o")
                                                                              (("2"
                                                                                (expand
                                                                                 "empty?")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (name-replace
                                                                                     "A1"
                                                                                     "A_of(mu)(i!1)")
                                                                                    (("2"
                                                                                      (name-replace
                                                                                       "A2"
                                                                                       "A_of(mu)(i!2)")
                                                                                      (("2"
                                                                                        (name-replace
                                                                                         "B1"
                                                                                         "A_of(nu)(j!1)")
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "B2"
                                                                                           "A_of(nu)(j!2)")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "*")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "cross_product")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "x_section")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "x_section")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "phi")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (case-replace
                                                                                                             "A1(x!1)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "fm_contraction")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "intersection")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "nu")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "sigma_finite_measure?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "measure?")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "measure_empty?")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "emptyset")
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "measurable_set?")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (expand
                                                         "to_measure")
                                                        (("2"
                                                          (expand
                                                           "fm_contraction")
                                                          (("2"
                                                            (expand
                                                             "contraction")
                                                            (("2"
                                                              (expand
                                                               "x_eq")
                                                              (("2"
                                                                (lemma
                                                                 "A_of_def2"
                                                                 ("mu"
                                                                  "mu"
                                                                  "n"
                                                                  "i!2"))
                                                                (("2"
                                                                  (lemma
                                                                   "m_monotone[T1,S1,mu]"
                                                                   ("a"
                                                                    "intersection(A_of(mu)(i!2), E!2)"
                                                                    "b"
                                                                    "A_of(mu)(i!2)"))
                                                                  (("1"
                                                                    (expand
                                                                     "x_le")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "intersection")
                                                                        (("1"
                                                                          (expand
                                                                           "subset?")
                                                                          (("1"
                                                                            (expand
                                                                             "member")
                                                                            (("1"
                                                                              (skosimp)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("3"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (expand
                                                     "measurable_set?")
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("4"
                                                    (expand
                                                     "measurable_set?")
                                                    (("4"
                                                      (skosimp)
                                                      (("4"
                                                        (rewrite
                                                         "A_of_def2")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (expand "measurable_set?")
                                          (("3"
                                            (skosimp)
                                            (("3"
                                              (rewrite "A_of_def2")
                                              nil
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (expand "measurable_set?")
                                          (("4"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2"
                (lemma "cross_product_is_sigma_times"
                 ("X" "A_of[T1, S1](mu)(i!1)" "Y"
                  "A_of[T2, S2](nu)(j!1)"))
                (("2"
                  (lemma "measurable_intersection"
                   ("a" "cross_product(A_of[T1, S1](mu)(i!1),
                                A_of[T2, S2](nu)(j!1))" "b" "E!1"))
                  (("1" (expand "measurable_set?")
                    (("1" (propax) nil nil)) nil)
                   ("2" (expand "measurable_set?")
                    (("2" (propax) nil nil)) nil)
                   ("3" (expand "measurable_set?")
                    (("3" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((product_measure_approx const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]" product_measure
     nil)
    (m_times const-decl
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_measure nil)
    (measurable_intersection judgement-tcc nil measure_space_def nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil)
    (series const-decl "sequence[real]" series "series/")
    (convergent? const-decl "bool" convergence_sequences "analysis/")
    (sequence type-eq-decl nil sequences nil)
    (single_nz_series_limit formula-decl nil series_aux "series/")
    (single_nz_series_conv formula-decl nil series_aux "series/")
    (x_eq const-decl "bool" extended_nnreal "extended_nnreal/")
    (x_eq const-decl "bool" extended_nnreal "extended_nnreal/")
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (extensionality_postulate formula-decl nil functions nil)
    (zero_series_limit formula-decl nil series "series/")
    (zero_series_conv formula-decl nil series "series/")
    (/= const-decl "boolean" notequal nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (measure_eq_integrable? formula-decl nil measure_equality nil)
    (x_section const-decl "set[T2]" cross_product "topology/")
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (member const-decl "bool" sets nil)
    (* const-decl "[T -> real]" real_fun_ops "reals/")
    (phi const-decl "nat" measure_space nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (contraction_integral formula-decl nil measure_contraction nil)
    (integrable? const-decl "bool" integral nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (O const-decl "T3" function_props nil)
    (x_section const-decl "[T1 -> set[T2]]" cross_product "topology/")
    (measure_eq_integral formula-decl nil measure_equality nil)
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (m_monotone formula-decl nil measure_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas_aux nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset? const-decl "bool" sets nil)
    (x_le const-decl "bool" extended_nnreal "extended_nnreal/")
    (A_of_def2 formula-decl nil measure_def nil)
    (x_section_integrable formula-decl nil product_finite_measure nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_props
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable
     "sigma_set/")
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (emptyset const-decl "set" sets nil)
    (empty? const-decl "bool" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (integral_zero formula-decl nil integral nil)
    (disjoint? const-decl "bool" indexed_sets_aux "sets_aux/")
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (x_sum_eq formula-decl nil extended_nnreal "extended_nnreal/")
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (x_sum const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_times const-decl "sigma_algebra[[T1, T2]]" product_sigma_def
     nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (finite_measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (to_measure const-decl "measure_type" generalized_measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil)
    (set type-eq-decl nil sets nil)
    (intersection const-decl "set" sets nil)
    (cross_product const-decl "set[[T1, T2]]" cross_product
     "topology/")
    (disjoint_indexed_measurable? const-decl "bool"
     generalized_measure_def nil)
    (disjoint_indexed_measurable nonempty-type-eq-decl nil
     generalized_measure_def nil)
    (A_of const-decl "disjoint_indexed_measurable" measure_def nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TRUE const-decl "bool" booleans nil)
    (fm_times const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_finite_measure nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (fm_contraction const-decl "finite_measure" measure_contraction
     nil)
    (contraction const-decl "measure_type" measure_contraction nil))
   shostak))
 (product_measure_contraction_n_TCC1 0
  (product_measure_contraction_n_TCC1-1 nil 3473962315
   ("" (subtype-tcc) nil nil)
   ((A_of const-decl "disjoint_indexed_measurable" measure_def nil)
    (P_of const-decl "(S)" measure_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (sigma_algebra_IUnion_rew application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (product_measure_contraction_n_TCC2 0
  (product_measure_contraction_n_TCC2-1 nil 3473962315
   ("" (subtype-tcc) nil nil)
   ((A_of const-decl "disjoint_indexed_measurable" measure_def nil)
    (P_of const-decl "(S)" measure_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (sigma_algebra_IUnion_rew application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil))
   nil))
 (product_measure_contraction_n_TCC3 0
  (product_measure_contraction_n_TCC3-1 nil 3473962315
   ("" (expand "measurable_set?")
    (("" (skosimp) (("" (rewrite "P_of_def2") nil nil)) nil)) nil)
   ((S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (P_of_def2 formula-decl nil measure_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil))
   nil))
 (product_measure_contraction_n_TCC4 0
  (product_measure_contraction_n_TCC4-1 nil 3473962315
   ("" (skosimp)
    (("" (expand "measurable_set?")
      (("" (rewrite "P_of_def2") nil nil)) nil))
    nil)
   ((measurable_set? const-decl "bool" measure_space_def nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (P_of_def2 formula-decl nil measure_def nil))
   nil))
 (product_measure_contraction_n 0
  (product_measure_contraction_n-1 nil 3473962315
   ("" (skosimp)
    ((""
      (lemma "product_measure_contraction"
       ("X" "P_of(mu)(n!1)" "Y" "P_of(nu)(n!1)" "E" "E!1"))
      ((""
        (name-replace "MU" "m_times(contraction(mu, P_of(mu)(n!1)),
                     contraction(nu, P_of(nu)(n!1)))
                    (E!1)")
        (("" (expand "m_times")
          (("" (expand "product_measure_approx")
            (("" (expand "contraction")
              (("" (expand "to_measure")
                ((""
                  (case "x_eq(x_sum(LAMBDA i:
                          x_sum(LAMBDA j:
                                  (TRUE,
                                   fm_times(fm_contraction[T1, S1]
                                            (mu, A_of(mu)(i)),
                                            fm_contraction[T2, S2]
                                            (nu, A_of(nu)(j)))
                                           (intersection
                                            (cross_product
                                             (P_of(mu)(n!1), P_of(nu)(n!1)),
                                             E!1))))),x_sum(LAMBDA i: if i<=n!1 then
                          x_sum(LAMBDA j: if j<=n!1 then
                                  (TRUE,
                                   fm_times(fm_contraction[T1, S1]
                                            (mu, A_of(mu)(i)),
                                            fm_contraction[T2, S2]
                                            (nu, A_of(nu)(j)))
                                           (E!1)) else (TRUE,0) endif) else (TRUE,0) endif))")
                  (("1"
                    (name-replace "DRL1" "x_sum(LAMBDA i:
                       x_sum(LAMBDA j:
                               (TRUE,
                                fm_times(fm_contraction[T1, S1]
                                         (mu, A_of(mu)(i)),
                                         fm_contraction[T2, S2]
                                         (nu, A_of(nu)(j)))
                                        (intersection
                                         (cross_product
                                          (P_of(mu)(n!1), P_of(nu)(n!1)),
                                          E!1)))))")
                    (("1"
                      (case "x_eq(x_sum(LAMBDA i:
                            IF i <= n!1
                              THEN x_sum(LAMBDA j:
                                           IF j <= n!1
                                             THEN (TRUE,
                                                   fm_times
                                                   (fm_contraction[T1, S1]
                                                    (mu, A_of(mu)(i)),
                                                    fm_contraction[T2, S2]
                                                    (nu, A_of(nu)(j)))
                                                   (E!1))
                                           ELSE (TRUE, 0)
                                           ENDIF)
                            ELSE (TRUE, 0)
                            ENDIF),(TRUE,
                     fm_times(fm_contraction(mu, P_of(mu)(n!1)),
                              fm_contraction(nu, P_of(nu)(n!1)))
                             (E!1)))")
                      (("1" (expand "x_eq")
                        (("1" (flatten) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (hide-all-but 1)
                        (("2"
                          (case-replace "x_sum(LAMBDA i:
                         IF i <= n!1
                           THEN x_sum(LAMBDA j:
                                        IF j <= n!1
                                          THEN (TRUE,
                                                fm_times
                                                (fm_contraction[T1, S1]
                                                 (mu, A_of(mu)(i)),
                                                 fm_contraction[T2, S2]
                                                 (nu, A_of(nu)(j)))
                                                (E!1))
                                        ELSE (TRUE, 0)
                                        ENDIF)
                         ELSE (TRUE, 0)
                         ENDIF)=(TRUE,sigma(0,n!1,lambda i: sigma(0,n!1,lambda j: fm_times
                                                (fm_contraction[T1, S1]
                                                 (mu, A_of(mu)(i)),
                                                 fm_contraction[T2, S2]
                                                 (nu, A_of(nu)(j)))
                                                (E!1))))")
                          (("1" (hide -1)
                            (("1" (expand "x_eq")
                              (("1"
                                (expand "fm_times")
                                (("1"
                                  (case
                                   "integral[T1, S1, to_measure(fm_contraction(mu, P_of(mu)(n!1)))](fm_contraction(nu, P_of(nu)(n!1)) o x_section(E!1)) = sigma(0,n!1,lambda i: integral[T1, S1, to_measure(fm_contraction(mu, A_of(mu)(i)))](fm_contraction(nu, P_of(nu)(n!1)) o x_section(E!1)))")
                                  (("1"
                                    (replace -1)
                                    (("1"
                                      (hide -1)
                                      (("1"
                                        (lemma
                                         "sigma_eq"
                                         ("low"
                                          "0"
                                          "high"
                                          "n!1"
                                          "F"
                                          "LAMBDA i:
                         sigma(0, n!1,
                               LAMBDA j:
                                 integral
                                     [T1, S1,
                                      to_measure(fm_contraction[T1, S1]
                                                 (mu, A_of(mu)(i)))]
                                     (fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                       x_section(E!1)))"
                                          "G"
                                          "LAMBDA i:
                          integral[T1, S1, to_measure(fm_contraction(mu, A_of(mu)(i)))]
                              (fm_contraction(nu, P_of(nu)(n!1)) o x_section(E!1))"))
                                        (("1"
                                          (assert)
                                          (("1"
                                            (hide 2)
                                            (("1"
                                              (skolem + "i!1")
                                              (("1"
                                                (case
                                                 "forall (k:nat): k<= n!1 => sigma(0, k,
                             LAMBDA j:
                               integral
                                   [T1, S1,
                                    to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))]
                                   (fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                     x_section(E!1)))
                        =
                        integral[T1, S1, to_measure(fm_contraction(mu, A_of(mu)(i!1)))]
                            (fm_contraction(nu, P_of(nu)(k)) o x_section(E!1))")
                                                (("1"
                                                  (inst - "n!1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (induct "k")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (case-replace
                                                           "P_of(nu)(0)=A_of(nu)(0)")
                                                          (("1"
                                                            (hide 2)
                                                            (("1"
                                                              (expand
                                                               "P_of")
                                                              (("1"
                                                                (expand
                                                                 "IUnion")
                                                                (("1"
                                                                  (apply-extensionality
                                                                   :hide?
                                                                   t)
                                                                  (("1"
                                                                    (case-replace
                                                                     "A_of(nu)(0)(x!1)")
                                                                    (("1"
                                                                      (expand
                                                                       "emptyset")
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "0")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (expand
                                                                           "emptyset")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skosimp*)
                                                      (("2"
                                                        (expand
                                                         "sigma"
                                                         1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (case-replace
                                                                 "fm_contraction(nu, P_of(nu)(1 + j!1)) o x_section(E!1)=(fm_contraction[T2, S2](nu, A_of(nu)(1 + j!1)) o x_section(E!1))+(fm_contraction(nu, P_of(nu)(j!1)) o x_section(E!1))")
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (rewrite
                                                                     "integral_add[T1, S1, to_measure(fm_contraction(mu, A_of(mu)(i!1)))]")
                                                                    (("1"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("1"
                                                                        (rewrite
                                                                         "A_of_def2")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (apply-extensionality
                                                                     :hide?
                                                                     t)
                                                                    (("1"
                                                                      (expand
                                                                       "fm_contraction")
                                                                      (("1"
                                                                        (expand
                                                                         "o")
                                                                        (("1"
                                                                          (expand
                                                                           "+")
                                                                          (("1"
                                                                            (name-replace
                                                                             "AA"
                                                                             "intersection(A_of(nu)(1 + j!1), x_section(E!1)(x!1))")
                                                                            (("1"
                                                                              (name-replace
                                                                               "BB"
                                                                               "intersection(P_of(nu)(j!1), x_section(E!1)(x!1))")
                                                                              (("1"
                                                                                (case-replace
                                                                                 "intersection(P_of(nu)(1 + j!1), x_section(E!1)(x!1))=union(AA,BB)")
                                                                                (("1"
                                                                                  (case
                                                                                   "disjoint?(AA,BB)")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "m_disjoint_union"
                                                                                     ("a"
                                                                                      "AA"
                                                                                      "b"
                                                                                      "BB"))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -3
                                                                                         -2
                                                                                         -4)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "m_monotone"
                                                                                           ("a"
                                                                                            "AA"
                                                                                            "b"
                                                                                            "A_of(nu)(1+j!1)"))
                                                                                          (("1"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "m_monotone"
                                                                                               ("a"
                                                                                                "BB"
                                                                                                "b"
                                                                                                "P_of(nu)(j!1)"))
                                                                                              (("1"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "x_le")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "P_of_def2")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "A_of_def2")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_add")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "x_eq")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "BB")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "intersection")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "subset?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (skosimp)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "AA")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "intersection")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("2"
                                                                                                        (skosimp)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "measurable_set?")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "BB")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "measurable_intersection")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "x_section")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "measurable_set?")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "x_section_measurable"
                                                                                               ("S1"
                                                                                                "S1"
                                                                                                "S2"
                                                                                                "S2"
                                                                                                "Z"
                                                                                                "E!1"
                                                                                                "x"
                                                                                                "x!1"))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "measurable_set?")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand
                                                                                       "AA")
                                                                                      (("3"
                                                                                        (rewrite
                                                                                         "measurable_intersection")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "x_section")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "measurable_set?")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "x_section_measurable"
                                                                                               ("S1"
                                                                                                "S1"
                                                                                                "S2"
                                                                                                "S2"
                                                                                                "Z"
                                                                                                "E!1"
                                                                                                "x"
                                                                                                "x!1"))
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "measurable_set?")
                                                                                          (("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-2
                                                                                      1))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "disjoint?")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "AA")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "BB")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "intersection")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "empty?")
                                                                                              (("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "P_of")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "emptyset")
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("2"
                                                                                                                (hide-all-but
                                                                                                                 (-2
                                                                                                                  -1
                                                                                                                  -6
                                                                                                                  -3))
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "A_of(nu)")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "disjoint_indexed_measurable?")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "disjoint?")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "i!2"
                                                                                                                         "1+j!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "disjoint?")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "intersection")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "empty?")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "x!2")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "AA")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "BB")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "union")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "intersection")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (case-replace
                                                                                                 "x_section(E!1)(x!1)(x!2)")
                                                                                                (("1"
                                                                                                  (case-replace
                                                                                                   "A_of(nu)(1 + j!1)(x!2) OR P_of(nu)(j!1)(x!2)")
                                                                                                  (("1"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "P_of")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "1+j!1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "P_of")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "IUnion")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "emptyset")
                                                                                                          (("2"
                                                                                                            (skosimp)
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "i!2")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "P_of")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "IUnion")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "emptyset")
                                                                                                                (("2"
                                                                                                                  (prop)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "<="
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (split)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         +
                                                                                                                         "i!2")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skosimp)
                                                                      (("2"
                                                                        (expand
                                                                         "o")
                                                                        (("2"
                                                                          (expand
                                                                           "+")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide 2)
                                                      (("3"
                                                        (skosimp)
                                                        (("3"
                                                          (rewrite
                                                           "x_section_integrable")
                                                          (("3"
                                                            (expand
                                                             "measurable_set?")
                                                            (("3"
                                                              (rewrite
                                                               "A_of_def2")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (expand
                                                       "measurable_set?")
                                                      (("4"
                                                        (skosimp)
                                                        (("4"
                                                          (rewrite
                                                           "P_of_def2")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (hide 2)
                                                      (("5"
                                                        (skosimp)
                                                        (("5"
                                                          (expand
                                                           "measurable_set?")
                                                          (("5"
                                                            (rewrite
                                                             "A_of_def2")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("6"
                                                      (skosimp)
                                                      (("6"
                                                        (hide 2)
                                                        (("6"
                                                          (skosimp)
                                                          (("6"
                                                            (expand
                                                             "o")
                                                            (("6"
                                                              (expand
                                                               "x_section")
                                                              (("6"
                                                                (lemma
                                                                 "x_section_integrable[T1,T2,S1,S2]"
                                                                 ("nu"
                                                                  "fm_contraction[T2, S2]
                                  (nu, A_of[T2, S2](nu)(j!1))"
                                                                  "mu"
                                                                  "fm_contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                                  "M"
                                                                  "E!1"))
                                                                (("1"
                                                                  (expand
                                                                   "o")
                                                                  (("1"
                                                                    (expand
                                                                     "x_section"
                                                                     -1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (rewrite
                                                                       "A_of_def2")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (expand
                                                                   "measurable_set?")
                                                                  (("3"
                                                                    (rewrite
                                                                     "A_of_def2")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("7"
                                                      (skosimp)
                                                      (("7"
                                                        (skosimp)
                                                        (("7"
                                                          (hide 2)
                                                          (("7"
                                                            (typepred
                                                             "E!1")
                                                            (("7"
                                                              (lemma
                                                               "x_section_measurable[T1,T2]"
                                                               ("S1"
                                                                "S1"
                                                                "S2"
                                                                "S2"
                                                                "Z"
                                                                "E!1"
                                                                "x"
                                                                "x1!1"))
                                                              (("7"
                                                                (expand
                                                                 "member")
                                                                (("7"
                                                                  (expand
                                                                   "x_section"
                                                                   1)
                                                                  (("7"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("8"
                                                      (skosimp)
                                                      (("8"
                                                        (skosimp)
                                                        (("8"
                                                          (expand
                                                           "x_section")
                                                          (("8"
                                                            (expand
                                                             "measurable_set?")
                                                            (("8"
                                                              (lemma
                                                               "A_of_def2[T2,S2]"
                                                               ("mu"
                                                                "nu"))
                                                              (("8"
                                                                (inst
                                                                 -
                                                                 "j!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (rewrite
                                                     "x_section_integrable")
                                                    (("3"
                                                      (expand
                                                       "measurable_set?")
                                                      (("3"
                                                        (rewrite
                                                         "A_of_def2")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (skosimp)
                                                  (("4"
                                                    (expand
                                                     "measurable_set?")
                                                    (("4"
                                                      (rewrite
                                                       "P_of_def2")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (skosimp)
                                                  (("5"
                                                    (expand
                                                     "measurable_set?")
                                                    (("5"
                                                      (rewrite
                                                       "A_of_def2")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("6"
                                                  (skosimp)
                                                  (("6"
                                                    (skosimp)
                                                    (("6"
                                                      (rewrite
                                                       "x_section_integrable")
                                                      (("6"
                                                        (expand
                                                         "measurable_set?")
                                                        (("6"
                                                          (rewrite
                                                           "A_of_def2")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("7"
                                                  (skosimp)
                                                  (("7"
                                                    (skosimp)
                                                    (("7"
                                                      (expand
                                                       "measurable_set?")
                                                      (("7"
                                                        (rewrite
                                                         "A_of_def2")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (rewrite "P_of_def2")
                                            nil
                                            nil))
                                          nil)
                                         ("3"
                                          (skosimp)
                                          (("3"
                                            (rewrite
                                             "x_section_integrable")
                                            (("3"
                                              (expand
                                               "measurable_set?")
                                              (("3"
                                                (rewrite "A_of_def2")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("4"
                                          (skosimp)
                                          (("4"
                                            (expand "x_section")
                                            (("4"
                                              (assert)
                                              (("4"
                                                (lemma
                                                 "x_section_measurable"
                                                 ("S1"
                                                  "S1"
                                                  "S2"
                                                  "S2"
                                                  "Z"
                                                  "E!1"
                                                  "x"
                                                  "x1!1"))
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (name
                                       "FF"
                                       "fm_contraction(nu, P_of(nu)(n!1)) o x_section(E!1)")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (lemma
                                           "x_section_integrable"
                                           ("nu"
                                            "fm_contraction(nu, P_of(nu)(n!1))"
                                            "M"
                                            "E!1"))
                                          (("2"
                                            (lemma
                                             "x_section_measurable"
                                             ("nu"
                                              "fm_contraction(nu, P_of(nu)(n!1))"
                                              "M"
                                              "E!1"))
                                            (("2"
                                              (replace -3)
                                              (("2"
                                                (case
                                                 "forall (n:nat): integral[T1, S1, to_measure(fm_contraction(mu, P_of(mu)(n)))](FF) =
                      sigma(0, n,
                            LAMBDA i:
                              integral[T1, S1, to_measure(fm_contraction(mu, A_of(mu)(i)))]
                                  (FF))")
                                                (("1"
                                                  (inst - "n!1")
                                                  nil
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (induct "n")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "fm_contraction(mu, P_of(mu)(0))")
                                                          (("1"
                                                            (case
                                                             "fm_contraction(mu, P_of(mu)(0))=fm_contraction(mu, A_of(mu)(0))")
                                                            (("1"
                                                              (lemma
                                                               "measure_eq_integral[T1,S1]"
                                                               ("mu"
                                                                "to_measure(fm_contraction(mu, P_of(mu)(0)))"
                                                                "nu"
                                                                "to_measure(fm_contraction(mu, A_of(mu)(0)))"
                                                                "f"
                                                                "FF"))
                                                              (("1"
                                                                (replace
                                                                 -4)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (case-replace
                                                                         "P_of(mu)(0)=A_of(mu)(0)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "x_eq")
                                                                            (("1"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (apply-extensionality
                                                                             :hide?
                                                                             t)
                                                                            (("2"
                                                                              (expand
                                                                               "P_of")
                                                                              (("2"
                                                                                (expand
                                                                                 "IUnion")
                                                                                (("2"
                                                                                  (expand
                                                                                   "emptyset")
                                                                                  (("2"
                                                                                    (case-replace
                                                                                     "A_of(mu)(0)(x!1)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (apply-extensionality
                                                                 :hide?
                                                                 t)
                                                                (("2"
                                                                  (expand
                                                                   "fm_contraction")
                                                                  (("2"
                                                                    (case-replace
                                                                     "P_of(mu)(0)=A_of(mu)(0)")
                                                                    (("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (apply-extensionality
                                                                         :hide?
                                                                         t)
                                                                        (("2"
                                                                          (expand
                                                                           "P_of")
                                                                          (("2"
                                                                            (expand
                                                                             "emptyset")
                                                                            (("2"
                                                                              (expand
                                                                               "IUnion")
                                                                              (("2"
                                                                                (case-replace
                                                                                 "A_of(mu)(0)(x!2)")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (expand
                                                               "measurable_set?")
                                                              (("3"
                                                                (rewrite
                                                                 "A_of_def2")
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (expand
                                                               "measurable_set?")
                                                              (("4"
                                                                (rewrite
                                                                 "P_of_def2")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "measurable_set?")
                                                            (("2"
                                                              (rewrite
                                                               "P_of_def2")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skosimp)
                                                      (("2"
                                                        (expand
                                                         "sigma"
                                                         1)
                                                        (("2"
                                                          (replace
                                                           -1
                                                           1
                                                           rl)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (inst-cp
                                                               -
                                                               "fm_contraction(mu, P_of(mu)(1 + j!1))")
                                                              (("1"
                                                                (inst-cp
                                                                 -
                                                                 "fm_contraction(mu, P_of(mu)(j!1))")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "fm_contraction(mu, A_of(mu)(1+j!1))")
                                                                  (("1"
                                                                    (lemma
                                                                     "measure_eq_integral"
                                                                     ("mu"
                                                                      "to_measure(fm_contraction(mu, P_of(mu)(1 + j!1)))"
                                                                      "nu"
                                                                      "contraction(mu, P_of(mu)(1 + j!1))"
                                                                      "f"
                                                                      "FF"))
                                                                    (("1"
                                                                      (replace
                                                                       -5)
                                                                      (("1"
                                                                        (case-replace
                                                                         "FORALL (E: (S1)):
                               x_eq(to_measure(fm_contraction(mu, P_of(mu)(1 + j!1)))(E),
                                    contraction(mu, P_of(mu)(1 + j!1))(E))")
                                                                        (("1"
                                                                          (lemma
                                                                           "measure_eq_integrable?"
                                                                           ("mu"
                                                                            "to_measure(fm_contraction(mu, P_of(mu)(1 + j!1)))"
                                                                            "nu"
                                                                            "contraction(mu, P_of(mu)(1 + j!1))"
                                                                            "f"
                                                                            "FF"))
                                                                          (("1"
                                                                            (replace
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "contraction_integral"
                                                                                 -3)
                                                                                (("1"
                                                                                  (replace
                                                                                   -3)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1
                                                                                     -2
                                                                                     -3
                                                                                     -7)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "measure_eq_integrable?"
                                                                                       ("mu"
                                                                                        "to_measure(fm_contraction(mu, P_of(mu)(j!1)))"
                                                                                        "nu"
                                                                                        "contraction(mu, P_of(mu)(j!1))"
                                                                                        "f"
                                                                                        "FF"))
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "measure_eq_integral"
                                                                                         ("mu"
                                                                                          "to_measure(fm_contraction(mu, P_of(mu)(j!1)))"
                                                                                          "nu"
                                                                                          "contraction(mu, P_of(mu)(j!1))"
                                                                                          "f"
                                                                                          "FF"))
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "FORALL (E: (S1)):
                                   x_eq(to_measure(fm_contraction(mu, P_of(mu)(j!1)))(E),
                                        contraction(mu, P_of(mu)(j!1))(E))")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "contraction_integral"
                                                                                               -2)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "measure_eq_integrable?"
                                                                                                   ("mu"
                                                                                                    "to_measure(fm_contraction(mu, A_of(mu)(1 + j!1)))"
                                                                                                    "nu"
                                                                                                    "contraction(mu, A_of(mu)(1 + j!1))"
                                                                                                    "f"
                                                                                                    "FF"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "measure_eq_integral"
                                                                                                     ("mu"
                                                                                                      "to_measure(fm_contraction(mu, A_of(mu)(1 + j!1)))"
                                                                                                      "nu"
                                                                                                      "contraction(mu, A_of(mu)(1 + j!1))"
                                                                                                      "f"
                                                                                                      "FF"))
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "sfm_component_eq[T1, S1, mu]"
                                                                                                       ("n"
                                                                                                        "1+j!1"))
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -8)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "contraction_integral"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "contraction_integrable[T1, S1]"
                                                                                                                   ("mu"
                                                                                                                    "mu"
                                                                                                                    "A"
                                                                                                                    "A_of(mu)(1 + j!1)"
                                                                                                                    "f"
                                                                                                                    "FF"))
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "contraction_integrable[T1, S1]"
                                                                                                                     ("mu"
                                                                                                                      "mu"
                                                                                                                      "A"
                                                                                                                      "P_of(mu)(j!1)"
                                                                                                                      "f"
                                                                                                                      "FF"))
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (name-replace
                                                                                                                         "GG"
                                                                                                                         "(((reals@real_fun_ops[T1].*)
                                               (phi[T1, S1](A_of(mu)(1 + j!1)), FF)))")
                                                                                                                        (("1"
                                                                                                                          (name-replace
                                                                                                                           "HH"
                                                                                                                           "(((reals@real_fun_ops[T1].*)(phi[T1, S1](P_of(mu)(j!1)), FF)))")
                                                                                                                          (("1"
                                                                                                                            (case-replace
                                                                                                                             "(((reals@real_fun_ops[T1].*)
                                              (phi[T1, S1](P_of(mu)(1 + j!1)), FF)))=GG+HH")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "integral_add[T1, S1, mu]"
                                                                                                                               1)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (apply-extensionality
                                                                                                                                 :hide?
                                                                                                                                 t)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "+ ")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "GG")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "HH")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "*")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "phi")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("2"
                                                                                                                                              (case-replace
                                                                                                                                               "P_of(mu)(1 + j!1)(x!1)")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "P_of"
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "IUnion")
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "emptyset")
                                                                                                                                                      (("1"
                                                                                                                                                        (prop)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "<="
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (split)
                                                                                                                                                            (("1"
                                                                                                                                                              (case-replace
                                                                                                                                                               "P_of(mu)(j!1)(x!1)")
                                                                                                                                                              (("1"
                                                                                                                                                                (case-replace
                                                                                                                                                                 "A_of(mu)(1 + j!1)(x!1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "A_of(mu)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "disjoint_indexed_measurable?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "disjoint?")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -
                                                                                                                                                                           "i!1"
                                                                                                                                                                           "1+j!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "disjoint?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "intersection")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "empty?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "x!1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (replace
                                                                                                                                                                 1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "P_of")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "IUnion")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (case-replace
                                                                                                                                                                   "P_of(mu)(j!1)(x!1)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "P_of")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "IUnion")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "emptyset")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (prop)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "A_of(mu)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "disjoint_indexed_measurable?")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "disjoint?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "i!2"
                                                                                                                                                                                     "1+j!1")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "disjoint?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "intersection")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "empty?")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "member")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (case-replace
                                                                                                                                                   "A_of(mu)(1 + j!1)(x!1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "P_of")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "IUnion")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "1+j!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (case-replace
                                                                                                                                                     "P_of(mu)(j!1)(x!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       1
                                                                                                                                                       3)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "P_of")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "IUnion")
                                                                                                                                                          (("1"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "i!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "emptyset")
                                                                                                                                                                (("1"
                                                                                                                                                                  (prop)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "measurable_set?")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (expand
                                                                                                     "measurable_set?")
                                                                                                    (("3"
                                                                                                      (rewrite
                                                                                                       "A_of_def2")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "contraction")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "fm_contraction")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "to_measure")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "x_eq")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "m_monotone"
                                                                                                         ("a"
                                                                                                          "intersection(P_of(mu)(j!1), E!2)"
                                                                                                          "b"
                                                                                                          "P_of(mu)(j!1)"))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "P_of_def2")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "intersection")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "subset?")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("1"
                                                                                                                      (skosimp)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "measurable_set?")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "measurable_set?")
                                                                                            (("3"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (expand
                                                                                             "measurable_set?")
                                                                                            (("4"
                                                                                              (skosimp)
                                                                                              (("4"
                                                                                                (rewrite
                                                                                                 "P_of_def2")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "measurable_set?")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (expand
                                                                                         "measurable_set?")
                                                                                        (("3"
                                                                                          (rewrite
                                                                                           "P_of_def2")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (expand
                                                                               "fm_contraction")
                                                                              (("2"
                                                                                (expand
                                                                                 "contraction")
                                                                                (("2"
                                                                                  (expand
                                                                                   "to_measure")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "x_eq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "P_of_def2"
                                                                                       ("mu"
                                                                                        "mu"
                                                                                        "n"
                                                                                        "1+j!1"))
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "m_monotone"
                                                                                         ("a"
                                                                                          "intersection(P_of(mu)(1 + j!1), E!2)"
                                                                                          "b"
                                                                                          "P_of(mu)(1 + j!1)"))
                                                                                        (("1"
                                                                                          (expand
                                                                                           "x_le")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "intersection")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "subset?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           "measurable_intersection")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "measurable_set?")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("4"
                                                                            (skosimp)
                                                                            (("4"
                                                                              (rewrite
                                                                               "P_of_def2")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("3"
                                                                        (rewrite
                                                                         "P_of_def2")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (rewrite
                                                                       "A_of_def2")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (rewrite
                                                                   "P_of_def2")
                                                                  (("2"
                                                                    (expand
                                                                     "measurable_set?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "measurable_set?")
                                                                (("2"
                                                                  (rewrite
                                                                   "P_of_def2")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (skosimp)
                                                      (("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (lemma
                                                           "A_of_def2[T1,S1]"
                                                           ("mu" "mu"))
                                                          (("3"
                                                            (inst
                                                             -
                                                             "i!1")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (hide 2)
                                                      (("4"
                                                        (skosimp)
                                                        (("4"
                                                          (lemma
                                                           "A_of_def2[T1,S1]"
                                                           ("mu" "mu"))
                                                          (("4"
                                                            (inst
                                                             -
                                                             "i!1")
                                                            (("4"
                                                              (inst?
                                                               -3)
                                                              (("4"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (skosimp)
                                                      (("5"
                                                        (expand
                                                         "measurable_set?")
                                                        (("5"
                                                          (lemma
                                                           "P_of_def2[T1,S1]"
                                                           ("mu" "mu"))
                                                          (("5"
                                                            (inst
                                                             -
                                                             "n!3")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("6"
                                                      (skosimp)
                                                      (("6"
                                                        (lemma
                                                         "P_of_def2[T1,S1]"
                                                         ("mu" "mu"))
                                                        (("6"
                                                          (inst
                                                           -
                                                           "n!3")
                                                          (("6"
                                                            (assert)
                                                            (("6"
                                                              (hide 2)
                                                              (("6"
                                                                (inst?
                                                                 -3)
                                                                (("6"
                                                                  (assert)
                                                                  (("6"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (skosimp)
                                                  (("3"
                                                    (inst
                                                     -
                                                     "fm_contraction(mu, A_of(mu)(i!1))")
                                                    (("3"
                                                      (expand
                                                       "measurable_set?")
                                                      (("3"
                                                        (rewrite
                                                         "A_of_def2")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (skosimp)
                                                  (("4"
                                                    (expand
                                                     "measurable_set?")
                                                    (("4"
                                                      (rewrite
                                                       "P_of_def2")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (skosimp)
                                                  (("5"
                                                    (inst
                                                     -
                                                     "fm_contraction(mu, P_of(mu)(n!2))")
                                                    (("5"
                                                      (expand
                                                       "measurable_set?")
                                                      (("5"
                                                        (rewrite
                                                         "P_of_def2")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (skosimp)
                                    (("3"
                                      (rewrite "x_section_integrable")
                                      (("3"
                                        (expand "measurable_set?")
                                        (("3"
                                          (rewrite "A_of_def2")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4"
                                    (expand "measurable_set?")
                                    (("4"
                                      (rewrite "P_of_def2")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2"
                              (name "FF"
                                    "lambda i: lambda j: fm_times(fm_contraction[T1, S1](mu, A_of(mu)(i)),
                                              fm_contraction[T2, S2](nu, A_of(nu)(j)))
                                             (E!1)")
                              (("2"
                                (case
                                 "x_sum(LAMBDA i:
                           IF i <= n!1
                             THEN x_sum(LAMBDA j:
                                          IF j <= n!1
                                            THEN (TRUE,FF(i)(j))ELSE (TRUE, 0)
                                          ENDIF)
                           ELSE (TRUE, 0)
                           ENDIF)
                    =
                    (TRUE,sigma(0, n!1,
                           LAMBDA i:
                             sigma(0, n!1,LAMBDA j: FF(i)(j))))")
                                (("1"
                                  (expand "FF")
                                  (("1" (propax) nil nil))
                                  nil)
                                 ("2"
                                  (hide -1 2)
                                  (("2"
                                    (expand "x_sum" 1 1)
                                    (("2"
                                      (lift-if 1)
                                      (("2"
                                        (simplify 1)
                                        (("2"
                                          (case-replace
                                           "FORALL (i_1: nat):
                      IF i_1 <= n!1
                        THEN x_sum(LAMBDA j:
                                     IF j <= n!1 THEN (TRUE, FF(i_1)(j))
                                     ELSE (TRUE, 0)
                                     ENDIF)`1
                      ELSE TRUE
                      ENDIF")
                                          (("1"
                                            (lemma
                                             "zero_tail_series_conv"
                                             ("a"
                                              "LAMBDA (i_1: nat):
                                           IF i_1 <= n!1
                                             THEN x_sum
                                                  (LAMBDA
                                                   j:
                                                   IF j <= n!1
                                                   THEN (TRUE, FF(i_1)(j))
                                                   ELSE (TRUE, 0)
                                                   ENDIF)`2
                                           ELSE 0
                                           ENDIF"
                                              "n"
                                              "n!1"))
                                            (("1"
                                              (lemma
                                               "zero_tail_series_limit"
                                               ("a"
                                                "LAMBDA (i_1: nat):
                                           IF i_1 <= n!1
                                             THEN x_sum
                                                  (LAMBDA
                                                   j:
                                                   IF j <= n!1
                                                   THEN (TRUE, FF(i_1)(j))
                                                   ELSE (TRUE, 0)
                                                   ENDIF)`2
                                           ELSE 0
                                           ENDIF"
                                                "n"
                                                "n!1"))
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case-replace
                                                   "(FORALL (m:nat):
                     n!1 < m =>
                      IF m <= n!1
                        THEN x_sum(LAMBDA j:
                                     IF j <= n!1 THEN (TRUE, FF(m)(j))
                                     ELSE (TRUE, 0)
                                     ENDIF)`2
                      ELSE 0
                      ENDIF
                       = 0)")
                                                  (("1"
                                                    (replace -3)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (hide -2 -3)
                                                        (("1"
                                                          (expand
                                                           "series")
                                                          (("1"
                                                            (lemma
                                                             "sigma_eq"
                                                             ("low"
                                                              "0"
                                                              "high"
                                                              "n!1"
                                                              "F"
                                                              "LAMBDA (i_1: nat):
                             IF i_1 <= n!1
                               THEN x_sum(LAMBDA j:
                                            IF j <= n!1 THEN (TRUE, FF(i_1)(j))
                                            ELSE (TRUE, 0)
                                            ENDIF)`2
                             ELSE 0
                             ENDIF"
                                                              "G"
                                                              "LAMBDA i: sigma(0, n!1, LAMBDA j: FF(i)(j))"))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide
                                                                 2)
                                                                (("1"
                                                                  (skolem
                                                                   +
                                                                   "i!1")
                                                                  (("1"
                                                                    (inst
                                                                     -2
                                                                     "i!1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "x_sum")
                                                                          (("1"
                                                                            (case-replace
                                                                             "FORALL i: IF i <= n!1 THEN TRUE ELSE TRUE ENDIF")
                                                                            (("1"
                                                                              (prop)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "zero_tail_series_limit"
                                                                                   ("a"
                                                                                    "LAMBDA i: IF i <= n!1 THEN FF(i!1)(i) ELSE 0 ENDIF"
                                                                                    "n"
                                                                                    "n!1"))
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "series")
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "sigma_eq[nat]"
                                                                                             ("low"
                                                                                              "0"
                                                                                              "high"
                                                                                              "n!1"))
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "LAMBDA i: IF i <= n!1 THEN FF(i!1)(i) ELSE 0 ENDIF"
                                                                                               "_")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "LAMBDA j: FF(i!1)(j)")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2
                                                                                       -1)
                                                                                      (("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2 -1 -2)
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (lift-if 1)
                                                        (("2"
                                                          (prop)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (prop)
                                                (("2"
                                                  (expand "x_sum")
                                                  (("2"
                                                    (prop)
                                                    (("1"
                                                      (skosimp)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "zero_tail_series_conv"
                                                       ("a"
                                                        "LAMBDA i:
                                          IF i <= n!1 THEN FF(i!1)(i) ELSE 0 ENDIF"
                                                        "n"
                                                        "n!1"))
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide -1 2)
                    (("2"
                      (lemma "x_sum_eq"
                       ("S" "LAMBDA i:
                        x_sum(LAMBDA j:
                                (TRUE,
                                 fm_times(fm_contraction[T1, S1]
                                          (mu, A_of(mu)(i)),
                                          fm_contraction[T2, S2]
                                          (nu, A_of(nu)(j)))
                                         (intersection
                                          (cross_product
                                           (P_of(mu)(n!1), P_of(nu)(n!1)),
                                           E!1))))" "T" "LAMBDA i:
                        IF i <= n!1
                          THEN x_sum(LAMBDA j:
                                       IF j <= n!1
                                         THEN (TRUE,
                                               fm_times
                                               (fm_contraction[T1, S1]
                                                (mu, A_of(mu)(i)),
                                                fm_contraction[T2, S2]
                                                (nu, A_of(nu)(j)))
                                               (E!1))
                                       ELSE (TRUE, 0)
                                       ENDIF)
                        ELSE (TRUE, 0)
                        ENDIF"))
                      (("2" (split -1)
                        (("1" (propax) nil nil)
                         ("2" (hide 2)
                          (("2" (skosimp)
                            (("2" (expand "fm_times")
                              (("2"
                                (case-replace
                                 "IF i!1 <= n!1
                   THEN x_sum(LAMBDA j:
                                IF j <= n!1
                                  THEN (TRUE,
                                        integral
                                            [T1,
                                             S1,
                                             to_measure
                                             (fm_contraction[T1, S1]
                                              (mu, A_of(mu)(i!1)))]
                                            (fm_contraction[T2, S2]
                                             (nu, A_of(nu)(j))
                                             o
                                             x_section(E!1)))
                                ELSE (TRUE, 0)
                                ENDIF)
                 ELSE (TRUE, 0)
                 ENDIF = x_sum(LAMBDA j:
                                IF i!1<= n!1 & j <= n!1
                                  THEN (TRUE,
                                        integral
                                            [T1,
                                             S1,
                                             to_measure
                                             (fm_contraction[T1, S1]
                                              (mu, A_of(mu)(i!1)))]
                                            (fm_contraction[T2, S2]
                                             (nu, A_of(nu)(j))
                                             o
                                             x_section(E!1)))
                                ELSE (TRUE, 0)
                                ENDIF)")
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (lemma
                                     "x_sum_eq"
                                     ("S"
                                      "LAMBDA j:
                            (TRUE,
                             integral
                                 [T1, S1,
                                  to_measure(fm_contraction[T1, S1]
                                             (mu, A_of(mu)(i!1)))]
                                 (fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                   x_section(intersection
                                             (cross_product
                                              (P_of(mu)(n!1), P_of(nu)(n!1)),
                                              E!1))))"
                                      "T"
                                      "LAMBDA j:
                            IF i!1 <= n!1 & j <= n!1
                              THEN (TRUE,
                                    integral
                                        [T1, S1,
                                         to_measure(fm_contraction[T1, S1]
                                                    (mu, A_of(mu)(i!1)))]
                                        (fm_contraction[T2, S2](nu, A_of(nu)(j)) o
                                          x_section(E!1)))
                            ELSE (TRUE, 0)
                            ENDIF"))
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (skolem + "j!1")
                                          (("1"
                                            (expand "x_eq")
                                            (("1"
                                              (lift-if 1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (name
                                                   "FF"
                                                   "(fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                                  x_section(intersection(cross_product
                                                         (P_of(mu)(n!1), P_of(nu)(n!1)),
                                                         E!1)))")
                                                  (("1"
                                                    (lemma
                                                     "x_section_integrable[T1,T2,S1,S2]"
                                                     ("mu"
                                                      "fm_contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                      "nu"
                                                      "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                                                      "M"
                                                      "intersection(cross_product
                                                       (P_of(mu)(n!1), P_of(nu)(n!1)),
                                                       E!1)"))
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (lemma
                                                         "measure_eq_integral[T1,S1]"
                                                         ("mu"
                                                          "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                          "nu"
                                                          "contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                          "f"
                                                          "FF"))
                                                        (("1"
                                                          (replace -2)
                                                          (("1"
                                                            (lemma
                                                             "measure_eq_integrable?[T1,S1]"
                                                             ("mu"
                                                              "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                              "nu"
                                                              "contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                              "f"
                                                              "FF"))
                                                            (("1"
                                                              (lemma
                                                               "sfm_component_eq[T1,S1,mu]"
                                                               ("n"
                                                                "i!1"))
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (flatten
                                                                     -2)
                                                                    (("1"
                                                                      (rewrite
                                                                       "contraction_integral"
                                                                       -3)
                                                                      (("1"
                                                                        (replace
                                                                         -3)
                                                                        (("1"
                                                                          (hide
                                                                           -3
                                                                           -4)
                                                                          (("1"
                                                                            (lemma
                                                                             "x_section_integrable[T1,T2,S1,S2]"
                                                                             ("mu"
                                                                              "fm_contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                                              "nu"
                                                                              "fm_contraction[T2, S2](nu, A_of(nu)(j!1))"
                                                                              "M"
                                                                              "E!1"))
                                                                            (("1"
                                                                              (lemma
                                                                               "measure_eq_integrable?[T1,S1]"
                                                                               ("mu"
                                                                                "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                                "nu"
                                                                                "contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                                                "f"
                                                                                "fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o x_section(E!1)"))
                                                                              (("1"
                                                                                (lemma
                                                                                 "measure_eq_integral[T1,S1]"
                                                                                 ("mu"
                                                                                  "to_measure(fm_contraction[T1, S1](mu, A_of(mu)(i!1)))"
                                                                                  "nu"
                                                                                  "contraction[T1, S1](mu, A_of(mu)(i!1))"
                                                                                  "f"
                                                                                  "fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o x_section(E!1)"))
                                                                                (("1"
                                                                                  (replace
                                                                                   -4)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (flatten
                                                                                       -2)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "contraction_integral[T1,S1]"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -6
                                                                                             1
                                                                                             rl)
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "i!1 <= n!1")
                                                                                                (("1"
                                                                                                  (case-replace
                                                                                                   "j!1 <= n!1")
                                                                                                  (("1"
                                                                                                    (case-replace
                                                                                                     "(((reals@real_fun_ops[T1].*)
                                  (phi[T1, S1](A_of(mu)(i!1)),
                                   (fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                                     x_section(intersection(cross_product
                                                            (P_of(mu)(n!1), P_of(nu)(n!1)),
                                                            E!1))))))=(((reals@real_fun_ops[T1].*)
                                   (phi[T1, S1](A_of(mu)(i!1)),
                                    fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                                     x_section(E!1))))")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (apply-extensionality
                                                                                                         :hide?
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "*")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "o ")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cross_product")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "intersection")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "x_section")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "x_section")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "phi")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "fm_contraction")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "intersection")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "member")
                                                                                                                                (("1"
                                                                                                                                  (case-replace
                                                                                                                                   "A_of(mu)(i!1)(x!1)")
                                                                                                                                  (("1"
                                                                                                                                    (case-replace
                                                                                                                                     "{x: T2 |
                                 A_of(nu)(j!1)(x) AND
                                  (P_of(mu)(n!1)(x!1) AND P_of(nu)(n!1)(x)) AND E!1(x!1, x)}={x: T2 | A_of(nu)(j!1)(x) AND E!1(x!1, x)}")
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (apply-extensionality
                                                                                                                                         :hide?
                                                                                                                                         t)
                                                                                                                                        (("1"
                                                                                                                                          (case-replace
                                                                                                                                           "A_of(nu)(j!1)(x!2) AND E!1(x!1, x!2)")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (split)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "P_of")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "IUnion")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "i!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "P_of")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "IUnion")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "j!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (replace
                                                                                                                                             1
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (replace
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (case-replace
                                                                                                       "(((reals@real_fun_ops[T1].*)
                                  (phi[T1, S1](A_of(mu)(i!1)),
                                   (fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                                     x_section(intersection(cross_product
                                                            (P_of(mu)(n!1), P_of(nu)(n!1)),
                                                            E!1))))))=lambda x: 0")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "integral_zero")
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "n!1<j!1")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           2
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (apply-extensionality
                                                                                                             :hide?
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "fm_contraction")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "o")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "x_section")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "x_section")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "intersection")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "cross_product")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "phi")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("1"
                                                                                                                                (case-replace
                                                                                                                                 "{x: T2 |
                                   A_of(nu)(j!1)(x) AND
                                    (P_of(mu)(n!1)(x!1) AND P_of(nu)(n!1)(x)) AND E!1(x!1, x)}=emptyset[T2]")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "nu")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sigma_finite_measure?")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "measure?")
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "measure_empty?")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (apply-extensionality
                                                                                                                                   :hide?
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "emptyset")
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         1
                                                                                                                                         -2
                                                                                                                                         -6
                                                                                                                                         -4)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "P_of")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "IUnion")
                                                                                                                                            (("2"
                                                                                                                                              (skosimp)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "emptyset")
                                                                                                                                                (("2"
                                                                                                                                                  (prop)
                                                                                                                                                  (("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "A_of(nu)")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "disjoint_indexed_measurable?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "disjoint?")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "i!2"
                                                                                                                                                           "j!1")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "disjoint?")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "intersection")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "empty?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (propax)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (case-replace
                                                                                                     "(((reals@real_fun_ops[T1].*)
                                (phi[T1, S1](A_of(mu)(i!1)),
                                 (fm_contraction[T2, S2](nu, A_of(nu)(j!1)) o
                                   x_section(intersection(cross_product
                                                          (P_of(mu)(n!1), P_of(nu)(n!1)),
                                                          E!1))))))=lambda x:0")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "integral_zero")
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "n!1<i!1")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         2
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (apply-extensionality
                                                                                                           :hide?
                                                                                                           t)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "*")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cross_product")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "fm_contraction")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "o")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "intersection")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "x_section")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "x_section")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "phi")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (case-replace
                                                                                                                               "A_of(mu)(i!1)(x!1)")
                                                                                                                              (("1"
                                                                                                                                (case-replace
                                                                                                                                 "{x_1: T2 |
                                   A_of(nu)(j!1)(x_1) AND
                                    (P_of(mu)(n!1)(x!1) AND P_of(nu)(n!1)(x_1)) AND
                                     E!1(x!1, x_1)}=emptyset[T2]")
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "nu")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sigma_finite_measure?")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "measure?")
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "measure_empty?")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (apply-extensionality
                                                                                                                                   :hide?
                                                                                                                                   t)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "emptyset")
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1
                                                                                                                                           -3
                                                                                                                                           -4)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "P_of")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "IUnion")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "emptyset")
                                                                                                                                                  (("2"
                                                                                                                                                    (prop)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "A_of(mu)")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "disjoint_indexed_measurable?")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "disjoint?")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "i!1"
                                                                                                                                                             "i!2")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "disjoint?")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "intersection")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "empty?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "x!1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "measurable_set?")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "measurable_set?")
                                                    (("2"
                                                      (rewrite
                                                       "A_of_def2")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skosimp)
                                      (("2"
                                        (rewrite
                                         "integral_nonneg[T1, S1,
                     to_measure[T1, S1]
                         (fm_contraction[T1, S1](mu, A_of[T1, S1](mu)(i!1)))]")
                                        (("1"
                                          (expand "o")
                                          (("1"
                                            (skosimp)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (expand "measurable_set?")
                                      (("3"
                                        (skosimp)
                                        (("3"
                                          (rewrite "A_of_def2")
                                          nil
                                          nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (skosimp)
                                      (("4"
                                        (rewrite
                                         "x_section_integrable")
                                        (("4"
                                          (expand "measurable_set?")
                                          (("4"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("5"
                                      (skosimp)
                                      (("5"
                                        (skosimp)
                                        (("5"
                                          (expand "x_section")
                                          (("5"
                                            (lemma
                                             "x_section_measurable"
                                             ("S1"
                                              "S1"
                                              "S2"
                                              "S2"
                                              "x"
                                              "x1!1"
                                              "Z"
                                              "E!1"))
                                            (("5" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("6"
                                      (skosimp)
                                      (("6"
                                        (expand "measurable_set?")
                                        (("6"
                                          (rewrite "A_of_def2")
                                          nil
                                          nil))
                                        nil))
                                      nil)
                                     ("7"
                                      (skosimp)
                                      (("7"
                                        (rewrite
                                         "integral_nonneg[T1, S1,
                     to_measure[T1, S1]
                         (fm_contraction[T1, S1](mu, A_of[T1, S1](mu)(i!1)))]")
                                        (("1"
                                          (expand "o")
                                          (("1"
                                            (skosimp)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("8"
                                      (expand "measurable_set?")
                                      (("8"
                                        (rewrite "A_of_def2")
                                        nil
                                        nil))
                                      nil)
                                     ("9"
                                      (skosimp)
                                      (("9"
                                        (rewrite
                                         "x_section_integrable")
                                        (("9"
                                          (expand "measurable_set?")
                                          (("9"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("10"
                                      (skosimp)
                                      (("10"
                                        (expand "x_section")
                                        (("10"
                                          (lemma
                                           "x_section_measurable"
                                           ("S1"
                                            "S1"
                                            "S2"
                                            "S2"
                                            "x"
                                            "x1!1"
                                            "Z"
                                            "intersection[[T1, T2]]
                                  (cross_product[T1, T2]
                                       (P_of[T1, S1](mu)(n!1), P_of[T2, S2](nu)(n!1)),
                                   E!1)"))
                                          (("10"
                                            (assert)
                                            (("10"
                                              (hide 2 3)
                                              (("10"
                                                (lemma
                                                 "measurable_intersection[[T1, T2],sigma_times(S1, S2)]")
                                                (("10"
                                                  (expand
                                                   "measurable_set?")
                                                  (("10"
                                                    (inst
                                                     -
                                                     "cross_product[T1, T2]
                                     (P_of[T1, S1](mu)(n!1), P_of[T2, S2](nu)(n!1))"
                                                     "E!1")
                                                    (("1"
                                                      (expand
                                                       "measurable_set?")
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "measurable_set?")
                                                      (("2"
                                                        (rewrite
                                                         "cross_product_is_sigma_times")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (case-replace "i!1<=n!1")
                                    (("2"
                                      (replace 1)
                                      (("2"
                                        (expand "x_sum")
                                        (("2"
                                          (lemma
                                           "zero_tail_series_conv"
                                           ("a" "LAMBDA i: 0" "n" "0"))
                                          (("2"
                                            (lemma
                                             "zero_tail_series_limit"
                                             ("a"
                                              "LAMBDA i: 0"
                                              "n"
                                              "0"))
                                            (("2"
                                              (case-replace
                                               "FORALL (m:nat): 0 < m => (LAMBDA i: 0)(m) = 0")
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (expand "series")
                                                    (("1"
                                                      (expand "sigma")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (skosimp)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (hide 2)
                                  (("3"
                                    (skosimp*)
                                    (("3"
                                      (rewrite
                                       "integral_nonneg[T1, S1,
                   to_measure[T1, S1]
                       (fm_contraction[T1, S1](mu, A_of[T1, S1](mu)(i!1)))]")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "o")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "measurable_set?")
                                        (("2"
                                          (rewrite "A_of_def2")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (expand "measurable_set?")
                                  (("4"
                                    (skosimp)
                                    (("4"
                                      (rewrite "A_of_def2")
                                      nil
                                      nil))
                                    nil))
                                  nil)
                                 ("5"
                                  (skosimp)
                                  (("5"
                                    (rewrite "x_section_integrable" 1)
                                    (("5"
                                      (expand "measurable_set?")
                                      (("5"
                                        (rewrite "A_of_def2")
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("6"
                                  (skosimp)
                                  (("6"
                                    (skosimp)
                                    (("6"
                                      (assert)
                                      (("6"
                                        (hide-all-but 1)
                                        (("6"
                                          (typepred "E!1")
                                          (("6"
                                            (lemma
                                             "x_section_measurable"
                                             ("S1"
                                              "S1"
                                              "S2"
                                              "S2"
                                              "x"
                                              "x1!1"
                                              "Z"
                                              "E!1"))
                                            (("6"
                                              (assert)
                                              (("6"
                                                (expand "x_section" 1)
                                                (("6"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("7"
                                  (expand "measurable_set?")
                                  (("7"
                                    (skosimp)
                                    (("7"
                                      (rewrite "A_of_def2")
                                      nil
                                      nil))
                                    nil))
                                  nil)
                                 ("8"
                                  (hide 2)
                                  (("8"
                                    (flatten)
                                    (("8"
                                      (skosimp)
                                      (("8"
                                        (rewrite
                                         "integral_nonneg[T1, S1,
                   to_measure[T1, S1]
                       (fm_contraction[T1, S1](mu, A_of[T1, S1](mu)(i!1)))]")
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (expand "o")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "measurable_set?")
                                          (("2"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("9"
                                  (expand "measurable_set?")
                                  (("9"
                                    (skosimp*)
                                    (("9"
                                      (rewrite "A_of_def2")
                                      nil
                                      nil))
                                    nil))
                                  nil)
                                 ("10"
                                  (hide 2)
                                  (("10"
                                    (flatten)
                                    (("10"
                                      (skosimp)
                                      (("10"
                                        (rewrite
                                         "x_section_integrable")
                                        (("10"
                                          (expand "measurable_set?")
                                          (("10"
                                            (rewrite "A_of_def2")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("11"
                                  (expand "x_section")
                                  (("11"
                                    (flatten)
                                    (("11"
                                      (skosimp)
                                      (("11"
                                        (skosimp)
                                        (("11"
                                          (lemma
                                           "x_section_measurable"
                                           ("S1"
                                            "S1"
                                            "S2"
                                            "S2"
                                            "x"
                                            "x1!1"
                                            "Z"
                                            "E!1"))
                                          (("11" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("12"
                                  (expand "measurable_set?")
                                  (("12"
                                    (flatten)
                                    (("12"
                                      (skosimp)
                                      (("12"
                                        (rewrite "A_of_def2")
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (expand "measurable_set?")
                    (("3" (skosimp)
                      (("3" (skosimp)
                        (("3" (rewrite "A_of_def2") nil nil)) nil))
                      nil))
                    nil)
                   ("4" (skosimp)
                    (("4" (skosimp)
                      (("4" (expand "measurable_set?")
                        (("4" (rewrite "A_of_def2") nil nil)) nil))
                      nil))
                    nil)
                   ("5" (expand "measurable_set?")
                    (("5" (skosimp)
                      (("5" (rewrite "A_of_def2") nil nil)) nil))
                    nil)
                   ("6" (expand "measurable_set?")
                    (("6" (skosimp)
                      (("6" (rewrite "A_of_def2") nil nil)) nil))
                    nil)
                   ("7" (hide-all-but 1)
                    (("7" (typepred "E!1")
                      (("7"
                        (lemma "cross_product_is_sigma_times"
                         ("X" "P_of[T1, S1](mu)(n!1)" "Y"
                          "P_of[T2, S2](nu)(n!1)"))
                        (("7"
                          (lemma "sigma_algebra_intersection"
                           ("x" "cross_product(P_of[T1, S1](mu)(n!1),
                                     P_of[T2, S2](nu)(n!1))" "y"
                            "E!1"))
                          (("1" (expand "member")
                            (("1" (propax) nil nil)) nil)
                           ("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil)
    (mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (P_of const-decl "(S)" measure_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_times const-decl "sigma_algebra[[T1, T2]]" product_sigma_def
     nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (product_measure_contraction formula-decl nil fubini_tonelli_scaf
     nil)
    (<= const-decl "bool" reals nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (cross_product const-decl "set[[T1, T2]]" cross_product
     "topology/")
    (intersection const-decl "set" sets nil)
    (A_of const-decl "disjoint_indexed_measurable" measure_def nil)
    (disjoint_indexed_measurable nonempty-type-eq-decl nil
     generalized_measure_def nil)
    (disjoint_indexed_measurable? const-decl "bool"
     generalized_measure_def nil)
    (fm_contraction const-decl "finite_measure" measure_contraction
     nil)
    (fm_times const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_finite_measure nil)
    (finite_measure nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (finite_measure? const-decl "bool" generalized_measure_def nil)
    (TRUE const-decl "bool" booleans nil)
    (x_sum const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (x_eq const-decl "bool" extended_nnreal "extended_nnreal/")
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sigma def-decl "real" sigma "reals/")
    (T_high type-eq-decl nil sigma "reals/")
    (T_low type-eq-decl nil sigma "reals/")
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (integrable? const-decl "bool" integral nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (integral const-decl "real" integral nil)
    (O const-decl "T3" function_props nil)
    (x_section const-decl "[T1 -> set[T2]]" cross_product "topology/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (x_section_integrable formula-decl nil product_finite_measure nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (disjoint? const-decl "bool" sets nil)
    (x_section_measurable formula-decl nil product_sigma_def nil)
    (measurable_intersection judgement-tcc nil measure_space_def nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (m_monotone formula-decl nil measure_props nil)
    (AA skolem-const-decl "set[T2]" fubini_tonelli_scaf nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (BB skolem-const-decl "set[T2]" fubini_tonelli_scaf nil)
    (x_le const-decl "bool" extended_nnreal "extended_nnreal/")
    (x_add const-decl "extended_nnreal" extended_nnreal
     "extended_nnreal/")
    (P_of_def2 formula-decl nil measure_def nil)
    (m_disjoint_union formula-decl nil measure_props nil)
    (empty? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (disjoint? const-decl "bool" indexed_sets_aux "sets_aux/")
    (union const-decl "set" sets nil)
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (A_of_def2 formula-decl nil measure_def nil)
    (integral_add formula-decl nil integral nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[T -> real]" real_fun_ops "reals/")
    (emptyset const-decl "set" sets nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (sigma_0_neg formula-decl nil sigma_nat "reals/")
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (i!1 skolem-const-decl "subrange(0, n!1)" fubini_tonelli_scaf nil)
    (E!1 skolem-const-decl "(sigma_times(S1, S2))" fubini_tonelli_scaf
     nil)
    (n!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (subrange type-eq-decl nil integers nil)
    (sigma_eq formula-decl nil sigma "reals/")
    (n!2 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (sigma_algebra_IUnion_rew application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (n!3 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (j!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (measure_eq_integrable? formula-decl nil measure_equality nil)
    (sfm_component_eq formula-decl nil sigma_finite_measure_props nil)
    (contraction_integrable formula-decl nil measure_contraction nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (HH skolem-const-decl "[T1 -> real]" fubini_tonelli_scaf nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (GG skolem-const-decl "[T1 -> real]" fubini_tonelli_scaf nil)
    (* const-decl "[T -> real]" real_fun_ops "reals/")
    (phi const-decl "nat" measure_space nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas_aux nil)
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (contraction_integral formula-decl nil measure_contraction nil)
    (measure_eq_integral formula-decl nil measure_equality nil)
    (FF skolem-const-decl "[T1 -> nnreal]" fubini_tonelli_scaf nil)
    (x_section_measurable formula-decl nil product_finite_measure nil)
    (zero_tail_series_limit formula-decl nil series_aux "series/")
    (< const-decl "bool" reals nil)
    (series const-decl "sequence[real]" series "series/")
    (sigma_nnreal application-judgement "nnreal" sigma_nat "reals/")
    (sequence type-eq-decl nil sequences nil)
    (zero_tail_series_conv formula-decl nil series_aux "series/")
    (FF skolem-const-decl "[nat -> [nat -> nnreal]]"
     fubini_tonelli_scaf nil)
    (x_sum_eq formula-decl nil extended_nnreal "extended_nnreal/")
    (sigma_nat application-judgement "nat" sigma_nat "reals/")
    (measurable_intersection application-judgement "measurable_set"
     fubini_tonelli_scaf nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil)
    (integral_nonneg formula-decl nil integral nil)
    (x_section const-decl "set[T2]" cross_product "topology/")
    (integral_zero formula-decl nil integral nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_props
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable
     "sigma_set/")
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (sigma_algebra_intersection formula-decl nil sigma_algebra nil)
    (to_measure const-decl "measure_type" generalized_measure_def nil)
    (product_measure_approx const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]" product_measure
     nil)
    (contraction const-decl "measure_type" measure_contraction nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (set type-eq-decl nil sets nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (m_times const-decl
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_measure nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T2, S2]" fubini_tonelli_scaf nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T1, S1]" fubini_tonelli_scaf nil))
   shostak))
 (fubini_tonelli_scaf1_TCC1 0
  (fubini_tonelli_scaf1_TCC1-1 nil 3474177088
   ("" (skosimp) (("" (assert) nil nil)) nil) nil nil))
 (fubini_tonelli_scaf1 0
  (fubini_tonelli_scaf1-1 nil 3474177098
   ("" (skosimp)
    ((""
      (case "forall n: measurable_set?(P_of(mu)(n)) & mu(P_of(mu)(n))`1")
      (("1"
        (case "forall n: measurable_set?(P_of(nu)(n)) & nu(P_of(nu)(n))`1")
        (("1" (typepred "h!1")
          (("1" (lemma "nn_measurable_def" ("f" "h!1"))
            (("1" (expand "nn_measurable?" -2)
              (("1" (flatten -2)
                (("1" (replace -2)
                  (("1" (replace -3)
                    (("1" (assert)
                      (("1" (skosimp)
                        (("1"
                          (name "H" "LAMBDA (n: nat):
                    *[[T1, T2]](phi[[T1, T2],(sigma_times(S1,S2))](cross_product(P_of(mu)(n), P_of(nu)(n))),w!1(n))")
                          (("1"
                            (case "pointwise_converges_upto?(H, h!1)")
                            (("1" (hide -2 -3)
                              (("1"
                                (case
                                 "forall (z:[T1,T2],i):0<=H(i)(z)&H(i)(z)<=h!1(z)")
                                (("1"
                                  (case "forall i: isf?(H(i))")
                                  (("1"
                                    (case
                                     "forall i,x: integrable?(lambda y: H(i)(x,y))")
                                    (("1"
                                      (case
                                       "forall i: bounded_measurable?[[T1,T2],sigma_times(S1,S2)](H(i))")
                                      (("1"
                                        (case
                                         "forall i: integrable?(H(i))")
                                        (("1"
                                          (name
                                           "F"
                                           "lambda i: lambda x: integral(LAMBDA y: H(i)(x, y))")
                                          (("1"
                                            (case
                                             "FORALL i: integrable?(F(i)) & integral(F(i)) = integral(H(i))")
                                            (("1"
                                              (case
                                               "pointwise_increasing?(F)")
                                              (("1"
                                                (case
                                                 "forall i,x: 0<=F(i)(x)")
                                                (("1"
                                                  (case-replace
                                                   "integrable?(h!1)")
                                                  (("1"
                                                    (simplify 1)
                                                    (("1"
                                                      (case
                                                       "real_fun_preds.bounded?(integral[[T1, T2], sigma_times(S1, S2),m_times(mu,nu)] o H)")
                                                      (("1"
                                                        (case
                                                         "integral[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)] o H = integral[T1,S1,mu] o F")
                                                        (("1"
                                                          (lemma
                                                           "monotone_convergence[T1,S1,mu]"
                                                           ("F" "F"))
                                                          (("1"
                                                            (case-replace
                                                             "ae_increasing?(F)")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (hide
                                                                 -2)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "f!1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "ae_convergence?"
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (expand
                                                                               "fullset"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "ae_convergence_in?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "E!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "negligible_set?")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           -
                                                                                           "N!1")
                                                                                          (("1"
                                                                                            (flatten
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "forall x: (not N!1(x)) => convergence?(LAMBDA n: F(n)(x), f!1(x))")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (case-replace
                                                                                                   "integrable1?(h!1)")
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "integral1[T1, T2, S1, S2, mu, nu](h!1)")
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "f!1")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "integral_ae_eq[T1,S1,mu]"
                                                                                                         ("f"
                                                                                                          "f!1"
                                                                                                          "h"
                                                                                                          "integral1[T1, T2, S1, S2, mu, nu](h!1)"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2
                                                                                                               1
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "monotone_convergence_scaf[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)]"
                                                                                                                 ("F"
                                                                                                                  "H"
                                                                                                                  "f"
                                                                                                                  "h!1"))
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -12)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -23)
                                                                                                                    (("1"
                                                                                                                      (flatten
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -12
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (name-replace
                                                                                                                           "L1"
                                                                                                                           "integral(h!1)")
                                                                                                                          (("1"
                                                                                                                            (name-replace
                                                                                                                             "L2"
                                                                                                                             "integral(f!1)")
                                                                                                                            (("1"
                                                                                                                              (name-replace
                                                                                                                               "UU"
                                                                                                                               "integral[T1,S1,mu] o F")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (-2
                                                                                                                                  1
                                                                                                                                  -11))
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "converges_upto?")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "hausdorff_convergence.unique_limit"
                                                                                                                                       ("u"
                                                                                                                                        "UU"
                                                                                                                                        "l1"
                                                                                                                                        "L1"
                                                                                                                                        "l2"
                                                                                                                                        "L2"))
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2
                                                                                                             -1
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae_eq?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "restrict")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "pointwise_ae?")
                                                                                                                  (("2"
                                                                                                                    (name
                                                                                                                     "N!2"
                                                                                                                     "null_integrable1[T1, T2, S1, S2, mu, nu](h!1)`1")
                                                                                                                    (("1"
                                                                                                                      (typepred
                                                                                                                       "null_integrable1[T1, T2, S1, S2, mu, nu](h!1)`1")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "null_union[T1,S1,mu]"
                                                                                                                           ("N1"
                                                                                                                            "N!1"
                                                                                                                            "N2"
                                                                                                                            "N!2"))
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "ae?"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "fullset")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "ae_in?")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "union[T1](N!1, N!2)")
                                                                                                                                  (("1"
                                                                                                                                    (skolem
                                                                                                                                     +
                                                                                                                                     "x!1")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "union"
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "member")
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -5
                                                                                                                                               "x!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "null_integral1_def[T1,T2,S1,S2,mu,nu]"
                                                                                                                                                   ("h1"
                                                                                                                                                    "h!1"
                                                                                                                                                    "N1"
                                                                                                                                                    "null_integrable1[T1, T2, S1, S2, mu, nu](h!1)`1"
                                                                                                                                                    "f"
                                                                                                                                                    "null_integrable1[T1, T2, S1, S2, mu, nu](h!1)`2"
                                                                                                                                                    "x"
                                                                                                                                                    "x!1"))
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           -2)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "integral1")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "member")
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "null_integral1_def[T1,T2,S1,S2,mu,nu]"
                                                                                                                                                                 ("h1"
                                                                                                                                                                  "h!1"
                                                                                                                                                                  "N1"
                                                                                                                                                                  "null_integrable1[T1, T2, S1, S2, mu, nu](h!1)`1"
                                                                                                                                                                  "f"
                                                                                                                                                                  "null_integrable1[T1, T2, S1, S2, mu, nu](h!1)`2"
                                                                                                                                                                  "x"
                                                                                                                                                                  "x!1"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1
                                                                                                                                                                       3
                                                                                                                                                                       rl)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1
                                                                                                                                                                         1
                                                                                                                                                                         2
                                                                                                                                                                         -3
                                                                                                                                                                         -4
                                                                                                                                                                         -8
                                                                                                                                                                         -9)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "monotone_convergence_scaf[T2,S2,nu]"
                                                                                                                                                                           ("F"
                                                                                                                                                                            "lambda i: lambda y: H(i)(x!1,y)"
                                                                                                                                                                            "f"
                                                                                                                                                                            "LAMBDA y: h!1(x!1,y)"))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -2)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (split)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "o"
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case-replace
                                                                                                                                                                                   "(LAMBDA n: integral(LAMBDA y: H(n)(x!1, y)))= LAMBDA n: F(n)(x!1)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "converges_upto?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "hausdorff_convergence.unique_limit"
                                                                                                                                                                                         ("u"
                                                                                                                                                                                          "LAMBDA n: F(n)(x!1)"
                                                                                                                                                                                          "l1"
                                                                                                                                                                                          "f!1(x!1)"
                                                                                                                                                                                          "l2"
                                                                                                                                                                                          "integral(LAMBDA (y: T2): h!1(x!1, y))"))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "F")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 (1
                                                                                                                                                                                  -18))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "pointwise_converges_upto?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (split)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "pointwise_convergence?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skolem
                                                                                                                                                                                           +
                                                                                                                                                                                           "y!1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "(x!1,y!1)")
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "pointwise_increasing?")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (skolem
                                                                                                                                                                                           +
                                                                                                                                                                                           "y!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -
                                                                                                                                                                                             "(x!1,y!1)")
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("3"
                                                                                                                                                                                (case
                                                                                                                                                                                 "real_fun_preds.bounded?(lambda i: F(i)(x!1))")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "F")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "o ")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-4
                                                                                                                                                                                    1
                                                                                                                                                                                    -9
                                                                                                                                                                                    -10))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "bounded?")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (split)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         -2)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "bounded_above?")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             +
                                                                                                                                                                                             "f!1(x!1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (skolem
                                                                                                                                                                                               +
                                                                                                                                                                                               "i!1")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (rewrite
                                                                                                                                                                                                 "metric_convergence_def")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "metric_converges_to")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (name
                                                                                                                                                                                                     "R"
                                                                                                                                                                                                     "F(i!1)(x!1)-f!1(x!1)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "R>0")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "R")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -
                                                                                                                                                                                                             "i!1+n!1")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "ball")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "pointwise_increasing?")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -
                                                                                                                                                                                                                     "x!1")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "increasing?")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -
                                                                                                                                                                                                                         "i!1"
                                                                                                                                                                                                                         "i!1+n!1")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (grind)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         -1
                                                                                                                                                                                         -3)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "bounded_below?")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             +
                                                                                                                                                                                             "0")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skolem
                                                                                                                                                                                               +
                                                                                                                                                                                               "i!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -
                                                                                                                                                                                                 "i!1"
                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -15
                                                                                                                                                                               "i!1"
                                                                                                                                                                               "x!1")
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (decompose-equality
                                                                                                                                                                       1)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (decompose-equality
                                                                                                                                                         1)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (expand
                                                                                                                                     "negligible_set?"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "union[T1](N!1, N!2)")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "subset?")
                                                                                                                                          (("2"
                                                                                                                                            (skosimp)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "integrable1?")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "N!1"
                                                                                                         "f!1")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "monotone_convergence_scaf[T2,S2,nu]"
                                                                                                                 ("F"
                                                                                                                  "lambda i: LAMBDA y: H(i)(x!1,y)"
                                                                                                                  "f"
                                                                                                                  "LAMBDA y: h!1(x!1, y)"))
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "converges_upto?")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "o"
                                                                                                                             (-2
                                                                                                                              -3))
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "hausdorff_convergence.unique_limit"
                                                                                                                               ("u"
                                                                                                                                "LAMBDA n: F(n)(x!1)"
                                                                                                                                "l1"
                                                                                                                                "integral(LAMBDA y: h!1(x!1,y))"
                                                                                                                                "l2"
                                                                                                                                "f!1(x!1)"))
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "F")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -4
                                                                                                                                     "x!1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-17
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "pointwise_converges_upto?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "pointwise_convergence?")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "pointwise_increasing?")
                                                                                                                            (("2"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "(x!1,x!2)")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skosimp)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -2
                                                                                                                                   "(x!1,x!2)")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (case
                                                                                                                     "real_fun_preds.bounded?(lambda i: F(i)(x!1))")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "F")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "o ")
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "x!1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            -8
                                                                                                                            1
                                                                                                                            -9))
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "bounded?")
                                                                                                                            (("2"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "bounded_above?")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     +
                                                                                                                                     "f!1(x!1)")
                                                                                                                                    (("1"
                                                                                                                                      (skolem
                                                                                                                                       +
                                                                                                                                       "i!1")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "metric_convergence_def")
                                                                                                                                        (("1"
                                                                                                                                          (name
                                                                                                                                           "R"
                                                                                                                                           "F(i!1)(x!1)-f!1(x!1)")
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "R>0")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "metric_converges_to")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "R")
                                                                                                                                                (("1"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "n!1+i!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "ball")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "pointwise_increasing?")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "increasing?")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "i!1"
                                                                                                                                                                 "i!1+n!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 -1
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "bounded_below?")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     +
                                                                                                                                     "0")
                                                                                                                                    (("2"
                                                                                                                                      (skolem
                                                                                                                                       +
                                                                                                                                       "i!1")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "i!1"
                                                                                                                                         "x!1")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -14
                                                                                                                     "i!1"
                                                                                                                     "x!1")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-6 1))
                                                              (("2"
                                                                (expand
                                                                 "ae_increasing?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_increasing?")
                                                                  (("2"
                                                                    (expand
                                                                     "increasing?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "emptyset[T1]")
                                                                      (("2"
                                                                        (skolem
                                                                         +
                                                                         "x!1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply-extensionality
                                                           :hide?
                                                           t)
                                                          (("2"
                                                            (expand
                                                             "o"
                                                             1)
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "x!1")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (skosimp)
                                                          (("3"
                                                            (inst
                                                             -5
                                                             "x1!1")
                                                            (("3"
                                                              (flatten)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (expand
                                                           "bounded?")
                                                          (("2"
                                                            (expand
                                                             "o ")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "bounded_above?")
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "integral(h!1)")
                                                                  (("1"
                                                                    (skolem
                                                                     +
                                                                     "i!1")
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "i!1")
                                                                      (("1"
                                                                        (lemma
                                                                         "integral_ae_le"
                                                                         ("f1"
                                                                          "H(i!1)"
                                                                          "f2"
                                                                          "h!1"))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-11
                                                                              1))
                                                                            (("1"
                                                                              (expand
                                                                               "pointwise_converges_upto?")
                                                                              (("1"
                                                                                (expand
                                                                                 "ae_le?")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "pointwise_ae?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "ae?")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "fullset")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_in?")
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "emptyset[[T1,T2]]")
                                                                                            (("1"
                                                                                              (skolem
                                                                                               +
                                                                                               "z!1")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "pointwise_convergence?")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "pointwise_increasing?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "z!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z!1")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "metric_convergence_def")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (name
                                                                                                                 "R"
                                                                                                                 "H(i!1)(z!1)-h!1(z!1)")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "R>0")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "metric_converges_to")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "R")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "increasing?")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "i!1+n!1")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "i!1"
                                                                                                                               "i!1+n!1")
                                                                                                                              (("1"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "bounded_below?")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "0")
                                                                  (("2"
                                                                    (skolem
                                                                     +
                                                                     "n!1")
                                                                    (("2"
                                                                      (lemma
                                                                       "integral_nonneg[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)]"
                                                                       ("f"
                                                                        "H(n!1)"))
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               -10
                                                                               "x!1"
                                                                               "n!1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace 1 2)
                                                    (("2"
                                                      (simplify 2)
                                                      (("2"
                                                        (expand
                                                         "integrable1?"
                                                         -15)
                                                        (("2"
                                                          (skolem
                                                           -
                                                           ("N!1"
                                                            "f!1"))
                                                          (("2"
                                                            (typepred
                                                             "f!1")
                                                            (("2"
                                                              (lemma
                                                               "monotone_convergence_scaf[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)]"
                                                               ("F"
                                                                "H"
                                                                "f"
                                                                "h!1"))
                                                              (("1"
                                                                (replace
                                                                 -12)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "bounded?")
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (expand
                                                                           "bounded_above?")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "integral[T1,S1,mu](f!1)")
                                                                            (("1"
                                                                              (skolem
                                                                               +
                                                                               "n!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "o"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -4
                                                                                   "n!1")
                                                                                  (("1"
                                                                                    (flatten
                                                                                     -4)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -5
                                                                                       1
                                                                                       rl)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "integral_ae_le[T1,S1,mu]"
                                                                                         ("f1"
                                                                                          "F(n!1)"
                                                                                          "f2"
                                                                                          "f!1"))
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_le?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "pointwise_ae?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "ae?")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "fullset")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ae_in?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "N!1")
                                                                                                        (("1"
                                                                                                          (skolem
                                                                                                           +
                                                                                                           "x!1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -17
                                                                                                                 "x!1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "integral_ae_le[T2,S2,nu]"
                                                                                                                       ("f1"
                                                                                                                        "lambda y: H(n!1)(x!1,y)"
                                                                                                                        "f2"
                                                                                                                        "LAMBDA y: h!1(x!1,y)"))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "F"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (1
                                                                                                                              -11))
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ae_le?")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "pointwise_ae?")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "ae?")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "fullset")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "ae_in?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "emptyset[T2]")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "(x!1,x!2)"
                                                                                                                                               "n!1")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (inst
                                                                                                                         -9
                                                                                                                         "n!1"
                                                                                                                         "x!1")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "bounded_below?")
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "0")
                                                                            (("2"
                                                                              (skolem
                                                                               +
                                                                               "n!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "o")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "integral_nonneg[[T1, T2], sigma_times(S1, S2),m_times(mu,nu)]"
                                                                                   ("f"
                                                                                    "H(n!1)"))
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -10
                                                                                           "x!1"
                                                                                           "n!1")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (hide-all-but
                                                     (-8 1 -6))
                                                    (("2"
                                                      (expand "F")
                                                      (("2"
                                                        (lemma
                                                         "integral_nonneg[T2,S2,nu]"
                                                         ("f"
                                                          "LAMBDA y: H(i!1)(x!1,y)"))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "(x!1,x!2)"
                                                                 "i!1")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst
                                                           -
                                                           "i!1"
                                                           "x!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2 -1 -2)
                                                (("2"
                                                  (expand
                                                   "pointwise_converges_upto?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "pointwise_increasing?")
                                                      (("2"
                                                        (skolem
                                                         +
                                                         "x!1")
                                                        (("2"
                                                          (expand
                                                           "increasing?")
                                                          (("2"
                                                            (skolem
                                                             +
                                                             ("i!1"
                                                              "j!1"))
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "F")
                                                                (("2"
                                                                  (inst-cp
                                                                   -4
                                                                   "i!1"
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     -4
                                                                     "j!1"
                                                                     "x!1")
                                                                    (("2"
                                                                      (lemma
                                                                       "integral_ae_le"
                                                                       ("f1"
                                                                        "LAMBDA y: H(i!1)(x!1,y)"
                                                                        "f2"
                                                                        "LAMBDA y: H(j!1)(x!1,y)"))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-1
                                                                            -9
                                                                            1))
                                                                          (("1"
                                                                            (expand
                                                                             "ae_le?")
                                                                            (("1"
                                                                              (expand
                                                                               "pointwise_ae?")
                                                                              (("1"
                                                                                (expand
                                                                                 "ae?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "fullset")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "ae_in?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "emptyset[T2]")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "(x!1,x!2)")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "i!1"
                                                                                                 "j!1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 2)
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst -9 "i!1")
                                                  (("2"
                                                    (inst -10 "i!1")
                                                    (("2"
                                                      (expand "F")
                                                      (("2"
                                                        (inst - "i!1")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "i!1")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "i!1"
                                                             "_")
                                                            (("2"
                                                              (lemma
                                                               "integrable_integral_x_section[T1,T2,S1,S2,fm_contraction(mu,P_of(mu)(i!1)),fm_contraction(nu,P_of(nu)(i!1))]"
                                                               ("h"
                                                                "H(i!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "integral_integral_x_section[T1,T2,S1,S2,fm_contraction(mu,P_of(mu)(i!1)),fm_contraction(nu,P_of(nu)(i!1))]"
                                                                 ("h"
                                                                  "H(i!1)"))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "contraction_integral[[T1, T2], sigma_times(S1, S2)]"
                                                                     ("A"
                                                                      "cross_product(P_of(mu)(i!1),P_of(nu)(i!1))"
                                                                      "f"
                                                                      "H(i!1)"
                                                                      "mu"
                                                                      "m_times(mu,nu)"))
                                                                    (("1"
                                                                      (case-replace
                                                                       "(((reals@real_fun_ops[[T1, T2]].*)
                                           (phi[[T1, T2], sigma_times(S1, S2)]
                                                (cross_product(P_of(mu)(i!1), P_of(nu)(i!1))),
                                            H(i!1))))=H(i!1)")
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           rl)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (case
                                                                               "forall (E:(sigma_times(S1, S2))): x_eq(contraction(m_times(mu, nu),
                                                          cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))(E),to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                              fm_contraction(nu, P_of(nu)(i!1))))(E))")
                                                                              (("1"
                                                                                (lemma
                                                                                 "measure_eq_integrable?[[T1, T2], sigma_times(S1, S2)]"
                                                                                 ("mu"
                                                                                  "contraction(m_times(mu, nu),
                                                        cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))"
                                                                                  "nu"
                                                                                  "to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                                fm_contraction(nu, P_of(nu)(i!1))))"
                                                                                  "f"
                                                                                  "H(i!1)"))
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "contraction_integrable[[T1, T2], sigma_times(S1, S2)]"
                                                                                     ("A"
                                                                                      "cross_product(P_of(mu)(i!1), P_of(nu)(i!1))"
                                                                                      "f"
                                                                                      "H(i!1)"
                                                                                      "mu"
                                                                                      "m_times(mu, nu)"))
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "indefinite_integrable"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "contraction_integral[[T1, T2], sigma_times(S1, S2)]"
                                                                                           ("A"
                                                                                            "cross_product(P_of(mu)(i!1), P_of(nu)(i!1))"
                                                                                            "mu"
                                                                                            "m_times(mu,nu)"))
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "H(i!1)")
                                                                                            (("1"
                                                                                              (case-replace
                                                                                               "(((reals@real_fun_ops[[T1, T2]].*)
                                                 (phi[[T1, T2], sigma_times(S1, S2)]
                                                      (cross_product(P_of(mu)(i!1), P_of(nu)(i!1))),
                                                  H(i!1))))=H(i!1)")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "measure_eq_integral[[T1, T2], sigma_times(S1, S2)]"
                                                                                                   ("f"
                                                                                                    "H(i!1)"
                                                                                                    "mu"
                                                                                                    "contraction(m_times(mu, nu),
                                                            cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))"
                                                                                                    "nu"
                                                                                                    "to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                                    fm_contraction(nu, P_of(nu)(i!1))))"))
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -4)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1
                                                                                                           -7
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "RHS"
                                                                                                             "integral[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)](H(i!1))")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1
                                                                                                               -2
                                                                                                               -3
                                                                                                               -4
                                                                                                               -5
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "forall (E:(S2)): x_eq(contraction(nu,P_of(nu)(i!1))(E),to_measure(fm_contraction(nu,P_of(nu)(i!1)))(E))")
                                                                                                                (("1"
                                                                                                                  (case-replace
                                                                                                                   "(LAMBDA x: integral[T2,S2,to_measure(fm_contraction(nu,P_of(nu)(i!1)))](LAMBDA y: H(i!1)(x,y)))=(LAMBDA x: integral(LAMBDA y: H(i!1)(x, y)))")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "FF"
                                                                                                                       "LAMBDA x: integral(LAMBDA y: H(i!1)(x, y))")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "FORALL (E: (S1)):
                                              x_eq(contraction(mu, P_of(mu)(i!1))(E),
                                                   to_measure(fm_contraction(mu,P_of(mu)(i!1)))(E))")
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "measure_eq_integrable?[T1,S1]"
                                                                                                                           ("mu"
                                                                                                                            "contraction(mu,P_of(mu)(i!1))"
                                                                                                                            "nu"
                                                                                                                            "to_measure(fm_contraction(mu,P_of(mu)(i!1)))"
                                                                                                                            "f"
                                                                                                                            "FF"))
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -4)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "measure_eq_integral[T1,S1]"
                                                                                                                                   ("f"
                                                                                                                                    "FF"
                                                                                                                                    "mu"
                                                                                                                                    "contraction(mu,P_of(mu)(i!1))"
                                                                                                                                    "nu"
                                                                                                                                    "to_measure(fm_contraction(mu,P_of(mu)(i!1)))"))
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "contraction_integrable"
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "contraction_integral"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (case-replace
                                                                                                                                             "(((reals@real_fun_ops[T1].*)(phi[T1,S1](P_of(mu)(i!1)), FF)))=FF")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               -1
                                                                                                                                               -2
                                                                                                                                               -3
                                                                                                                                               2
                                                                                                                                               -4
                                                                                                                                               -5)
                                                                                                                                              (("2"
                                                                                                                                                (apply-extensionality
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "*")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "FF")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "phi")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("2"
                                                                                                                                                          (case-replace
                                                                                                                                                           "P_of(mu)(i!1)(x!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "zero_times1"
                                                                                                                                                               2)
                                                                                                                                                              (("1"
                                                                                                                                                                (case-replace
                                                                                                                                                                 "(LAMBDA y: H(i!1)(x!1, y))=lambda y:0")
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "integral_zero")
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (apply-extensionality
                                                                                                                                                                   :hide?
                                                                                                                                                                   t)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     (1
                                                                                                                                                                      2))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "H")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "*")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "phi")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "cross_product")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "member")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -3
                                                                                                                                                                 "x!1")
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (1
                                                                                                                                            -5))
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "integrable_is_measurable[T1,S1,to_measure(fm_contraction(mu,P_of(mu)(i!1)))]")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "FF")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-11
                                                                                                                            1))
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "fm_contraction")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "to_measure")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "contraction")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "x_eq")
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "m_monotone"
                                                                                                                                       ("a"
                                                                                                                                        "intersection(P_of(mu)(i!1), E!1)"
                                                                                                                                        "b"
                                                                                                                                        "P_of(mu)(i!1)"))
                                                                                                                                      (("1"
                                                                                                                                        (split)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "x_le")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "P_of_def2")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "intersection")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "subset?")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "measurable_set?")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (rewrite
                                                                                                                                         "measurable_intersection")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "measurable_set?")
                                                                                                                                          (("1"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "measurable_set?")
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (skosimp)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (skosimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (apply-extensionality
                                                                                                                     :hide?
                                                                                                                     t)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -2
                                                                                                                         -3
                                                                                                                         -4)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "contraction_integrable[T2,S2]"
                                                                                                                           ("A"
                                                                                                                            "P_of(nu)(i!1)"
                                                                                                                            "f"
                                                                                                                            "LAMBDA y: H(i!1)(x!1,y)"
                                                                                                                            "mu"
                                                                                                                            "nu"))
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -4
                                                                                                                             "x!1")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "indefinite_integrable"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (flatten
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "contraction_integral[T2,S2]"
                                                                                                                                   ("A"
                                                                                                                                    "P_of(nu)(i!1)"
                                                                                                                                    "mu"
                                                                                                                                    "nu"))
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "LAMBDA y: H(i!1)(x!1,y)")
                                                                                                                                    (("1"
                                                                                                                                      (case-replace
                                                                                                                                       "(((reals@real_fun_ops[T2].*)
                                                           (phi[T2,S2](P_of(nu)(i!1)), LAMBDA y: H(i!1)(x!1,y))))=LAMBDA y: H(i!1)(x!1,y)")
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "measure_eq_integral[T2,S2]"
                                                                                                                                           ("mu"
                                                                                                                                            "contraction(nu, P_of(nu)(i!1))"
                                                                                                                                            "nu"
                                                                                                                                            "to_measure(fm_contraction(nu,P_of(nu)(i!1)))"
                                                                                                                                            "f"
                                                                                                                                            "LAMBDA y: H(i!1)(x!1,y)"))
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -4)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (apply-extensionality
                                                                                                                                           :hide?
                                                                                                                                           t)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "H")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "*")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "cross_product")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "phi")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "member")
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "integrable_is_measurable[T2,S2,nu]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "LAMBDA y: H(i!1)(x!1,y)")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -3
                                                                                                                                 "x!1")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skosimp)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (skosimp)
                                                                                                                      (("3"
                                                                                                                        (lemma
                                                                                                                         "contraction_integrable[T2,S2]"
                                                                                                                         ("f"
                                                                                                                          "LAMBDA y: H(i!1)(x!1, y)"
                                                                                                                          "mu"
                                                                                                                          "nu"
                                                                                                                          "A"
                                                                                                                          "P_of(nu)(i!1)"))
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -7
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "indefinite_integrable[T2,S2,nu]"
                                                                                                                             ("E"
                                                                                                                              "P_of(nu)(i!1)"
                                                                                                                              "f"
                                                                                                                              "LAMBDA y: H(i!1)(x!1, y)"))
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (flatten
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "measure_eq_integrable?[T2,S2]"
                                                                                                                                   ("nu"
                                                                                                                                    " to_measure(fm_contraction(nu, P_of(nu)(i!1)))"
                                                                                                                                    "mu"
                                                                                                                                    "contraction(nu, P_of(nu)(i!1))"
                                                                                                                                    "f"
                                                                                                                                    "LAMBDA y: H(i!1)(x!1, y)"))
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -4)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           -6
                                                                                                                           "x!1")
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "integrable_is_measurable[T2,S2,nu]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "LAMBDA y: H(i!1)(x!1, y)")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (skosimp)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (skosimp)
                                                                                                                    (("4"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("4"
                                                                                                                        (lemma
                                                                                                                         "contraction_integrable[T2, S2]"
                                                                                                                         ("A"
                                                                                                                          "P_of(nu)(i!1)"
                                                                                                                          "mu"
                                                                                                                          "nu"
                                                                                                                          "f"
                                                                                                                          "LAMBDA y: H(i!1)(x!1, y)"))
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "(((reals@real_fun_ops[T2].*)
                                                         (phi[T2,S2](P_of(nu)(i!1)), LAMBDA y: H(i!1)(x!1, y))))=(LAMBDA y: H(i!1)(x!1, y))")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -8
                                                                                                                               "x!1")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "measure_eq_integrable?[T2,S2]"
                                                                                                                                   ("mu"
                                                                                                                                    "contraction(nu,P_of(nu)(i!1))"
                                                                                                                                    "nu"
                                                                                                                                    "to_measure(fm_contraction(nu, P_of(nu)(i!1)))"
                                                                                                                                    "f"
                                                                                                                                    "LAMBDA y: H(i!1)(x!1, y)"))
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -4)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (apply-extensionality
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "H")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "*")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "phi")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "cross_product")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "member")
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           -6
                                                                                                                           "x!1")
                                                                                                                          (("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-6
                                                                                                                              1))
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "integrable_is_measurable[T2,S2,nu]")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "LAMBDA y: H(i!1)(x!1, y)")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     (1
                                                                                                                      -13
                                                                                                                      -14))
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "contraction")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "to_measure")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "fm_contraction")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "x_eq")
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "m_monotone"
                                                                                                                               ("a"
                                                                                                                                "intersection(P_of(nu)(i!1), E!1)"
                                                                                                                                "b"
                                                                                                                                "P_of(nu)(i!1)"))
                                                                                                                              (("1"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "x_le")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "P_of_def2")
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "P_of_def2")
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "intersection")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "subset?")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (skosimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "measurable_set?")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (rewrite
                                                                                                                                 "measurable_intersection")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "measurable_set?")
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "measurable_set?")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (skosimp)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("4"
                                                                                                                  (skosimp)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "H")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "*")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "phi")
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_measurable?")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -11
                                                                                  -12))
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "product_measure_contraction_n"
                                                                                     ("n"
                                                                                      "i!1"
                                                                                      "E"
                                                                                      "E!1"))
                                                                                    (("2"
                                                                                      (name-replace
                                                                                       "RHS"
                                                                                       "to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                             fm_contraction(nu, P_of(nu)(i!1))))
                                                   (E!1)")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "product_measure_contraction"
                                                                                         ("E"
                                                                                          "E!1"
                                                                                          "X"
                                                                                          "P_of(mu)(i!1)"
                                                                                          "Y"
                                                                                          "P_of(nu)(i!1)"))
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "LHS"
                                                                                           "contraction(m_times(mu, nu),
                                                     cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))
                                                    (E!1)")
                                                                                          (("2"
                                                                                            (name-replace
                                                                                             "DRL1"
                                                                                             "m_times(contraction(mu, P_of(mu)(i!1)),
                                                 contraction(nu, P_of(nu)(i!1)))
                                                (E!1)")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "x_eq")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (replace
                                                                                 -11)
                                                                                (("3"
                                                                                  (skosimp)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (skosimp)
                                                                                nil
                                                                                nil)
                                                                               ("5"
                                                                                (skosimp)
                                                                                (("5"
                                                                                  (expand
                                                                                   "measurable_set?")
                                                                                  (("5"
                                                                                    (rewrite
                                                                                     "cross_product_is_sigma_times")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-12
                                                                          -13
                                                                          1))
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           :hide?
                                                                           t)
                                                                          (("2"
                                                                            (expand
                                                                             "H")
                                                                            (("2"
                                                                              (expand
                                                                               "*")
                                                                              (("2"
                                                                                (expand
                                                                                 "phi")
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "contraction_integrable"
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "indefinite_integrable"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("1"
                                                                            (rewrite
                                                                             "cross_product_is_sigma_times")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "bounded_measurable?")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (expand
                                                                         "measurable_set?")
                                                                        (("3"
                                                                          (rewrite
                                                                           "cross_product_is_sigma_times")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("3"
                                                                        (rewrite
                                                                         "cross_product_is_sigma_times")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("4"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (skosimp)
                                              (("3"
                                                (inst - "i!1")
                                                nil
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (propax) nil nil))
                                          nil)
                                         ("2"
                                          (skosimp)
                                          (("2"
                                            (inst -3 "i!1")
                                            (("2"
                                              (lemma
                                               "isf_is_integrable[[T1,T2],sigma_times(S1,S2),m_times(mu,nu)]")
                                              (("2"
                                                (inst - "H(i!1)")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-2 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (inst - "i!1")
                                            (("2"
                                              (lemma
                                               "isf_is_simple[[T1, T2], sigma_times(S1, S2),m_times(mu, nu)]")
                                              (("2"
                                                (inst - "H(i!1)")
                                                (("2"
                                                  (lemma
                                                   "simple_is_bounded_measurable[[T1, T2], sigma_times(S1, S2)]")
                                                  (("2"
                                                    (inst - "H(i!1)")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "i!1")
                                          (("2"
                                            (inst -6 "i!1")
                                            (("2"
                                              (inst -7 "i!1")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "isf_x_section[T1,T2,S1,S2,fm_contraction(mu,P_of(mu)(i!1)),fm_contraction(nu,P_of(nu)(i!1))]"
                                                   ("i"
                                                    "H(i!1)"
                                                    "x"
                                                    "x!1"))
                                                  (("1"
                                                    (lemma
                                                     "contraction_isf[T2,S2]"
                                                     ("A"
                                                      "P_of(nu)(i!1)"
                                                      "f"
                                                      "LAMBDA y: H(i!1)(x!1, y)"
                                                      "mu"
                                                      "nu"))
                                                    (("1"
                                                      (case-replace
                                                       "(((reals@real_fun_ops[T2].*)
                                   (phi[T2,S2](P_of(nu)(i!1)), LAMBDA y: H(i!1)(x!1, y))))=(LAMBDA y: H(i!1)(x!1,y))")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (lemma
                                                             "measure_eq_isf?[T2,S2]"
                                                             ("f"
                                                              "LAMBDA y: H(i!1)(x!1, y)"
                                                              "mu"
                                                              "contraction(nu,P_of(nu)(i!1))"
                                                              "nu"
                                                              "to_measure(fm_contraction(nu,P_of(nu)(i!1)))"))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     -3)
                                                                    (("1"
                                                                      (lemma
                                                                       "isf_is_integrable[T2,S2,nu]")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "LAMBDA y: H(i!1)(x!1,y)")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-10
                                                                    -11
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (expand
                                                                       "to_measure")
                                                                      (("2"
                                                                        (expand
                                                                         "x_eq")
                                                                        (("2"
                                                                          (expand
                                                                           "contraction")
                                                                          (("2"
                                                                            (lemma
                                                                             "m_monotone"
                                                                             ("a"
                                                                              "intersection(P_of(nu)(i!1), E!1)"
                                                                              "b"
                                                                              "P_of(nu)(i!1)"))
                                                                            (("1"
                                                                              (expand
                                                                               "x_le")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "fm_contraction")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "intersection")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "subset?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (rewrite
                                                                               "measurable_intersection")
                                                                              (("2"
                                                                                (expand
                                                                                 "measurable_set?")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply-extensionality
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "H")
                                                            (("2"
                                                              (expand
                                                               "*")
                                                              (("2"
                                                                (expand
                                                                 "phi")
                                                                (("2"
                                                                  (expand
                                                                   "cross_product")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "isf?")
                                                      (("2"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (lemma
                                                       "contraction_isf[[T1, T2], sigma_times[T1, T2](S1, S2)]"
                                                       ("A"
                                                        "cross_product(P_of(mu)(i!1),P_of(nu)(i!1))"
                                                        "f"
                                                        "H(i!1)"
                                                        "mu"
                                                        "m_times(mu, nu)"))
                                                      (("1"
                                                        (case-replace
                                                         "(((reals@real_fun_ops[[T1, T2]].*)
                                   (phi[[T1, T2], sigma_times[T1, T2](S1, S2)]
                                        (cross_product(P_of(mu)(i!1), P_of(nu)(i!1))),
                                    H(i!1))))=H(i!1)")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lemma
                                                               "measure_eq_isf?[[T1, T2], sigma_times[T1, T2](S1, S2)]"
                                                               ("mu"
                                                                "contraction(m_times(mu, nu),
                                            cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))"
                                                                "nu"
                                                                "to_measure[[T1, T2], sigma_times(S1, S2)]
                                    (fm_times[T1, T2, S1, S2]
                                         (fm_contraction[T1, S1](mu, P_of[T1, S1](mu)(i!1)),
                                          fm_contraction[T2, S2](nu, P_of[T2, S2](nu)(i!1))))"
                                                                "f"
                                                                "H(i!1)"))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "H")
                                                                  (("1"
                                                                    (expand
                                                                     "*")
                                                                    (("1"
                                                                      (expand
                                                                       "phi")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (expand
                                                                           "isf?")
                                                                          (("1"
                                                                            (expand
                                                                             "mu_fin?")
                                                                            (("1"
                                                                              (expand
                                                                               "nonzero_set?")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -7
                                                                                  -8
                                                                                  -9
                                                                                  -10))
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "product_measure_contraction_n"
                                                                                     ("n"
                                                                                      "i!1"
                                                                                      "E"
                                                                                      "E!1"))
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "RHS"
                                                                                       "to_measure[[T1, T2], sigma_times(S1, S2)]
                                   (fm_times[T1, T2, S1, S2]
                                        (fm_contraction[T1, S1](mu, P_of[T1, S1](mu)(i!1)),
                                         fm_contraction[T2, S2](nu, P_of[T2, S2](nu)(i!1))))
                                   (E!1)")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "product_measure_contraction"
                                                                                         ("X"
                                                                                          "P_of(mu)(i!1)"
                                                                                          "Y"
                                                                                          "P_of(nu)(i!1)"
                                                                                          "E"
                                                                                          "E!1"))
                                                                                        (("1"
                                                                                          (name-replace
                                                                                           "LHS"
                                                                                           "contraction(m_times(mu, nu),
                                           cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))
                                          (E!1)")
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "DRL1"
                                                                                             "m_times(contraction(mu, P_of(mu)(i!1)),
                                       contraction(nu, P_of(nu)(i!1)))
                                      (E!1)")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -2
                                                                                                1))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "x_eq")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "H")
                                                            (("2"
                                                              (expand
                                                               "*")
                                                              (("2"
                                                                (apply-extensionality
                                                                 :hide?
                                                                 t)
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "isf?")
                                                        (("2"
                                                          (flatten)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (rewrite
                                                           "cross_product_is_sigma_times")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2 -2 -3)
                                    (("2"
                                      (skosimp)
                                      (("2"
                                        (expand "H")
                                        (("2"
                                          (typepred "w!1")
                                          (("2"
                                            (expand
                                             "increasing_nn_simple?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (hide -2 -3)
                                                (("2"
                                                  (expand "nn_simple?")
                                                  (("2"
                                                    (inst - "i!1")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (expand
                                                           "isf?")
                                                          (("2"
                                                            (expand
                                                             "mu_fin?")
                                                            (("2"
                                                              (split 1)
                                                              (("1"
                                                                (rewrite
                                                                 "simple_times")
                                                                (("1"
                                                                  (hide
                                                                   2)
                                                                  (("1"
                                                                    (rewrite
                                                                     "phi_is_simple")
                                                                    (("1"
                                                                      (hide
                                                                       -2
                                                                       2)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "i!1")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "i!1")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (rewrite
                                                                               "cross_product_is_sigma_times")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 -1
                                                                 -2)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "i!1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (lemma
                                                                         "m_monotone[[T1,T2],sigma_times(S1,S2),m_times(mu, nu)]"
                                                                         ("a"
                                                                          "nonzero_set?((*[[T1, T2]]
                                               (phi[[T1, T2], (sigma_times(S1, S2))]
                                                    (cross_product
                                                     (P_of(mu)(i!1), P_of(nu)(i!1))),
                                                w!1(i!1))))"
                                                                          "b"
                                                                          "cross_product
                                                     (P_of(mu)(i!1), P_of(nu)(i!1))"))
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "x_le")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide
                                                                                 2)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "product_measure_contraction"
                                                                                   ("X"
                                                                                    "P_of(mu)(i!1)"
                                                                                    "Y"
                                                                                    "P_of(nu)(i!1)"
                                                                                    "E"
                                                                                    "fullset[[T1,T2]]"))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "product_measure_contraction_n"
                                                                                     ("n"
                                                                                      "i!1"
                                                                                      "E"
                                                                                      "fullset[[T1,T2]]"))
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "MU"
                                                                                       "m_times(contraction(mu, P_of(mu)(i!1)),
                                     contraction(nu, P_of(nu)(i!1)))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "x_eq")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "to_measure")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "contraction")
                                                                                                (("1"
                                                                                                  (case-replace
                                                                                                   "(intersection(cross_product(P_of(mu)(i!1), P_of(nu)(i!1)),
                                             fullset[[T1, T2]]))=(cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (apply-extensionality
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "fullset")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "subset?")
                                                                              (("2"
                                                                                (skolem
                                                                                 +
                                                                                 "z!1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "phi")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nonzero_set?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (replace
                                                                                               1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("2"
                                                                            (rewrite
                                                                             "cross_product_is_sigma_times")
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide
                                                                           2)
                                                                          (("3"
                                                                            (rewrite
                                                                             "nonzero_measurable")
                                                                            (("3"
                                                                              (hide
                                                                               2)
                                                                              (("3"
                                                                                (typepred
                                                                                 "w!1")
                                                                                (("3"
                                                                                  (expand
                                                                                   "increasing_nn_simple?")
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    (("3"
                                                                                      (inst
                                                                                       -
                                                                                       "i!1")
                                                                                      (("3"
                                                                                        (expand
                                                                                         "nn_simple?")
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (lemma
                                                                                             "phi_is_simple"
                                                                                             ("X"
                                                                                              "cross_product[T1, T2]
                                            (P_of[T1, S1](mu)(i!1), P_of[T2, S2](nu)(i!1))"))
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "simple_times"
                                                                                               ("h1"
                                                                                                "phi(cross_product[T1, T2]
                                         (P_of[T1, S1](mu)(i!1), P_of[T2, S2](nu)(i!1)))"
                                                                                                "h2"
                                                                                                "w!1(i!1)"))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "simple?")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("3"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (rewrite
                                                                                               "cross_product_is_sigma_times")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp)
                                  (("2"
                                    (hide 2 -2)
                                    (("2"
                                      (split)
                                      (("1"
                                        (expand "H")
                                        (("1"
                                          (expand "*")
                                          (("1"
                                            (typepred "w!1")
                                            (("1"
                                              (expand
                                               "increasing_nn_simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "nn_simple?")
                                                  (("1"
                                                    (inst - "i!1")
                                                    (("1"
                                                      (inst - "z!1")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "z!1")
                                                          (("1"
                                                            (expand
                                                             "phi")
                                                            (("1"
                                                              (lift-if
                                                               1)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand
                                         "pointwise_converges_upto?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand
                                             "pointwise_convergence?")
                                            (("2"
                                              (expand
                                               "pointwise_increasing?")
                                              (("2"
                                                (inst - "z!1")
                                                (("2"
                                                  (inst - "z!1")
                                                  (("2"
                                                    (rewrite
                                                     "metric_convergence_def")
                                                    (("2"
                                                      (name
                                                       "R"
                                                       "H(i!1)(z!1)-h!1(z!1)")
                                                      (("2"
                                                        (case "R>0")
                                                        (("1"
                                                          (expand
                                                           "metric_converges_to")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "R")
                                                            (("1"
                                                              (skosimp)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "n!1+i!1")
                                                                (("1"
                                                                  (expand
                                                                   "increasing?")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "i!1"
                                                                     "n!1+i!1")
                                                                    (("1"
                                                                      (hide
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2 -1)
                              (("2"
                                (expand "pointwise_converges_upto?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (split)
                                    (("1"
                                      (expand "pointwise_convergence?")
                                      (("1"
                                        (skolem + "z!1")
                                        (("1"
                                          (inst - "z!1")
                                          (("1"
                                            (rewrite
                                             "metric_convergence_def")
                                            (("1"
                                              (rewrite
                                               "metric_convergence_def")
                                              (("1"
                                                (expand
                                                 "metric_converges_to")
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst - "r!1")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "ball")
                                                        (("1"
                                                          (expand
                                                           "member")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (lemma
                                                               "P_of_def1"
                                                               ("mu"
                                                                "mu"))
                                                              (("1"
                                                                (lemma
                                                                 "P_of_def1"
                                                                 ("mu"
                                                                  "nu"))
                                                                (("1"
                                                                  (rewrite
                                                                   "extensionality_postulate"
                                                                   -2
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (rewrite
                                                                     "extensionality_postulate"
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "z!1`2")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "z!1`1")
                                                                        (("1"
                                                                          (expand
                                                                           "fullset")
                                                                          (("1"
                                                                            (expand
                                                                             "IUnion")
                                                                            (("1"
                                                                              (skolem
                                                                               -
                                                                               "j!1")
                                                                              (("1"
                                                                                (skolem
                                                                                 -
                                                                                 "i!1")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "P_of_def3"
                                                                                   ("mu"
                                                                                    "mu"
                                                                                    "i"
                                                                                    "i!1"))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "P_of_def3"
                                                                                     ("mu"
                                                                                      "nu"
                                                                                      "i"
                                                                                      "j!1"))
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -2
                                                                                        -3
                                                                                        -4
                                                                                        -5
                                                                                        -6
                                                                                        1))
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "i!1+j!1+n!1")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           "k!1")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "k!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "k!1")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "k!1")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "*")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "phi")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "member")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "cross_product")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1`2")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "z!1`1")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide -1 -3)
                                      (("2"
                                        (expand
                                         "pointwise_increasing?")
                                        (("2"
                                          (skolem + "z!1")
                                          (("2"
                                            (inst - "z!1")
                                            (("2"
                                              (expand "H")
                                              (("2"
                                                (expand "*")
                                                (("2"
                                                  (expand "phi")
                                                  (("2"
                                                    (expand
                                                     "increasing?")
                                                    (("2"
                                                      (expand
                                                       "cross_product")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (skolem
                                                           +
                                                           ("i!1"
                                                            "j!1"))
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "i!1"
                                                               "j!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "P_of_def3"
                                                                   ("mu"
                                                                    "nu"
                                                                    "i"
                                                                    "i!1"
                                                                    "j"
                                                                    "j!1"))
                                                                  (("2"
                                                                    (lemma
                                                                     "P_of_def3"
                                                                     ("mu"
                                                                      "mu"
                                                                      "i"
                                                                      "i!1"
                                                                      "j"
                                                                      "j!1"))
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "subset?")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "z!1`1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "z!1`2")
                                                                              (("2"
                                                                                (lift-if
                                                                                 1)
                                                                                (("2"
                                                                                  (case-replace
                                                                                   "P_of(mu)(i!1)(z!1`1) AND P_of(nu)(i!1)(z!1`2)")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "w!1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "increasing_nn_simple?")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nn_simple?")
                                                                                              (("2"
                                                                                                (lift-if
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "j!1")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "z!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp)
          (("2" (expand "measurable_set?")
            (("2" (rewrite "P_of_def2") nil nil)) nil))
          nil))
        nil)
       ("2" (skosimp)
        (("2" (expand "measurable_set?")
          (("2" (rewrite "P_of_def2") nil nil)) nil))
        nil))
      nil))
    nil)
   ((mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (P_of const-decl "(S)" measure_def nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (nnreal type-eq-decl nil real_types nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (set type-eq-decl nil sets nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sigma_times const-decl "sigma_algebra[[T1, T2]]" product_sigma_def
     nil)
    (nn_measurable? const-decl "bool" measure_space nil)
    (nn_measurable nonempty-type-eq-decl nil measure_space nil)
    (increasing_nn_simple nonempty-type-eq-decl nil measure_space nil)
    (increasing_nn_simple? const-decl "bool" measure_space nil)
    (sequence type-eq-decl nil sequences nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (cross_product const-decl "set[[T1, T2]]" cross_product
     "topology/")
    (phi const-decl "nat" measure_space nil)
    (* const-decl "[T -> real]" real_fun_ops "reals/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (P_of_def1 formula-decl nil measure_def nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (extensionality_postulate formula-decl nil functions nil)
    (P_of_def3 formula-decl nil measure_def nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (m_times const-decl
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_measure nil)
    (isf? const-decl "bool" isf nil)
    (isf_x_section formula-decl nil finite_fubini_scaf nil)
    (measure_eq_isf? formula-decl nil measure_equality nil)
    (contraction_isf formula-decl nil measure_contraction nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (bounded_measurable? const-decl "bool" measure_space nil)
    (isf_is_integrable judgement-tcc nil integral nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (isf nonempty-type-eq-decl nil isf nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (integral const-decl "real" integral nil)
    (integrable_integral_x_section formula-decl nil finite_fubini nil)
    (bounded_measurable nonempty-type-eq-decl nil measure_space nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (fm_contraction const-decl "finite_measure" measure_contraction
     nil)
    (x_eq const-decl "bool" extended_nnreal "extended_nnreal/")
    (to_measure const-decl "measure_type" generalized_measure_def nil)
    (fm_times const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_finite_measure nil)
    (indefinite_integrable formula-decl nil integral nil)
    (measure_eq_integral formula-decl nil measure_equality nil)
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (m_monotone formula-decl nil measure_props nil)
    (intersection const-decl "set" sets nil)
    (x_le const-decl "bool" extended_nnreal "extended_nnreal/")
    (P_of_def2 formula-decl nil measure_def nil)
    (measurable_intersection judgement-tcc nil measure_space_def nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (zero_times1 formula-decl nil real_props nil)
    (H skolem-const-decl "[nat -> [[T1, T2] -> real]]"
     fubini_tonelli_scaf nil)
    (integral_zero formula-decl nil integral nil)
    (FF skolem-const-decl "[T1 -> real]" fubini_tonelli_scaf nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (x!1 skolem-const-decl "T1" fubini_tonelli_scaf nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (x!1 skolem-const-decl "T1" fubini_tonelli_scaf nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (x!1 skolem-const-decl "T1" fubini_tonelli_scaf nil)
    (contraction_integrable formula-decl nil measure_contraction nil)
    (measure_eq_integrable? formula-decl nil measure_equality nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T1, S1]" fubini_tonelli_scaf nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T2, S2]" fubini_tonelli_scaf nil)
    (product_measure_contraction formula-decl nil fubini_tonelli_scaf
     nil)
    (product_measure_contraction_n formula-decl nil fubini_tonelli_scaf
     nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil)
    (contraction const-decl "measure_type" measure_contraction nil)
    (contraction_integral formula-decl nil measure_contraction nil)
    (integral_integral_x_section formula-decl nil finite_fubini nil)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (bounded? const-decl "bool" real_fun_preds "reals/")
    (O const-decl "T3" function_props nil)
    (monotone_convergence formula-decl nil integral_convergence nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable
     "sigma_set/")
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" countable_props
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (fullset const-decl "set" sets nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology "metric_space/")
    (metric_space_is_hausdorff name-judgement "hausdorff[real]"
     convergence_aux "metric_space/")
    (metric_space_is_hausdorff? name-judgement "(hausdorff?)"
     convergence_aux "metric_space/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     "metric_space/")
    (convergence? const-decl "bool" topological_convergence
     "topology/")
    (integrable1? const-decl "bool" product_integral_def nil)
    (converges_upto? const-decl "bool" convergence_aux "metric_space/")
    (unique_limit formula-decl nil hausdorff_convergence "topology/")
    (monotone_convergence_scaf formula-decl nil
     integral_convergence_scaf nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (null_union judgement-tcc nil measure_theory nil)
    (union const-decl "set" sets nil)
    (N!1 skolem-const-decl "set[T1]" fubini_tonelli_scaf nil)
    (N!2 skolem-const-decl "null_set[T1, S1, mu]" fubini_tonelli_scaf
     nil)
    (TRUE const-decl "bool" booleans nil)
    (null_integral1_def formula-decl nil product_integral_def nil)
    (F skolem-const-decl "[nat -> [T1 -> real]]" fubini_tonelli_scaf
     nil)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (bounded_above? const-decl "bool" real_fun_preds "reals/")
    (metric_converges_to const-decl "bool" metric_space_def
     "metric_space/")
    (> const-decl "bool" reals nil)
    (ball const-decl "set[T]" metric_space_def "metric_space/")
    (increasing? const-decl "bool" real_fun_preds "reals/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (metric_convergence_def formula-decl nil metric_space
     "metric_space/")
    (bounded_below? const-decl "bool" real_fun_preds "reals/")
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas_aux nil)
    (member const-decl "bool" sets nil)
    (subset? const-decl "bool" sets nil)
    (ae? const-decl "bool" measure_theory nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (null_integrable1 const-decl
     "[null_set[T1, S1, mu], integrable[T1, S1, mu]]"
     product_integral_def nil)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (null_set? const-decl "bool" measure_theory nil)
    (restrict const-decl "R" restrict nil)
    (integral_ae_eq formula-decl nil integral nil)
    (integral1 const-decl "integrable[T1, S1, mu]" product_integral_def
     nil)
    (integrable1 nonempty-type-eq-decl nil product_integral_def nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (h!1 skolem-const-decl
     "nn_measurable[[T1, T2], sigma_times(S1, S2)]" fubini_tonelli_scaf
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (ball_is_metric_open application-judgement
     "metric_open[real, (LAMBDA (x, y: real): abs(x - y))]"
     convergence_aux "metric_space/")
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (integral_ae_le formula-decl nil integral nil)
    (integral_nonneg formula-decl nil integral nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (isf_is_simple judgement-tcc nil isf nil)
    (simple_is_bounded_measurable judgement-tcc nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (integrable? const-decl "bool" integral nil)
    (nn_simple? const-decl "bool" measure_space nil)
    (phi_is_simple judgement-tcc nil measure_space nil)
    (simple_times judgement-tcc nil measure_space nil)
    (nonzero_measurable formula-decl nil isf nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     fubini_tonelli_scaf nil)
    (<= const-decl "bool" reals nil)
    (pointwise_converges_upto? const-decl "bool" pointwise_convergence
     nil)
    (nn_measurable_def formula-decl nil measure_space nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil))
   shostak))
 (fubini_tonelli_scaf2_TCC1 0
  (fubini_tonelli_scaf2_TCC1-1 nil 3474177088
   ("" (skosimp) (("" (assert) nil nil)) nil) nil nil))
 (fubini_tonelli_scaf2 0
  (fubini_tonelli_scaf2-1 nil 3474177112
   ("" (skosimp)
    ((""
      (case "forall n: measurable_set?(P_of(mu)(n)) & mu(P_of(mu)(n))`1")
      (("1"
        (case "forall n: measurable_set?(P_of(nu)(n)) & nu(P_of(nu)(n))`1")
        (("1" (typepred "h!1")
          (("1" (lemma "nn_measurable_def" ("f" "h!1"))
            (("1" (expand "nn_measurable?" -2)
              (("1" (flatten -2)
                (("1" (replace -2)
                  (("1" (replace -3)
                    (("1" (assert)
                      (("1" (skosimp)
                        (("1"
                          (name "H" "LAMBDA (n: nat):
                    *[[T1, T2]](phi[[T1, T2],(sigma_times(S1,S2))](cross_product(P_of(mu)(n), P_of(nu)(n))),w!1(n))")
                          (("1"
                            (case "pointwise_converges_upto?(H, h!1)")
                            (("1" (hide -2 -3)
                              (("1"
                                (case
                                 "forall (z:[T1,T2],i):0<=H(i)(z)&H(i)(z)<=h!1(z)")
                                (("1"
                                  (case "forall i: isf?(H(i))")
                                  (("1"
                                    (case
                                     "forall i,y: integrable?(lambda x: H(i)(x,y))")
                                    (("1"
                                      (case
                                       "forall i: bounded_measurable?[[T1,T2],sigma_times(S1,S2)](H(i))")
                                      (("1"
                                        (case
                                         "forall i: integrable?(H(i))")
                                        (("1"
                                          (name
                                           "F"
                                           "lambda i: lambda y: integral(LAMBDA x: H(i)(x, y))")
                                          (("1"
                                            (case
                                             "FORALL i: integrable?(F(i)) & integral(F(i)) = integral(H(i))")
                                            (("1"
                                              (case
                                               "pointwise_increasing?(F)")
                                              (("1"
                                                (case
                                                 "forall i,y: 0<=F(i)(y)")
                                                (("1"
                                                  (case-replace
                                                   "integrable?(h!1)")
                                                  (("1"
                                                    (simplify 1)
                                                    (("1"
                                                      (case
                                                       "real_fun_preds.bounded?(integral[[T1, T2], sigma_times(S1, S2),m_times(mu,nu)] o H)")
                                                      (("1"
                                                        (case
                                                         "integral[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)] o H = integral[T2,S2,nu] o F")
                                                        (("1"
                                                          (lemma
                                                           "monotone_convergence[T2,S2,nu]"
                                                           ("F" "F"))
                                                          (("1"
                                                            (case-replace
                                                             "ae_increasing?(F)")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (hide
                                                                 -2)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "f!1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "ae_convergence?"
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (expand
                                                                               "fullset"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "ae_convergence_in?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "ae_in?")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "E!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "negligible_set?")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           -
                                                                                           "N!1")
                                                                                          (("1"
                                                                                            (flatten
                                                                                             -1)
                                                                                            (("1"
                                                                                              (case
                                                                                               "forall y: (not N!1(y)) => convergence?(LAMBDA n: F(n)(y), f!1(y))")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (case-replace
                                                                                                   "integrable2?(h!1)")
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "integral2[T1, T2, S1, S2, mu, nu](h!1)")
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "f!1")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "integral_ae_eq[T2, S2, nu]"
                                                                                                         ("f"
                                                                                                          "f!1"
                                                                                                          "h"
                                                                                                          "integral2[T1, T2, S1, S2, mu, nu](h!1)"))
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2
                                                                                                               1
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "monotone_convergence_scaf[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)]"
                                                                                                                 ("F"
                                                                                                                  "H"
                                                                                                                  "f"
                                                                                                                  "h!1"))
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -12)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -23)
                                                                                                                    (("1"
                                                                                                                      (flatten
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -12
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (name-replace
                                                                                                                           "L1"
                                                                                                                           "integral(h!1)")
                                                                                                                          (("1"
                                                                                                                            (name-replace
                                                                                                                             "L2"
                                                                                                                             "integral(f!1)")
                                                                                                                            (("1"
                                                                                                                              (name-replace
                                                                                                                               "UU"
                                                                                                                               "integral[T2, S2, nu] o F")
                                                                                                                              (("1"
                                                                                                                                (hide-all-but
                                                                                                                                 (-2
                                                                                                                                  1
                                                                                                                                  -11))
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "converges_upto?")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "hausdorff_convergence.unique_limit"
                                                                                                                                       ("u"
                                                                                                                                        "UU"
                                                                                                                                        "l1"
                                                                                                                                        "L1"
                                                                                                                                        "l2"
                                                                                                                                        "L2"))
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2
                                                                                                             -1
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "ae_eq?")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "restrict")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "pointwise_ae?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "integral2")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (name
                                                                                                                         "N!2"
                                                                                                                         "null_integrable2[T1, T2, S1, S2, mu, nu](h!1)`1")
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "null_integrable2[T1, T2, S1, S2, mu, nu](h!1)`1")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "null_union[T2, S2, nu]"
                                                                                                                               ("N1"
                                                                                                                                "N!1"
                                                                                                                                "N2"
                                                                                                                                "N!2"))
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "ae?"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "ae_in?")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "union[T2](N!1, N!2)")
                                                                                                                                      (("1"
                                                                                                                                        (skolem
                                                                                                                                         +
                                                                                                                                         "y!1")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "union"
                                                                                                                                           1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -5
                                                                                                                                                   "y!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "null_integral2_def[T1, T2, S1, S2, mu, nu]"
                                                                                                                                                       ("h2"
                                                                                                                                                        "h!1"
                                                                                                                                                        "N2"
                                                                                                                                                        "null_integrable2[T1, T2, S1, S2, mu, nu](h!1)`1"
                                                                                                                                                        "g"
                                                                                                                                                        "null_integrable2[T1, T2, S1, S2, mu, nu](h!1)`2"
                                                                                                                                                        "y"
                                                                                                                                                        "y!1"))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -2
                                                                                                                                                               *
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 -2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2
                                                                                                                                                                   -3
                                                                                                                                                                   -4
                                                                                                                                                                   -5
                                                                                                                                                                   -7
                                                                                                                                                                   -8
                                                                                                                                                                   -9
                                                                                                                                                                   -10
                                                                                                                                                                   1
                                                                                                                                                                   2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "monotone_convergence_scaf[T1,S1,mu]"
                                                                                                                                                                     ("F"
                                                                                                                                                                      "lambda i: lambda x: H(i)(x,y!1)"
                                                                                                                                                                      "f"
                                                                                                                                                                      "LAMBDA (x: T1): h!1(x, y!1)"))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "o"
                                                                                                                                                                           -2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (name-replace
                                                                                                                                                                             "L2"
                                                                                                                                                                             "integral(LAMBDA (x: T1): h!1(x, y!1))")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "converges_upto?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "F")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (name-replace
                                                                                                                                                                                     "UU"
                                                                                                                                                                                     "LAMBDA (x_1: nat): integral(LAMBDA x: H(x_1)(x, y!1))")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                       (-2
                                                                                                                                                                                        -5
                                                                                                                                                                                        1))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "hausdorff_convergence.unique_limit"
                                                                                                                                                                                         ("u"
                                                                                                                                                                                          "UU"
                                                                                                                                                                                          "l1"
                                                                                                                                                                                          "f!1(y!1)"
                                                                                                                                                                                          "l2"
                                                                                                                                                                                          "L2"))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-14
                                                                                                                                                                          1))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "pointwise_converges_upto?")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "pointwise_convergence?")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "(x!1,y!1)")
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "pointwise_increasing?")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "(x!1,y!1)")
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (hide
                                                                                                                                                                         -3
                                                                                                                                                                         2)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (expand
                                                                                                                                                                           "bounded?")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (split)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "bounded_above?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 +
                                                                                                                                                                                 "f!1(y!1)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (skolem
                                                                                                                                                                                   +
                                                                                                                                                                                   "i!1")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "o"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "F(i!1)(y!1)<=f!1(y!1)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "F")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                         (-2
                                                                                                                                                                                          -5
                                                                                                                                                                                          1))
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (name
                                                                                                                                                                                           "R"
                                                                                                                                                                                           "F(i!1)(y!1)-f!1(y!1)")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "R>0")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "metric_convergence_def")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "metric_converges_to")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -
                                                                                                                                                                                                   "R")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "pointwise_increasing?")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -
                                                                                                                                                                                                         "i!1+n!1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -
                                                                                                                                                                                                           "y!1")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "increasing?")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -
                                                                                                                                                                                                               "i!1"
                                                                                                                                                                                                               "i!1+n!1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (grind)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "bounded_below?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 +
                                                                                                                                                                                 "0")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skolem
                                                                                                                                                                                   +
                                                                                                                                                                                   "i!1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "o")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -4
                                                                                                                                                                                       "i!1"
                                                                                                                                                                                       "y!1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "F")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (skosimp)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -11
                                                                                                                                                                         "i!1"
                                                                                                                                                                         "y!1")
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (decompose-equality
                                                                                                                                                             1)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "negligible_set?"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           +
                                                                                                                                           "union[T2](N!1, N!2)")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "subset?")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "integrable2?")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "N!1"
                                                                                                         "f!1")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "y!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "monotone_convergence_scaf[T1,S1,mu]"
                                                                                                                   ("F"
                                                                                                                    "lambda i: LAMBDA x: H(i)(x, y!1)"
                                                                                                                    "f"
                                                                                                                    "LAMBDA (x: T1): h!1(x, y!1)"))
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "converges_upto?")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "o"
                                                                                                                               (-2
                                                                                                                                -3))
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "hausdorff_convergence.unique_limit"
                                                                                                                                 ("u"
                                                                                                                                  "LAMBDA n: F(n)(y!1)"
                                                                                                                                  "l1"
                                                                                                                                  "integral(LAMBDA (x: T1): h!1(x, y!1))"
                                                                                                                                  "l2"
                                                                                                                                  "f!1(y!1)"))
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "F")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-17
                                                                                                                        1))
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "pointwise_converges_upto?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "pointwise_convergence?")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "pointwise_increasing?")
                                                                                                                              (("2"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "(x!1,y!1)")
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skosimp)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -2
                                                                                                                                     "(x!1,y!1)")
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (case
                                                                                                                       "real_fun_preds.bounded?(lambda i: F(i)(y!1))")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "F")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "o ")
                                                                                                                          (("1"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -8
                                                                                                                          -9
                                                                                                                          1))
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "bounded?")
                                                                                                                          (("2"
                                                                                                                            (split)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "bounded_above?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 +
                                                                                                                                 "f!1(y!1)")
                                                                                                                                (("1"
                                                                                                                                  (skolem
                                                                                                                                   +
                                                                                                                                   "i!1")
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "metric_convergence_def"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "metric_converges_to")
                                                                                                                                      (("1"
                                                                                                                                        (name
                                                                                                                                         "R"
                                                                                                                                         "F(i!1)(y!1)-f!1(y!1)")
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "R>0")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "R")
                                                                                                                                            (("1"
                                                                                                                                              (skosimp)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "pointwise_increasing?")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -5
                                                                                                                                                   "y!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "increasing?")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "i!1+n!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -5
                                                                                                                                                         "i!1"
                                                                                                                                                         "i!1+n!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           -4)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "ball")
                                                                                                                                                              (("1"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "bounded_below?")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 +
                                                                                                                                 "0")
                                                                                                                                (("2"
                                                                                                                                  (skolem
                                                                                                                                   +
                                                                                                                                   "i!1")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "i!1"
                                                                                                                                     "y!1")
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (skosimp)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -14
                                                                                                                       "i!1"
                                                                                                                       "y!1")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "y!1")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "subset?"
                                                                                                       -2)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "y!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-6 1))
                                                              (("2"
                                                                (expand
                                                                 "ae_increasing?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_increasing?")
                                                                  (("2"
                                                                    (expand
                                                                     "increasing?")
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "emptyset[T2]")
                                                                      (("2"
                                                                        (skolem
                                                                         +
                                                                         "y!1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "y!1")
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (apply-extensionality
                                                           :hide?
                                                           t)
                                                          (("2"
                                                            (expand
                                                             "o"
                                                             1)
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "x!1")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (skosimp)
                                                          (("3"
                                                            (inst
                                                             -5
                                                             "x1!1")
                                                            (("3"
                                                              (flatten)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (expand
                                                           "bounded?")
                                                          (("2"
                                                            (expand
                                                             "o ")
                                                            (("2"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "bounded_above?")
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "integral(h!1)")
                                                                  (("1"
                                                                    (skolem
                                                                     +
                                                                     "i!1")
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "i!1")
                                                                      (("1"
                                                                        (lemma
                                                                         "integral_ae_le"
                                                                         ("f1"
                                                                          "H(i!1)"
                                                                          "f2"
                                                                          "h!1"))
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-11
                                                                              1))
                                                                            (("1"
                                                                              (expand
                                                                               "pointwise_converges_upto?")
                                                                              (("1"
                                                                                (expand
                                                                                 "ae_le?")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "pointwise_ae?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "ae?")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "fullset")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ae_in?")
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "emptyset[[T1,T2]]")
                                                                                            (("1"
                                                                                              (skolem
                                                                                               +
                                                                                               "z!1")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "pointwise_convergence?")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "pointwise_increasing?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "z!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "z!1")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "metric_convergence_def")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (name
                                                                                                                 "R"
                                                                                                                 "H(i!1)(z!1)-h!1(z!1)")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "R>0")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "metric_converges_to")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "R")
                                                                                                                      (("1"
                                                                                                                        (skosimp)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "increasing?")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "i!1+n!1")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "i!1"
                                                                                                                               "i!1+n!1")
                                                                                                                              (("1"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "bounded_below?")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "0")
                                                                  (("2"
                                                                    (skolem
                                                                     +
                                                                     "n!1")
                                                                    (("2"
                                                                      (lemma
                                                                       "integral_nonneg[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)]"
                                                                       ("f"
                                                                        "H(n!1)"))
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (inst
                                                                             -10
                                                                             "x!1"
                                                                             "n!1")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace 1 2)
                                                    (("2"
                                                      (simplify 2)
                                                      (("2"
                                                        (expand
                                                         "integrable2?"
                                                         -15)
                                                        (("2"
                                                          (skolem
                                                           -
                                                           ("N!1"
                                                            "g!1"))
                                                          (("2"
                                                            (typepred
                                                             "g!1")
                                                            (("2"
                                                              (lemma
                                                               "monotone_convergence_scaf[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)]"
                                                               ("F"
                                                                "H"
                                                                "f"
                                                                "h!1"))
                                                              (("1"
                                                                (replace
                                                                 -12)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "bounded?")
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (expand
                                                                           "bounded_above?")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "integral[T2,S2,nu](g!1)")
                                                                            (("1"
                                                                              (skolem
                                                                               +
                                                                               "n!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "o"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -4
                                                                                   "n!1")
                                                                                  (("1"
                                                                                    (flatten
                                                                                     -4)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -5
                                                                                       1
                                                                                       rl)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "integral_ae_le[T2, S2, nu]"
                                                                                         ("f1"
                                                                                          "F(n!1)"
                                                                                          "f2"
                                                                                          "g!1"))
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "ae_le?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "pointwise_ae?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "ae?")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "fullset")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ae_in?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "N!1")
                                                                                                        (("1"
                                                                                                          (skolem
                                                                                                           +
                                                                                                           "y!1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -17
                                                                                                                 "y!1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "integral_ae_le[T1,S1,mu]"
                                                                                                                       ("f1"
                                                                                                                        "lambda x: H(n!1)(x,y!1)"
                                                                                                                        "f2"
                                                                                                                        "LAMBDA (x: T1): h!1(x, y!1)"))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "F"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (1
                                                                                                                              -11))
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "ae_le?")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "pointwise_ae?")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "ae?")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "fullset")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "ae_in?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "emptyset[T1]")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "(x!1,y!1)"
                                                                                                                                               "n!1")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (inst
                                                                                                                         -9
                                                                                                                         "n!1"
                                                                                                                         "y!1")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "bounded_below?")
                                                                          (("2"
                                                                            (inst
                                                                             +
                                                                             "0")
                                                                            (("2"
                                                                              (skolem
                                                                               +
                                                                               "n!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "o")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "integral_nonneg[[T1, T2], sigma_times(S1, S2),m_times(mu,nu)]"
                                                                                   ("f"
                                                                                    "H(n!1)"))
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -10
                                                                                           "x!1"
                                                                                           "n!1")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skosimp)
                                                  (("2"
                                                    (hide-all-but
                                                     (-8 1 -6))
                                                    (("2"
                                                      (expand "F")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "i!1"
                                                         "y!1")
                                                        (("2"
                                                          (lemma
                                                           "integral_nonneg[T1,S1,mu]"
                                                           ("f"
                                                            "LAMBDA x: H(i!1)(x, y!1)"))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (skosimp)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "(x!1,y!1)"
                                                                 "i!1")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2 -1 -2)
                                                (("2"
                                                  (expand
                                                   "pointwise_converges_upto?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "pointwise_increasing?")
                                                      (("2"
                                                        (skolem
                                                         +
                                                         "y!1")
                                                        (("2"
                                                          (expand
                                                           "increasing?")
                                                          (("2"
                                                            (skolem
                                                             +
                                                             ("i!1"
                                                              "j!1"))
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "F")
                                                                (("2"
                                                                  (inst-cp
                                                                   -4
                                                                   "i!1"
                                                                   "y!1")
                                                                  (("2"
                                                                    (inst
                                                                     -4
                                                                     "j!1"
                                                                     "y!1")
                                                                    (("2"
                                                                      (lemma
                                                                       "integral_ae_le"
                                                                       ("f1"
                                                                        "LAMBDA x: H(i!1)(x, y!1)"
                                                                        "f2"
                                                                        "LAMBDA x: H(j!1)(x, y!1)"))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-1
                                                                            -9
                                                                            1))
                                                                          (("1"
                                                                            (expand
                                                                             "ae_le?")
                                                                            (("1"
                                                                              (expand
                                                                               "pointwise_ae?")
                                                                              (("1"
                                                                                (expand
                                                                                 "ae?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "fullset")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "ae_in?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "emptyset[T1]")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "(x!1,y!1)")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "i!1"
                                                                                               "j!1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 2)
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst -9 "i!1")
                                                  (("2"
                                                    (inst -10 "i!1")
                                                    (("2"
                                                      (expand "F")
                                                      (("2"
                                                        (inst - "i!1")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "i!1")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "i!1"
                                                             "_")
                                                            (("2"
                                                              (lemma
                                                               "integrable_integral_y_section[T1,T2,S1,S2,fm_contraction(mu,P_of(mu)(i!1)),fm_contraction(nu,P_of(nu)(i!1))]"
                                                               ("h"
                                                                "H(i!1)"))
                                                              (("1"
                                                                (lemma
                                                                 "integral_integral_y_section[T1,T2,S1,S2,fm_contraction(mu,P_of(mu)(i!1)),fm_contraction(nu,P_of(nu)(i!1))]"
                                                                 ("h"
                                                                  "H(i!1)"))
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "contraction_integral[[T1, T2], sigma_times(S1, S2)]"
                                                                     ("A"
                                                                      "cross_product(P_of(mu)(i!1),P_of(nu)(i!1))"
                                                                      "f"
                                                                      "H(i!1)"
                                                                      "mu"
                                                                      "m_times(mu,nu)"))
                                                                    (("1"
                                                                      (case-replace
                                                                       "(((reals@real_fun_ops[[T1, T2]].*)
                                           (phi[[T1, T2], sigma_times(S1, S2)]
                                                (cross_product(P_of(mu)(i!1), P_of(nu)(i!1))),
                                            H(i!1))))=H(i!1)")
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           rl)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (case
                                                                               "forall (E:(sigma_times(S1, S2))): x_eq(contraction(m_times(mu, nu),
                                                          cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))(E),to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                              fm_contraction(nu, P_of(nu)(i!1))))(E))")
                                                                              (("1"
                                                                                (lemma
                                                                                 "measure_eq_integrable?[[T1, T2], sigma_times(S1, S2)]"
                                                                                 ("mu"
                                                                                  "contraction(m_times(mu, nu),
                                                        cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))"
                                                                                  "nu"
                                                                                  "to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                                fm_contraction(nu, P_of(nu)(i!1))))"
                                                                                  "f"
                                                                                  "H(i!1)"))
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "contraction_integrable[[T1, T2], sigma_times(S1, S2)]"
                                                                                     ("A"
                                                                                      "cross_product(P_of(mu)(i!1), P_of(nu)(i!1))"
                                                                                      "f"
                                                                                      "H(i!1)"
                                                                                      "mu"
                                                                                      "m_times(mu, nu)"))
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "indefinite_integrable"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "contraction_integral[[T1, T2], sigma_times(S1, S2)]"
                                                                                           ("A"
                                                                                            "cross_product(P_of(mu)(i!1), P_of(nu)(i!1))"
                                                                                            "mu"
                                                                                            "m_times(mu,nu)"))
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "H(i!1)")
                                                                                            (("1"
                                                                                              (case-replace
                                                                                               "(((reals@real_fun_ops[[T1, T2]].*)
                                                 (phi[[T1, T2], sigma_times(S1, S2)]
                                                      (cross_product(P_of(mu)(i!1), P_of(nu)(i!1))),
                                                  H(i!1))))=H(i!1)")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "measure_eq_integral[[T1, T2], sigma_times(S1, S2)]"
                                                                                                   ("f"
                                                                                                    "H(i!1)"
                                                                                                    "mu"
                                                                                                    "contraction(m_times(mu, nu),
                                                            cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))"
                                                                                                    "nu"
                                                                                                    "to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                                    fm_contraction(nu, P_of(nu)(i!1))))"))
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -4)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1
                                                                                                           -7
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "RHS"
                                                                                                             "integral[[T1, T2], sigma_times(S1, S2), m_times(mu, nu)](H(i!1))")
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1
                                                                                                               -2
                                                                                                               -3
                                                                                                               -4
                                                                                                               -5
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "forall (E:(S1)): x_eq(contraction(mu,P_of(mu)(i!1))(E),to_measure(fm_contraction(mu,P_of(mu)(i!1)))(E))")
                                                                                                                (("1"
                                                                                                                  (case-replace
                                                                                                                   "(LAMBDA y: integral[T1,S1,to_measure(fm_contraction(mu, P_of(mu)(i!1)))](LAMBDA x: H(i!1)(x, y)))=(LAMBDA y: integral(LAMBDA x: H(i!1)(x, y)))")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (name-replace
                                                                                                                       "FF"
                                                                                                                       "LAMBDA y: integral(LAMBDA x: H(i!1)(x, y))")
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "FORALL (E: (S2)):
                                              x_eq(contraction(nu, P_of(nu)(i!1))(E),
                                                   to_measure(fm_contraction(nu, P_of(nu)(i!1)))(E))")
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "measure_eq_integrable?[T2,S2]"
                                                                                                                           ("mu"
                                                                                                                            "contraction(nu, P_of(nu)(i!1))"
                                                                                                                            "nu"
                                                                                                                            "to_measure(fm_contraction(nu, P_of(nu)(i!1)))"
                                                                                                                            "f"
                                                                                                                            "FF"))
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -4)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "measure_eq_integral[T2,S2]"
                                                                                                                                   ("f"
                                                                                                                                    "FF"
                                                                                                                                    "mu"
                                                                                                                                    "contraction(nu, P_of(nu)(i!1))"
                                                                                                                                    "nu"
                                                                                                                                    "to_measure(fm_contraction(nu, P_of(nu)(i!1)))"))
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         "contraction_integrable"
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "contraction_integral"
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (case-replace
                                                                                                                                             "(((reals@real_fun_ops[T2].*)(phi[T2, S2](P_of(nu)(i!1)), FF)))=FF")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               -1
                                                                                                                                               -2
                                                                                                                                               -3
                                                                                                                                               2
                                                                                                                                               -4
                                                                                                                                               -5)
                                                                                                                                              (("2"
                                                                                                                                                (apply-extensionality
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "*")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "FF")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "phi")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("2"
                                                                                                                                                          (case-replace
                                                                                                                                                           "P_of(nu)(i!1)(x!1)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "zero_times1"
                                                                                                                                                               2)
                                                                                                                                                              (("1"
                                                                                                                                                                (case-replace
                                                                                                                                                                 "(LAMBDA x: H(i!1)(x, x!1))=lambda x:0")
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "integral_zero")
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (apply-extensionality
                                                                                                                                                                   :hide?
                                                                                                                                                                   t)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     (1
                                                                                                                                                                      2))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "H")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "*")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "phi")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "cross_product")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "member")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -3
                                                                                                                                                                 "x!1")
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (1
                                                                                                                                            -5))
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "integrable_is_measurable[T2,S2,to_measure(fm_contraction(nu, P_of(nu)(i!1)))]")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "FF")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-11
                                                                                                                            1))
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "fm_contraction")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "to_measure")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "contraction")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "x_eq")
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "m_monotone"
                                                                                                                                       ("a"
                                                                                                                                        "intersection(P_of(nu)(i!1), E!1)"
                                                                                                                                        "b"
                                                                                                                                        "P_of(nu)(i!1)"))
                                                                                                                                      (("1"
                                                                                                                                        (split)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "x_le")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (expand
                                                                                                                                           "intersection")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "subset?")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (rewrite
                                                                                                                                         "measurable_intersection")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "measurable_set?")
                                                                                                                                          (("3"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (skosimp)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (skosimp)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (apply-extensionality
                                                                                                                     :hide?
                                                                                                                     t)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -2
                                                                                                                         -3
                                                                                                                         -4)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "contraction_integrable[T1, S1]"
                                                                                                                           ("A"
                                                                                                                            "P_of(mu)(i!1)"
                                                                                                                            "f"
                                                                                                                            "LAMBDA x: H(i!1)(x, x!1)"
                                                                                                                            "mu"
                                                                                                                            "mu"))
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -4
                                                                                                                             "x!1")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "indefinite_integrable"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (flatten
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "contraction_integral[T1,S1]"
                                                                                                                                   ("A"
                                                                                                                                    "P_of(mu)(i!1)"
                                                                                                                                    "mu"
                                                                                                                                    "mu"))
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "LAMBDA x: H(i!1)(x, x!1)")
                                                                                                                                    (("1"
                                                                                                                                      (case-replace
                                                                                                                                       "(((reals@real_fun_ops[T1].*)
                                                           (phi[T1, S1](P_of(mu)(i!1)), LAMBDA x: H(i!1)(x, x!1))))=LAMBDA x: H(i!1)(x, x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "measure_eq_integral[T1,S1]"
                                                                                                                                           ("mu"
                                                                                                                                            "contraction(mu, P_of(mu)(i!1))"
                                                                                                                                            "nu"
                                                                                                                                            "to_measure(fm_contraction(mu, P_of(mu)(i!1)))"
                                                                                                                                            "f"
                                                                                                                                            "LAMBDA x: H(i!1)(x, x!1)"))
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -4)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (apply-extensionality
                                                                                                                                           :hide?
                                                                                                                                           t)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "H")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "*")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "cross_product")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "phi")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "member")
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (inst
                                                                                                                             -3
                                                                                                                             "x!1")
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "integrable_is_measurable[T1, S1,mu]")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "LAMBDA x: H(i!1)(x, x!1)")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skosimp)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (skosimp)
                                                                                                                      (("3"
                                                                                                                        (inst
                                                                                                                         -6
                                                                                                                         "y!1")
                                                                                                                        (("3"
                                                                                                                          (lemma
                                                                                                                           "measure_eq_integrable?[T1,S1]"
                                                                                                                           ("mu"
                                                                                                                            "contraction(mu, P_of(mu)(i!1))"
                                                                                                                            "nu"
                                                                                                                            "to_measure(fm_contraction(mu, P_of(mu)(i!1)))"
                                                                                                                            "f"
                                                                                                                            "LAMBDA x: H(i!1)(x, y!1)"))
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1
                                                                                                                               *
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1
                                                                                                                                 -2
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "contraction_integrable[T1,S1]"
                                                                                                                                   ("mu"
                                                                                                                                    "mu"
                                                                                                                                    "A"
                                                                                                                                    "P_of(mu)(i!1)"
                                                                                                                                    "f"
                                                                                                                                    "LAMBDA x: H(i!1)(x, y!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "indefinite_integrable[T1, S1, mu]"
                                                                                                                                         ("E"
                                                                                                                                          "P_of(mu)(i!1)"
                                                                                                                                          "f"
                                                                                                                                          " LAMBDA x: H(i!1)(x, y!1)"))
                                                                                                                                        (("1"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (lemma
                                                                                                                                     "integrable_is_measurable[T1,S1,mu]")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "LAMBDA x: H(i!1)(x, y!1)")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (skosimp)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("4"
                                                                                                                    (skosimp)
                                                                                                                    (("4"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("4"
                                                                                                                        (lemma
                                                                                                                         "contraction_integrable[T1, S1]"
                                                                                                                         ("A"
                                                                                                                          "P_of(mu)(i!1)"
                                                                                                                          "mu"
                                                                                                                          "mu"
                                                                                                                          "f"
                                                                                                                          "LAMBDA x: H(i!1)(x, y!1)"))
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "(((reals@real_fun_ops[T1].*)
                                                         (phi[T1, S1](P_of(mu)(i!1)), LAMBDA x: H(i!1)(x, y!1))))=(LAMBDA x: H(i!1)(x, y!1))")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -8
                                                                                                                               "y!1")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -8)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "measure_eq_integrable?[T1,S1]"
                                                                                                                                   ("mu"
                                                                                                                                    "contraction(mu, P_of(mu)(i!1))"
                                                                                                                                    "nu"
                                                                                                                                    "to_measure(fm_contraction(mu, P_of(mu)(i!1)))"
                                                                                                                                    "f"
                                                                                                                                    "LAMBDA x: H(i!1)(x, y!1)"))
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -4)
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (apply-extensionality
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "H")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "*")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "phi")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "cross_product")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "member")
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           -6
                                                                                                                           "y!1")
                                                                                                                          (("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-6
                                                                                                                              1))
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "integrable_is_measurable[T1, S1,mu]")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "LAMBDA x: H(i!1)(x, y!1)")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     (1
                                                                                                                      -13
                                                                                                                      -14))
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "contraction")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "to_measure")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "fm_contraction")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "x_eq")
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "m_monotone"
                                                                                                                               ("a"
                                                                                                                                "intersection(P_of(mu)(i!1), E!1)"
                                                                                                                                "b"
                                                                                                                                "P_of(mu)(i!1)"))
                                                                                                                              (("1"
                                                                                                                                (split)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "x_le")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "intersection")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "subset?")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (skosimp)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (rewrite
                                                                                                                                 "measurable_intersection")
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "measurable_set?")
                                                                                                                                  (("3"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (skosimp)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("4"
                                                                                                                  (skosimp)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (apply-extensionality
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "H")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "*")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "phi")
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "bounded_measurable?")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -11
                                                                                  -12))
                                                                                (("2"
                                                                                  (skosimp)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "product_measure_contraction_n"
                                                                                     ("n"
                                                                                      "i!1"
                                                                                      "E"
                                                                                      "E!1"))
                                                                                    (("2"
                                                                                      (name-replace
                                                                                       "RHS"
                                                                                       "to_measure(fm_times(fm_contraction(mu, P_of(mu)(i!1)),
                                                             fm_contraction(nu, P_of(nu)(i!1))))
                                                   (E!1)")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "product_measure_contraction"
                                                                                         ("E"
                                                                                          "E!1"
                                                                                          "X"
                                                                                          "P_of(mu)(i!1)"
                                                                                          "Y"
                                                                                          "P_of(nu)(i!1)"))
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "LHS"
                                                                                           "contraction(m_times(mu, nu),
                                                     cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))
                                                    (E!1)")
                                                                                          (("2"
                                                                                            (name-replace
                                                                                             "DRL1"
                                                                                             "m_times(contraction(mu, P_of(mu)(i!1)),
                                                 contraction(nu, P_of(nu)(i!1)))
                                                (E!1)")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "x_eq")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (replace
                                                                                 -11)
                                                                                (("3"
                                                                                  (skosimp)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (skosimp)
                                                                                nil
                                                                                nil)
                                                                               ("5"
                                                                                (skosimp)
                                                                                (("5"
                                                                                  (expand
                                                                                   "measurable_set?")
                                                                                  (("5"
                                                                                    (rewrite
                                                                                     "cross_product_is_sigma_times")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-12
                                                                          -13
                                                                          1))
                                                                        (("2"
                                                                          (apply-extensionality
                                                                           :hide?
                                                                           t)
                                                                          (("2"
                                                                            (expand
                                                                             "H")
                                                                            (("2"
                                                                              (expand
                                                                               "*")
                                                                              (("2"
                                                                                (expand
                                                                                 "phi")
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       "contraction_integrable"
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "indefinite_integrable"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("1"
                                                                            (rewrite
                                                                             "cross_product_is_sigma_times")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "bounded_measurable?")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (expand
                                                                         "measurable_set?")
                                                                        (("3"
                                                                          (rewrite
                                                                           "cross_product_is_sigma_times")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "measurable_set?")
                                                                      (("3"
                                                                        (rewrite
                                                                         "cross_product_is_sigma_times")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("3"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("4"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (skosimp)
                                              (("3"
                                                (inst - "i!1")
                                                nil
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (propax) nil nil))
                                          nil)
                                         ("2"
                                          (skosimp)
                                          (("2"
                                            (inst -3 "i!1")
                                            (("2"
                                              (lemma
                                               "isf_is_integrable[[T1,T2],sigma_times(S1,S2),m_times(mu,nu)]")
                                              (("2"
                                                (inst - "H(i!1)")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-2 1))
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (inst - "i!1")
                                            (("2"
                                              (lemma
                                               "isf_is_simple[[T1, T2], sigma_times(S1, S2),m_times(mu, nu)]")
                                              (("2"
                                                (inst - "H(i!1)")
                                                (("2"
                                                  (lemma
                                                   "simple_is_bounded_measurable[[T1, T2], sigma_times(S1, S2)]")
                                                  (("2"
                                                    (inst - "H(i!1)")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "i!1")
                                          (("2"
                                            (inst -6 "i!1")
                                            (("2"
                                              (inst -7 "i!1")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "isf_y_section[T1,T2,S1,S2,fm_contraction(mu,P_of(mu)(i!1)),fm_contraction(nu,P_of(nu)(i!1))]"
                                                   ("i"
                                                    "H(i!1)"
                                                    "y"
                                                    "y!1"))
                                                  (("1"
                                                    (lemma
                                                     "contraction_isf[T1,S1]"
                                                     ("A"
                                                      "P_of(mu)(i!1)"
                                                      "f"
                                                      "LAMBDA x: H(i!1)(x, y!1)"
                                                      "mu"
                                                      "mu"))
                                                    (("1"
                                                      (case-replace
                                                       "(((reals@real_fun_ops[T1].*)
                                   (phi[T1, S1](P_of(mu)(i!1)), LAMBDA x: H(i!1)(x, y!1))))=(LAMBDA x: H(i!1)(x, y!1))")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (lemma
                                                             "measure_eq_isf?[T1,S1]"
                                                             ("f"
                                                              "LAMBDA x: H(i!1)(x, y!1)"
                                                              "mu"
                                                              "contraction(mu, P_of(mu)(i!1))"
                                                              "nu"
                                                              "to_measure(fm_contraction(mu, P_of(mu)(i!1)))"))
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     -3)
                                                                    (("1"
                                                                      (lemma
                                                                       "isf_is_integrable[T1, S1, mu]")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "LAMBDA x: H(i!1)(x, y!1)")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-10
                                                                    -11
                                                                    1))
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (expand
                                                                       "to_measure")
                                                                      (("2"
                                                                        (expand
                                                                         "x_eq")
                                                                        (("2"
                                                                          (expand
                                                                           "contraction")
                                                                          (("2"
                                                                            (lemma
                                                                             "m_monotone"
                                                                             ("a"
                                                                              "intersection(P_of(mu)(i!1), E!1)"
                                                                              "b"
                                                                              "P_of(mu)(i!1)"))
                                                                            (("1"
                                                                              (expand
                                                                               "x_le")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "fm_contraction")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "intersection")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "subset?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (rewrite
                                                                               "measurable_intersection")
                                                                              (("2"
                                                                                (expand
                                                                                 "measurable_set?")
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (apply-extensionality
                                                         :hide?
                                                         t)
                                                        (("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "H")
                                                            (("2"
                                                              (expand
                                                               "*")
                                                              (("2"
                                                                (expand
                                                                 "phi")
                                                                (("2"
                                                                  (expand
                                                                   "cross_product")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "isf?")
                                                      (("2"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (lemma
                                                       "contraction_isf[[T1, T2], sigma_times[T1, T2](S1, S2)]"
                                                       ("A"
                                                        "cross_product(P_of(mu)(i!1),P_of(nu)(i!1))"
                                                        "f"
                                                        "H(i!1)"
                                                        "mu"
                                                        "m_times(mu, nu)"))
                                                      (("1"
                                                        (case-replace
                                                         "(((reals@real_fun_ops[[T1, T2]].*)
                                   (phi[[T1, T2], sigma_times[T1, T2](S1, S2)]
                                        (cross_product(P_of(mu)(i!1), P_of(nu)(i!1))),
                                    H(i!1))))=H(i!1)")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lemma
                                                               "measure_eq_isf?[[T1, T2], sigma_times[T1, T2](S1, S2)]"
                                                               ("mu"
                                                                "contraction(m_times(mu, nu),
                                            cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))"
                                                                "nu"
                                                                "to_measure[[T1, T2], sigma_times(S1, S2)]
                                    (fm_times[T1, T2, S1, S2]
                                         (fm_contraction[T1, S1](mu, P_of[T1, S1](mu)(i!1)),
                                          fm_contraction[T2, S2](nu, P_of[T2, S2](nu)(i!1))))"
                                                                "f"
                                                                "H(i!1)"))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "H")
                                                                  (("1"
                                                                    (expand
                                                                     "*")
                                                                    (("1"
                                                                      (expand
                                                                       "phi")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (expand
                                                                           "isf?")
                                                                          (("1"
                                                                            (expand
                                                                             "mu_fin?")
                                                                            (("1"
                                                                              (expand
                                                                               "nonzero_set?")
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (1
                                                                                  -7
                                                                                  -8
                                                                                  -9
                                                                                  -10))
                                                                                (("1"
                                                                                  (skosimp)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "product_measure_contraction_n"
                                                                                     ("n"
                                                                                      "i!1"
                                                                                      "E"
                                                                                      "E!1"))
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "RHS"
                                                                                       "to_measure[[T1, T2], sigma_times(S1, S2)]
                                   (fm_times[T1, T2, S1, S2]
                                        (fm_contraction[T1, S1](mu, P_of[T1, S1](mu)(i!1)),
                                         fm_contraction[T2, S2](nu, P_of[T2, S2](nu)(i!1))))
                                   (E!1)")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "product_measure_contraction"
                                                                                         ("X"
                                                                                          "P_of(mu)(i!1)"
                                                                                          "Y"
                                                                                          "P_of(nu)(i!1)"
                                                                                          "E"
                                                                                          "E!1"))
                                                                                        (("1"
                                                                                          (name-replace
                                                                                           "LHS"
                                                                                           "contraction(m_times(mu, nu),
                                           cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))
                                          (E!1)")
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "DRL1"
                                                                                             "m_times(contraction(mu, P_of(mu)(i!1)),
                                       contraction(nu, P_of(nu)(i!1)))
                                      (E!1)")
                                                                                            (("1"
                                                                                              (hide-all-but
                                                                                               (-1
                                                                                                -2
                                                                                                1))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "x_eq")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "H")
                                                            (("2"
                                                              (expand
                                                               "*")
                                                              (("2"
                                                                (apply-extensionality
                                                                 :hide?
                                                                 t)
                                                                (("2"
                                                                  (expand
                                                                   "phi")
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "isf?")
                                                        (("2"
                                                          (flatten)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "measurable_set?")
                                                        (("3"
                                                          (rewrite
                                                           "cross_product_is_sigma_times")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2 -2 -3)
                                    (("2"
                                      (skosimp)
                                      (("2"
                                        (expand "H")
                                        (("2"
                                          (typepred "w!1")
                                          (("2"
                                            (expand
                                             "increasing_nn_simple?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (hide -2 -3)
                                                (("2"
                                                  (expand "nn_simple?")
                                                  (("2"
                                                    (inst - "i!1")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (expand
                                                           "isf?")
                                                          (("2"
                                                            (expand
                                                             "mu_fin?")
                                                            (("2"
                                                              (split 1)
                                                              (("1"
                                                                (rewrite
                                                                 "simple_times")
                                                                (("1"
                                                                  (hide
                                                                   2)
                                                                  (("1"
                                                                    (rewrite
                                                                     "phi_is_simple")
                                                                    (("1"
                                                                      (hide
                                                                       -2
                                                                       2)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "i!1")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "i!1")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (rewrite
                                                                               "cross_product_is_sigma_times")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 -1
                                                                 -2)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "i!1")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "i!1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (lemma
                                                                         "m_monotone[[T1,T2],sigma_times(S1,S2),m_times(mu, nu)]"
                                                                         ("a"
                                                                          "nonzero_set?((*[[T1, T2]]
                                               (phi[[T1, T2], (sigma_times(S1, S2))]
                                                    (cross_product
                                                     (P_of(mu)(i!1), P_of(nu)(i!1))),
                                                w!1(i!1))))"
                                                                          "b"
                                                                          "cross_product
                                                     (P_of(mu)(i!1), P_of(nu)(i!1))"))
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "x_le")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide
                                                                                 2)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "product_measure_contraction"
                                                                                   ("X"
                                                                                    "P_of(mu)(i!1)"
                                                                                    "Y"
                                                                                    "P_of(nu)(i!1)"
                                                                                    "E"
                                                                                    "fullset[[T1,T2]]"))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "product_measure_contraction_n"
                                                                                     ("n"
                                                                                      "i!1"
                                                                                      "E"
                                                                                      "fullset[[T1,T2]]"))
                                                                                    (("1"
                                                                                      (name-replace
                                                                                       "MU"
                                                                                       "m_times(contraction(mu, P_of(mu)(i!1)),
                                     contraction(nu, P_of(nu)(i!1)))")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "x_eq")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "to_measure")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "contraction")
                                                                                                (("1"
                                                                                                  (case-replace
                                                                                                   "(intersection(cross_product(P_of(mu)(i!1), P_of(nu)(i!1)),
                                             fullset[[T1, T2]]))=(cross_product(P_of(mu)(i!1), P_of(nu)(i!1)))")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (apply-extensionality
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "fullset")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "subset?")
                                                                              (("2"
                                                                                (skolem
                                                                                 +
                                                                                 "z!1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "*")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "phi")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nonzero_set?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (replace
                                                                                               1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "measurable_set?")
                                                                          (("2"
                                                                            (rewrite
                                                                             "cross_product_is_sigma_times")
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide
                                                                           2)
                                                                          (("3"
                                                                            (rewrite
                                                                             "nonzero_measurable")
                                                                            (("3"
                                                                              (hide
                                                                               2)
                                                                              (("3"
                                                                                (typepred
                                                                                 "w!1")
                                                                                (("3"
                                                                                  (expand
                                                                                   "increasing_nn_simple?")
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    (("3"
                                                                                      (inst
                                                                                       -
                                                                                       "i!1")
                                                                                      (("3"
                                                                                        (expand
                                                                                         "nn_simple?")
                                                                                        (("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (lemma
                                                                                             "phi_is_simple"
                                                                                             ("X"
                                                                                              "cross_product[T1, T2]
                                            (P_of[T1, S1](mu)(i!1), P_of[T2, S2](nu)(i!1))"))
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "simple_times"
                                                                                               ("h1"
                                                                                                "phi(cross_product[T1, T2]
                                         (P_of[T1, S1](mu)(i!1), P_of[T2, S2](nu)(i!1)))"
                                                                                                "h2"
                                                                                                "w!1(i!1)"))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "simple?")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil)
                                                                                               ("3"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (rewrite
                                                                                               "cross_product_is_sigma_times")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (skosimp)
                                  (("2"
                                    (hide 2 -2)
                                    (("2"
                                      (split)
                                      (("1"
                                        (expand "H")
                                        (("1"
                                          (expand "*")
                                          (("1"
                                            (typepred "w!1")
                                            (("1"
                                              (expand
                                               "increasing_nn_simple?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "nn_simple?")
                                                  (("1"
                                                    (inst - "i!1")
                                                    (("1"
                                                      (inst - "z!1")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst
                                                           -
                                                           "z!1")
                                                          (("1"
                                                            (expand
                                                             "phi")
                                                            (("1"
                                                              (lift-if
                                                               1)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand
                                         "pointwise_converges_upto?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand
                                             "pointwise_convergence?")
                                            (("2"
                                              (expand
                                               "pointwise_increasing?")
                                              (("2"
                                                (inst - "z!1")
                                                (("2"
                                                  (inst - "z!1")
                                                  (("2"
                                                    (rewrite
                                                     "metric_convergence_def")
                                                    (("2"
                                                      (name
                                                       "R"
                                                       "H(i!1)(z!1)-h!1(z!1)")
                                                      (("2"
                                                        (case "R>0")
                                                        (("1"
                                                          (expand
                                                           "metric_converges_to")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "R")
                                                            (("1"
                                                              (skosimp)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "n!1+i!1")
                                                                (("1"
                                                                  (expand
                                                                   "increasing?")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "i!1"
                                                                     "n!1+i!1")
                                                                    (("1"
                                                                      (hide
                                                                       -5
                                                                       -6
                                                                       -7)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2 -1)
                              (("2"
                                (expand "pointwise_converges_upto?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (split)
                                    (("1"
                                      (expand "pointwise_convergence?")
                                      (("1"
                                        (skolem + "z!1")
                                        (("1"
                                          (inst - "z!1")
                                          (("1"
                                            (rewrite
                                             "metric_convergence_def")
                                            (("1"
                                              (rewrite
                                               "metric_convergence_def")
                                              (("1"
                                                (expand
                                                 "metric_converges_to")
                                                (("1"
                                                  (skosimp)
                                                  (("1"
                                                    (inst - "r!1")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand "ball")
                                                        (("1"
                                                          (expand
                                                           "member")
                                                          (("1"
                                                            (expand
                                                             "H")
                                                            (("1"
                                                              (lemma
                                                               "P_of_def1"
                                                               ("mu"
                                                                "mu"))
                                                              (("1"
                                                                (lemma
                                                                 "P_of_def1"
                                                                 ("mu"
                                                                  "nu"))
                                                                (("1"
                                                                  (rewrite
                                                                   "extensionality_postulate"
                                                                   -2
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (rewrite
                                                                     "extensionality_postulate"
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "z!1`2")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "z!1`1")
                                                                        (("1"
                                                                          (expand
                                                                           "fullset")
                                                                          (("1"
                                                                            (expand
                                                                             "IUnion")
                                                                            (("1"
                                                                              (skolem
                                                                               -
                                                                               "j!1")
                                                                              (("1"
                                                                                (skolem
                                                                                 -
                                                                                 "i!1")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "P_of_def3"
                                                                                   ("mu"
                                                                                    "mu"
                                                                                    "i"
                                                                                    "i!1"))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "P_of_def3"
                                                                                     ("mu"
                                                                                      "nu"
                                                                                      "i"
                                                                                      "j!1"))
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -2
                                                                                        -3
                                                                                        -4
                                                                                        -5
                                                                                        -6
                                                                                        1))
                                                                                      (("1"
                                                                                        (inst
                                                                                         +
                                                                                         "i!1+j!1+n!1")
                                                                                        (("1"
                                                                                          (skolem
                                                                                           +
                                                                                           "k!1")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "k!1")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "k!1")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "k!1")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "*")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "phi")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "member")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "cross_product")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "subset?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "z!1`2")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "z!1`1")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide -1 -3)
                                      (("2"
                                        (expand
                                         "pointwise_increasing?")
                                        (("2"
                                          (skolem + "z!1")
                                          (("2"
                                            (inst - "z!1")
                                            (("2"
                                              (expand "H")
                                              (("2"
                                                (expand "*")
                                                (("2"
                                                  (expand "phi")
                                                  (("2"
                                                    (expand
                                                     "increasing?")
                                                    (("2"
                                                      (expand
                                                       "cross_product")
                                                      (("2"
                                                        (expand
                                                         "member")
                                                        (("2"
                                                          (skolem
                                                           +
                                                           ("i!1"
                                                            "j!1"))
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "i!1"
                                                               "j!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "P_of_def3"
                                                                   ("mu"
                                                                    "nu"
                                                                    "i"
                                                                    "i!1"
                                                                    "j"
                                                                    "j!1"))
                                                                  (("2"
                                                                    (lemma
                                                                     "P_of_def3"
                                                                     ("mu"
                                                                      "mu"
                                                                      "i"
                                                                      "i!1"
                                                                      "j"
                                                                      "j!1"))
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "subset?")
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "z!1`1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "z!1`2")
                                                                              (("2"
                                                                                (lift-if
                                                                                 1)
                                                                                (("2"
                                                                                  (case-replace
                                                                                   "P_of(mu)(i!1)(z!1`1) AND P_of(nu)(i!1)(z!1`2)")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replace
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "w!1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "increasing_nn_simple?")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nn_simple?")
                                                                                              (("2"
                                                                                                (lift-if
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "j!1")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "z!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp)
          (("2" (expand "measurable_set?")
            (("2" (rewrite "P_of_def2") nil nil)) nil))
          nil))
        nil)
       ("2" (skosimp)
        (("2" (expand "measurable_set?")
          (("2" (rewrite "P_of_def2") nil nil)) nil))
        nil))
      nil))
    nil)
   ((mu formal-const-decl "sigma_finite_measure[T1, S1]"
     fubini_tonelli_scaf nil)
    (P_of const-decl "(S)" measure_def nil)
    (sigma_finite_measure nonempty-type-eq-decl nil measure_def nil)
    (sigma_finite_measure? const-decl "bool" measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     "extended_nnreal/")
    (nnreal type-eq-decl nil real_types nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (S1 formal-const-decl "sigma_algebra[T1]" fubini_tonelli_scaf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (set type-eq-decl nil sets nil)
    (T1 formal-type-decl nil fubini_tonelli_scaf nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (P_of_def2 formula-decl nil measure_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sigma_times const-decl "sigma_algebra[[T1, T2]]" product_sigma_def
     nil)
    (nn_measurable? const-decl "bool" measure_space nil)
    (nn_measurable nonempty-type-eq-decl nil measure_space nil)
    (increasing_nn_simple nonempty-type-eq-decl nil measure_space nil)
    (increasing_nn_simple? const-decl "bool" measure_space nil)
    (sequence type-eq-decl nil sequences nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def
     nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (cross_product const-decl "set[[T1, T2]]" cross_product
     "topology/")
    (phi const-decl "nat" measure_space nil)
    (* const-decl "[T -> real]" real_fun_ops "reals/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (P_of_def1 formula-decl nil measure_def nil)
    (IUnion const-decl "set[T]" indexed_sets nil)
    (extensionality_postulate formula-decl nil functions nil)
    (P_of_def3 formula-decl nil measure_def nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (m_times const-decl
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_measure nil)
    (isf? const-decl "bool" isf nil)
    (isf_y_section formula-decl nil finite_fubini_scaf nil)
    (measure_eq_isf? formula-decl nil measure_equality nil)
    (contraction_isf formula-decl nil measure_contraction nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (bounded_measurable? const-decl "bool" measure_space nil)
    (isf_is_integrable judgement-tcc nil integral nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (isf nonempty-type-eq-decl nil isf nil)
    (integrable nonempty-type-eq-decl nil integral nil)
    (integral const-decl "real" integral nil)
    (integrable_integral_y_section formula-decl nil finite_fubini nil)
    (bounded_measurable nonempty-type-eq-decl nil measure_space nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure? const-decl "bool" generalized_measure_def nil)
    (finite_measure nonempty-type-eq-decl nil generalized_measure_def
     nil)
    (fm_contraction const-decl "finite_measure" measure_contraction
     nil)
    (x_eq const-decl "bool" extended_nnreal "extended_nnreal/")
    (to_measure const-decl "measure_type" generalized_measure_def nil)
    (fm_times const-decl
     "finite_measure[[T1, T2], sigma_times(S1, S2)]"
     product_finite_measure nil)
    (indefinite_integrable formula-decl nil integral nil)
    (measure_eq_integral formula-decl nil measure_equality nil)
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (subset_algebra_intersection application-judgement "(S)"
     fubini_tonelli_scaf nil)
    (m_monotone formula-decl nil measure_props nil)
    (intersection const-decl "set" sets nil)
    (x_le const-decl "bool" extended_nnreal "extended_nnreal/")
    (measurable_intersection judgement-tcc nil measure_space_def nil)
    (integrable_is_measurable judgement-tcc nil integral nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (zero_times1 formula-decl nil real_props nil)
    (H skolem-const-decl "[nat -> [[T1, T2] -> real]]"
     fubini_tonelli_scaf nil)
    (integral_zero formula-decl nil integral nil)
    (FF skolem-const-decl "[T2 -> real]" fubini_tonelli_scaf nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (y!1 skolem-const-decl "T2" fubini_tonelli_scaf nil)
    (phi_is_simple application-judgement "simple" fubini_tonelli_scaf
     nil)
    (x!1 skolem-const-decl "T2" fubini_tonelli_scaf nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (y!1 skolem-const-decl "T2" fubini_tonelli_scaf nil)
    (contraction_integrable formula-decl nil measure_contraction nil)
    (measure_eq_integrable? formula-decl nil measure_equality nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T1, S1]" fubini_tonelli_scaf nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[T2, S2]" fubini_tonelli_scaf nil)
    (product_measure_contraction formula-decl nil fubini_tonelli_scaf
     nil)
    (product_measure_contraction_n formula-decl nil fubini_tonelli_scaf
     nil)
    (cross_product_is_sigma_times formula-decl nil product_sigma nil)
    (contraction const-decl "measure_type" measure_contraction nil)
    (contraction_integral formula-decl nil measure_contraction nil)
    (integral_integral_y_section formula-decl nil finite_fubini nil)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (bounded? const-decl "bool" real_fun_preds "reals/")
    (O const-decl "T3" function_props nil)
    (monotone_convergence formula-decl nil integral_convergence nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable
     "sigma_set/")
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set[T]" countable_props
     "sets_aux/")
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (ae_convergence? const-decl "bool" measure_theory nil)
    (fullset const-decl "set" sets nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology "metric_space/")
    (metric_space_is_hausdorff name-judgement "hausdorff[real]"
     convergence_aux "metric_space/")
    (metric_space_is_hausdorff? name-judgement "(hausdorff?)"
     convergence_aux "metric_space/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     "metric_space/")
    (convergence? const-decl "bool" topological_convergence
     "topology/")
    (integrable2? const-decl "bool" product_integral_def nil)
    (converges_upto? const-decl "bool" convergence_aux "metric_space/")
    (unique_limit formula-decl nil hausdorff_convergence "topology/")
    (monotone_convergence_scaf formula-decl nil
     integral_convergence_scaf nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (member const-decl "bool" sets nil)
    (null_union judgement-tcc nil measure_theory nil)
    (union const-decl "set" sets nil)
    (N!1 skolem-const-decl "set[T2]" fubini_tonelli_scaf nil)
    (N!2 skolem-const-decl "null_set[T2, S2, nu]" fubini_tonelli_scaf
     nil)
    (TRUE const-decl "bool" booleans nil)
    (null_integral2_def formula-decl nil product_integral_def nil)
    (F skolem-const-decl "[nat -> [T2 -> real]]" fubini_tonelli_scaf
     nil)
    (pointwise_convergence? const-decl "bool" pointwise_convergence
     nil)
    (bounded_below? const-decl "bool" real_fun_preds "reals/")
    (bounded_above? const-decl "bool" real_fun_preds "reals/")
    (metric_convergence_def formula-decl nil metric_space
     "metric_space/")
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ball_is_metric_open application-judgement
     "metric_open[real, (LAMBDA (x, y: real): abs(x - y))]"
     convergence_aux "metric_space/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (ball const-decl "set[T]" metric_space_def "metric_space/")
    (minus_real_is_real application-judgement "real" reals nil)
    (increasing? const-decl "bool" real_fun_preds "reals/")
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (metric_converges_to const-decl "bool" metric_space_def
     "metric_space/")
    (> const-decl "bool" reals nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas_aux nil)
    (subset? const-decl "bool" sets nil)
    (ae? const-decl "bool" measure_theory nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (null_integrable2 const-decl
     "[null_set[T2, S2, nu], integrable[T2, S2, nu]]"
     product_integral_def nil)
    (null_set nonempty-type-eq-decl nil measure_theory nil)
    (null_set? const-decl "bool" measure_theory nil)
    (restrict const-decl "R" restrict nil)
    (integral_ae_eq formula-decl nil integral nil)
    (integral2 const-decl "integrable[T2, S2, nu]" product_integral_def
     nil)
    (integrable2 nonempty-type-eq-decl nil product_integral_def nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (ae_convergence_in? const-decl "bool" measure_theory nil)
    (ae_increasing? const-decl "bool" measure_theory nil)
    (h!1 skolem-const-decl
     "nn_measurable[[T1, T2], sigma_times(S1, S2)]" fubini_tonelli_scaf
     nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (R skolem-const-decl "real" fubini_tonelli_scaf nil)
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (integral_ae_le formula-decl nil integral nil)
    (integral_nonneg formula-decl nil integral nil)
    (measurable_fullset name-judgement "measurable_set[T, S]"
     fubini_tonelli_scaf nil)
    (subset_algebra_fullset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (null_emptyset name-judgement "null_set" fubini_tonelli_scaf nil)
    (subset_algebra_emptyset name-judgement "(S)" fubini_tonelli_scaf
     nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (isf_is_simple judgement-tcc nil isf nil)
    (simple_is_bounded_measurable judgement-tcc nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (i!1 skolem-const-decl "nat" fubini_tonelli_scaf nil)
    (integrable? const-decl "bool" integral nil)
    (nn_simple? const-decl "bool" measure_space nil)
    (phi_is_simple judgement-tcc nil measure_space nil)
    (simple_times judgement-tcc nil measure_space nil)
    (nonzero_measurable formula-decl nil isf nil)
    (contraction_is_sigma_finite application-judgement
     "sigma_finite_measure[[T1, T2], sigma_times(S1, S2)]"
     fubini_tonelli_scaf nil)
    (<= const-decl "bool" reals nil)
    (pointwise_converges_upto? const-decl "bool" pointwise_convergence
     nil)
    (nn_measurable_def formula-decl nil measure_space nil)
    (T2 formal-type-decl nil fubini_tonelli_scaf nil)
    (S2 formal-const-decl "sigma_algebra[T2]" fubini_tonelli_scaf nil)
    (nu formal-const-decl "sigma_finite_measure[T2, S2]"
     fubini_tonelli_scaf nil))
   shostak)))

