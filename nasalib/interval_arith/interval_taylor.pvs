%% taylor.pvs

interval_taylor[(IMPORTING interval) X:StrictInterval]: THEORY
BEGIN

  IMPORTING interval_deriv[X],
            reals@factorial,
            analysis@taylors[Xt]

  x,a,y : VAR Xt
  n     : VAR nat

  Taylor : THEOREM
    FORALL (f:(Diffn?(n)),DF:ARRAY[nat->Interval]):
      (FORALL (k:below(n)):Dn(k,f)(a) ## DF(k)) AND
      (FORALL (y):Dn(n,f)(y) ## DF(n))
      IMPLIES
      f(x) ## Sigma(0,n,LAMBDA(k:nat):(Div(Mult(DF(k),Pow(Sub(X,[|a|]),k)),[|factorial(k)|])))

  Midpoint: MACRO Interval =
    [|midpoint(X)|]

  F,DF,D2F : VAR [Interval->Interval]
  f        : VAR (Diff?)
  f2       : VAR (Diffn?(2))
  DF0      : VAR Interval

  Taylor1(F,DF,DF0) : Interval =
    Add(Mult(DF(DF0),Sub(X,Midpoint)),F(Midpoint))

  Taylor1_Midpoint : THEOREM
    f(midpoint(X)) ## F(Midpoint) AND
    (FORALL (y): D(f)(y) ## DF(X))
    IMPLIES
      f(x) ## Taylor1(F,DF,X)

  Taylor2(F,DF,D2F) : Interval =
    Add(Div(Mult(D2F(X),Sq(Sub(X,Midpoint))),[|2|]),Taylor1(F,DF,Midpoint))

  Taylor2_Midpoint : THEOREM
    f2(midpoint(X))    ## F(Midpoint)  AND
    D(f2)(midpoint(X)) ## DF(Midpoint) AND
    (FORALL (y): D(D(f2))(y) ## D2F(X))
    IMPLIES
      f2(x) ## Taylor2(F,DF,D2F)

END interval_taylor
