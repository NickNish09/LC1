weber_stage 
[
  S:    posnat,
  D:    posnat,
  error: real
]: THEORY  


  BEGIN

  IMPORTING 
    weber_overlap[S, real, <=],
    inexact_reduce_stage[S, D, error]

  d1, d2: VAR below(D)
  epsilon, delta: VAR nonneg_real
  cf: VAR consensus_function
  X: VAR posnat

  sent: VAR sent_vec_stage
  rcvd: VAR rcvd_matrix_stage
  check: VAR check_stage

  src_set: VAR non_empty_finite_set[below(S)]
  dst_set: VAR non_empty_finite_set[below(D)]

  overlap_imprecision: LEMMA
      enabled_within?(rcvd, check)(src_set) AND
      intersection_majority?(rcvd, check)(src_set) AND 
      single_imprecision?(rcvd, check, epsilon)(src_set)
    IMPLIES
      overlap_imprecision?(rcvd, check, tau(src_set), epsilon)

  weber_convergence: THEOREM
      quorum_imprecision?(sent, rcvd, check, tau(src_set), epsilon) AND
      intersection_majority?(rcvd, check)(src_set) AND 
      single_imprecision?(rcvd, check, epsilon)(src_set) AND
      convergent?(cf, max_length(rcvd, check, tau(src_set)), X) AND
      enabled_within?(rcvd, check)(src_set) AND
      v_max(sent, src_set) - v_min(sent, src_set) <= delta
    IMPLIES
      v_max(reduce_choice(tau(src_set), cf)(rcvd, check), dst_set) -
        v_min(reduce_choice(tau(src_set), cf)(rcvd, check), dst_set) 
          <= delta * ((X - 1) / X) + epsilon

  weber_mean_convergence: COROLLARY
      X = max_length(rcvd, check, tau(src_set)) AND
      quorum_imprecision?(sent, rcvd, check, tau(src_set), epsilon) AND
      intersection_majority?(rcvd, check)(src_set) AND 
      single_imprecision?(rcvd, check, epsilon)(src_set) AND
      enabled_within?(rcvd, check)(src_set) AND
      v_max(sent, src_set) - v_min(sent, src_set) <= delta
    IMPLIES
      v_max(reduce_choice(tau(src_set), mean)(rcvd, check), dst_set) -
        v_min(reduce_choice(tau(src_set), mean)(rcvd, check), dst_set) 
          <= delta * ((X - 1) / X) + epsilon

  weber_midpoint_convergence: COROLLARY
      quorum_imprecision?(sent, rcvd, check, tau(src_set), epsilon) AND
      intersection_majority?(rcvd, check)(src_set) AND 
      single_imprecision?(rcvd, check, epsilon)(src_set) AND
      enabled_within?(rcvd, check)(src_set) AND
      v_max(sent, src_set) - v_min(sent, src_set) <= delta
    IMPLIES
      v_max(reduce_choice(tau(src_set), midpoint)(rcvd, check), dst_set) -
        v_min(reduce_choice(tau(src_set), midpoint)(rcvd, check), dst_set) 
          <= delta / 2 + epsilon

  END weber_stage
