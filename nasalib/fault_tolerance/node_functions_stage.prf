(node_functions_stage
 (nominal_filter_TCC1 0
  (nominal_filter_TCC1-1 nil 3474886230
   ("" (skosimp*)
    (("" (expand "vec2seq")
      (("" (use "card_empty?[below(S)]")
        (("" (typepred "x1!1`2") (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((vec2seq const-decl "finite_sequence[T]" node nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (T formal-nonempty-type-decl nil node_functions_stage nil)
    (vec type-eq-decl nil node nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (nodeid_nonempty type-eq-decl nil node nil)
    (below type-eq-decl nil naturalnumbers nil)
    (S formal-const-decl "posnat" node_functions_stage nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_empty? formula-decl nil finite_sets nil))
   nil)))

